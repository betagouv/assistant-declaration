{
  "name": "assistant-declaration",
  "version": "0.0.0",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/betagouv/assistant-declaration.git"
  },
  "license": "MIT",
  "scripts": {
    "setup": "playwright install chromium",
    "postinstall": "patch-package",
    "dev": "n",
    "dev:app": "only-include-used-icons && npm run dev:app:command",
    "dev:app:command": "dotenv-run-script .env.test -- dev:app:command:unsecure",
    "dev:app:command:unsecure": "next dev",
    "dev:storybook": "only-include-used-icons && npm run dev:storybook:command",
    "dev:storybook:command": "storybook dev -p 6006 --no-open",
    "build": "only-include-used-icons && concurrently --kill-others-on-fail -c \"auto\" \"npm:build:app:command\" \"npm:build:storybook:command\"",
    "build:test": "only-include-used-icons && concurrently --kill-others-on-fail -c \"auto\" \"npm:build:app:test:command\" \"npm:build:storybook:command\"",
    "build:app": "only-include-used-icons && npm run build:app:command",
    "build:app:command": "npm run db:schema:compile && next build",
    "build:app:test": "only-include-used-icons && npm run build:app:test:command",
    "build:app:test:command": "dotenv-run-script .env.test && npm run db:schema:compile && next build",
    "build:storybook": "only-include-used-icons && npm run build:storybook:command",
    "build:storybook:command": "storybook build --test",
    "build:storybook:with-ui": "only-include-used-icons && npm run build:storybook:command",
    "build:storybook:with-ui:command": "storybook build",
    "start:test": "concurrently --kill-others -c \"auto\" \"npm:start:app:test\" \"npm:start:storybook\"",
    "start": "concurrently --kill-others -c \"auto\" \"npm:start:app\" \"npm:start:storybook\"",
    "start:app:test": "dotenv-run-script .env.test -- start:app",
    "start:app": "next start -p $PORT",
    "start:storybook": "serve -l 6006 storybook-static",
    "cli": "dotenv-run-script .env.test -- cli:unsecure",
    "cli:unsecure": "tsx src/cli/index.ts",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "lint:prepare": "npm run db:schema:compile",
    "lint": "npm run lint:es && npm run lint:ts",
    "lint:es": "TIMING=1 eslint --ext .js,.jsx,.ts,.tsx,.mdx .",
    "lint:ts": "tsc --noEmit --incremental false",
    "accessibility": "next export && lhci autorun",
    "accessibility:open": "lhci open",
    "test:prepare": "npm run db:schema:compile && npm run setup",
    "test:unit": "npm run jest --- --ci --passWithNoTests",
    "test:unit:watch": "npm run jest --- --watch",
    "test:coverage": "concurrently --kill-others-on-fail -c \"auto\" \"npm:coverage:app\" \"npm:coverage:storybook\"",
    "test:app:coverage": "npm run jest --- --coverage",
    "test:storybook:coverage": "echo not working for now, see https://github.com/storybookjs/storybook/discussions/16841#discussioncomment-4605661",
    "test:storybook:coverage:backup": "start-server-and-test start http://localhost:6006 test:storybook:coverage:command",
    "test:storybook:coverage:command": "test-storybook --index-json --coverage",
    "test:e2e": "concurrently --kill-others-on-fail -c \"auto\" \"npm:test:e2e:app\" \"npm:test:e2e:storybook\"",
    "test:e2e:headless": "concurrently --kill-others-on-fail -c \"auto\" \"npm:test:e2e:app:headless\" \"npm:test:e2e:storybook:headless\"",
    "test:e2e:app": "echo we no longer use cypress since having storybook e2e is far enough",
    "test:e2e:app:headless": "echo we no longer use cypress since having storybook e2e is far enough",
    "test:e2e:storybook": "start-server-and-test start:storybook http://localhost:6006 test:e2e:storybook:command",
    "test:e2e:storybook:command": "TIME_TO_WAIT_AFTER_CHANGING_THEME_MS=1000 test-storybook --index-json -- --no-headless",
    "test:e2e:storybook:headless": "start-server-and-test start:storybook http://localhost:6006 test:e2e:storybook:headless:command",
    "test:e2e:storybook:headless:command": "TIME_TO_WAIT_AFTER_CHANGING_THEME_MS=750 test-storybook --index-json",
    "db:schema:check": "dotenv-run-script .env.test -- db:schema:check:unsecure",
    "db:schema:check:unsecure": "prisma validate",
    "db:schema:compile": "prisma generate",
    "db:push": "dotenv-run-script .env.test -- db:push:unsecure",
    "db:push:unsecure": "prisma db push",
    "db:seed": "dotenv-run-script .env.test -- db:seed:unsecure",
    "db:seed:unsecure": "prisma db seed",
    "db:migration:prepare": "dotenv-run-script .env.test -- db:migration:prepare:unsecure",
    "db:migration:prepare:unsecure": "prisma migrate dev",
    "db:migration:prepare:manually": "dotenv-run-script .env.test -- db:migration:prepare:manually:unsecure",
    "db:migration:prepare:manually:unsecure": "prisma migrate dev --create-only",
    "db:migration:deploy": "dotenv-run-script .env.test -- db:migration:deploy:unsecure",
    "db:migration:deploy:unsecure": "prisma migrate deploy",
    "db:studio": "dotenv-run-script .env.test -- db:studio:unsecure",
    "db:studio:unsecure": "prisma studio",
    "client:generate": "npm run client:mapado:generate",
    "client:mapado:generate": "echo \"cannot be done programmatically because the documentation is generating the .json file on demand, that's why the seen url has the blob: protocol, the url changes at any refresh so you have to download it manually and point to your local path directly\" || openapi-ts -i blob:https://ticketing.mapado.net/169a0938-cf05-4982-a96e-89538fa00213 -o src/client/mapado -c @hey-api/client-fetch",
    "client:supersoniks:generate": "openapi-ts -i https://toReplaceByOrganizationDomain/api/ministery/definition.yaml -o src/client/supersoniks -c @hey-api/client-fetch",
    "scalingo-postbuild": "npm run build:app && ./prepare-standalone.sh",
    "clean": "rm -rf .next && rm -rf node_modules",
    "chromatic": "react-dsfr update-icons && chromatic --build-script-name build:storybook:command --auto-accept-changes --exit-zero-on-changes --only-changed --externals \"public/**\"",
    "openapi-ts": "openapi-ts",
    "patch-package": "patch-package",
    "playwright": "playwright",
    "tsx": "tsx",
    "jest": "NODE_OPTIONS=\"$NODE_OPTIONS --experimental-vm-modules\" jest"
  },
  "prisma": {
    "schema": "src/prisma/schema.prisma",
    "seed": "tsx src/prisma/seed.script.ts"
  },
  "dependencies": {
    "@ag-media/react-pdf-table": "^2.0.3",
    "@codegouvfr/react-dsfr": "1.25.3",
    "@commander-js/extra-typings": "^12.1.0",
    "@faire/mjml-react": "^3.5.0",
    "@fontsource/dancing-script": "^5.1.1",
    "@fragaria/address-formatter": "^6.4.0",
    "@gouvfr/dsfr": "1.12.1",
    "@hey-api/client-fetch": "^0.7.2",
    "@hookform/resolvers": "^3.9.1",
    "@inquirer/prompts": "^3.3.2",
    "@mui/icons-material": "^6.1.10",
    "@mui/material": "^6.1.10",
    "@mui/material-nextjs": "^7.1.1",
    "@mui/x-data-grid": "^7.29.6",
    "@mui/x-date-pickers": "^7.29.4",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@next/bundle-analyzer": "15.3.4",
    "@prisma/client": "6.10.1",
    "@react-pdf/renderer": "^4.1.6",
    "@sentry/nextjs": "^9.32.0",
    "@sindresorhus/slugify": "^2.2.1",
    "@socialgouv/matomo-next": "^1.9.2",
    "@tanstack/query-core": "^5.81.2",
    "@tanstack/react-query": "^5.81.2",
    "@tomfreudenberg/next-auth-mock": "^0.5.6",
    "@trpc/client": "^11.4.3",
    "@trpc/react-query": "^11.4.3",
    "@trpc/server": "^11.4.3",
    "async": "^3.2.6",
    "async-mutex": "^0.5.0",
    "axe-playwright": "^2.0.3",
    "bcrypt": "^5.1.1",
    "chalk": "^5.3.0",
    "content-disposition": "^0.5.4",
    "country-data": "^0.0.31",
    "crisp-sdk-web": "^1.0.25",
    "cssnano": "^7.0.6",
    "date-fns": "^4.1.0",
    "eventemitter3": "^5.0.1",
    "google-libphonenumber": "^3.2.40",
    "html-to-text": "^9.0.5",
    "http-errors": "^2.0.0",
    "i18next": "^24.0.5",
    "i18next-browser-languagedetector": "^8.0.0",
    "iso8601-duration": "^2.1.2",
    "jsdom": "^25.0.1",
    "locks": "^0.2.2",
    "microdiff": "^1.3.2",
    "mjml": "^4.15.3",
    "msw": "^2.6.6",
    "next": "15.3.4",
    "next-auth": "^4.24.11",
    "next-i18next": "^15.4.0",
    "nodemailer": "^6.9.16",
    "patch-package": "^8.0.0",
    "pg-boss": "^10.1.5",
    "playwright": "^1.49.0",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-hook-form": "^7.53.2",
    "react-i18next": "^15.1.3",
    "react-imask": "^7.6.1",
    "react-use": "^17.5.1",
    "sharp": "^0.33.5",
    "superjson": "^1.13.3",
    "superjson-next": "^0.7.1",
    "ts-custom-error": "^3.3.1",
    "tss-react": "^4.9.18",
    "type-route": "^1.0.1",
    "usehooks-ts": "^3.1.1",
    "uuid": "^11.0.3",
    "xmlbuilder2": "^3.1.1",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@chromatic-com/storybook": "^4.0.1",
    "@glen/jest-raw-loader": "^2.0.0",
    "@hey-api/openapi-ts": "^0.63.0",
    "@hookform/devtools": "^4.4.0",
    "@octokit/rest": "^19.0.5",
    "@prettier/plugin-xml": "^3.4.1",
    "@sentry/cli": "^2.46.0",
    "@storybook/addon-a11y": "^9.0.13",
    "@storybook/addon-coverage": "^2.0.0",
    "@storybook/addon-designs": "^10.0.1",
    "@storybook/addon-docs": "^9.0.13",
    "@storybook/addon-links": "^9.0.13",
    "@storybook/nextjs": "^9.0.13",
    "@storybook/test-runner": "^0.23.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.4.3",
    "@trivago/prettier-plugin-sort-imports": "^4.3.0",
    "@types/async": "^3.2.24",
    "@types/bcrypt": "^5.0.0",
    "@types/chalk": "^2.2.4",
    "@types/content-disposition": "^0.5.8",
    "@types/country-data": "^0.0.5",
    "@types/git-rev-sync": "^2.0.2",
    "@types/google-libphonenumber": "^7.4.30",
    "@types/html-to-text": "^9.0.4",
    "@types/http-errors": "^2.0.3",
    "@types/jest": "^29.5.14",
    "@types/jsdom": "^21.1.7",
    "@types/locks": "^0.2.1",
    "@types/lodash.debounce": "^4.0.7",
    "@types/mjml": "^4.7.0",
    "@types/mjml-browser": "^4.15.0",
    "@types/mjml-react": "^2.0.6",
    "@types/node": "^20.9.0",
    "@types/nodemailer": "^6.4.17",
    "@types/parse-github-url": "^1.0.3",
    "@types/react": "19.1.8",
    "@types/react-dom": "19.1.6",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "@vueless/storybook-dark-mode": "^9.0.5",
    "chromatic": "^11.20.0",
    "concurrently": "^9.1.0",
    "copy-webpack-plugin": "^12.0.2",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "dotenv": "^16.4.7",
    "dotenv-run-script": "^0.4.1",
    "eslint": "^8.57.1",
    "eslint-config-next": "15.3.4",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-mdx": "^3.1.5",
    "eslint-plugin-react": "7.37.2",
    "eslint-plugin-storybook": "^0.11.1",
    "eslint-plugin-testing-library": "^7.1.0",
    "filemanager-webpack-plugin": "^8.0.0",
    "get-tsconfig": "^4.8.1",
    "git-rev-sync": "^3.0.2",
    "jest": "^29.3.1",
    "jest-environment-jsdom": "^29.3.1",
    "jest-environment-node": "^29.4.1",
    "jest-environment-node-single-context": "^29.4.0",
    "lodash.debounce": "^4.0.8",
    "mjml-browser": "^4.15.3",
    "msw-storybook-addon": "^2.0.4",
    "next-rspack": "^15.3.4",
    "next-test-api-route-handler": "3.1.8",
    "parse-github-url": "^1.0.3",
    "path-browserify": "^1.0.1",
    "postcss-loader": "^8.1.1",
    "prisma": "6.10.1",
    "raw-loader": "^4.0.2",
    "sass": "^1.82.0",
    "serve": "^14.2.4",
    "start-server-and-test": "^2.0.8",
    "storybook": "^9.0.13",
    "storybook-mock-date-decorator": "^3.0.0",
    "style-loader": "^3.3.1",
    "testcontainers": "^10.16.0",
    "ts-jest": "^29.2.5",
    "tsconfig-paths-webpack-plugin": "^4.2.0",
    "tsx": "^4.19.2",
    "typescript": "^5.6.2",
    "typescript-plugin-css-modules": "^5.1.0"
  },
  "overrides": {
    "@tomfreudenberg/next-auth-mock": {
      "react": "^19.0.0"
    },
    "@types/react": "19.1.8",
    "@types/react-dom": "19.1.6",
    "msw": {
      "typescript": "$typescript"
    },
    "ts-import": {
      "typescript": "$typescript"
    }
  },
  "packageManager": "npm@10.4.0",
  "engines": {
    "node": ">=20.15.0 <21.0.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "Chrome 118",
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "msw": {
    "workerDirectory": [
      "public"
    ]
  }
}
