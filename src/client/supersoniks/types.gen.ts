// This file is auto-generated by @hey-api/openapi-ts

/**
 * Données de covoiturage SSKS
 */
export type CarpoolingEvent = {
    enabled?: boolean;
};

/**
 * Informations sur la distanciation
 */
export type Distancing = {
    /**
     * Indique si la distanciation est active
     */
    enabled?: boolean;
    /**
     * Indique si le paramètre de distanciation doit être affiché
     */
    display_setting_status?: boolean;
};

/**
 * Informations de places d'un produit
 */
export type InfosPlaces = {
    /**
     * Nombre de places restantes
     */
    remaining_places_nb?: number | null;
    /**
     * Jauge globale
     */
    gauge?: number;
    /**
     * Quota interne
     */
    internal_quota?: number | null;
};

/**
 * Taxonomie de filtre ou d'affichage
 * @deprecated
 */
export type NodeStock = Stock & {
    internal?: {
        sold?: number;
        initial?: number;
        available?: number;
        reserved?: number;
        ongoing?: number;
        pass?: number;
        locked?: number;
        revenue?: number;
        contingent?: Array<{
            title?: string;
            id?: number;
            sold?: number;
            initial?: number;
            available?: number;
            reserved?: number;
            ongoing?: number;
            locked?: number;
            pass?: number;
            revenue?: number;
        }>;
    };
    external?: {
        sold?: number;
        message?: string;
        initial?: number;
        available?: number;
        revenue?: number;
        lastUpdate?: number;
        retailer?: Array<{
            title?: string;
            sold?: number;
            initial?: number;
            available?: number;
            revenue?: number;
        }>;
    };
    reserved?: number;
    availableMessage?: string | null;
};

/**
 * Données PASS d'un évènement
 */
export type Pass = {
    /**
     * Indique si l'évènement est un PASS
     */
    is_pass?: boolean;
    /**
     * Indique si l'évènement est un PASS
     */
    is_countermarked?: boolean;
    /**
     * Indique les PASS liés à l'évènement
     */
    pass_ids?: Array<number>;
};

/**
 * Informations PASS Culture
 */
export type PassCulture = {
    id?: number;
    url?: string;
};

/**
 * Catégorie de places (balcon, fosse...)
 */
export type PlacesCategory = {
    id?: number;
    available?: number;
    /**
     * @deprecated
     */
    initial?: number;
    /**
     * @deprecated
     */
    label?: string;
    prices?: Array<Price>;
    /**
     * Nombre de places restantes. N'est rempli qu'à la récupération d'un évènement.
     */
    remaining_places_nb?: number;
    sold?: number;
    stock?: Stock;
    title?: string;
    /**
     * Nombre de places initiales. N'est rempli qu'à la récupération d'un évènement.
     */
    total_places_nb?: number;
};

/**
 * Produit additionnel lié à un tarif ou un évènement
 */
export type AdditionalPrice = {
    id?: number;
    name?: string;
    price?: number;
};

/**
 * Tarif d'un produit
 */
export type Price = {
    id?: number;
    /**
     * Montant du billet de base
     */
    amount?: number;
    place_category?: PlacesCategory;
    /**
     * Tarif disponible au guichet
     */
    counter?: boolean;
    /**
     * Indique s'il s'agit d'un tarif promotionnel
     */
    price_is_promo?: boolean;
    /**
     * Nombre de places maximum au panier pour l'achat (tarif groupe)
     */
    price_max_places?: number | null;
    /**
     * Nombre de places minimum au panier pour l'achat (tarif groupe)
     */
    price_min_places?: number;
    /**
     * Tarif disponible en ligne
     */
    online?: boolean;
    title?: string;
    /**
     * Texte d'aide pour le tarif. Indications personnalisées ou promotionnelles.
     */
    help_text?: string;
    /**
     * Produits additionnels liés à ce tarif
     */
    additional_products?: Array<AdditionalPrice>;
    /**
     * Montant d'affichage (billet + produits additionnels)
     */
    amount_display?: number;
    /**
     * Indique si le tarif déclenche l'ajout d'un tarif promotionnel
     */
    is_triggering_promo?: boolean;
    /**
     * Tarif disponible à l'achat (s'il reste des places)
     */
    price_available?: boolean;
    /**
     * Tarif disponible au guichet, affiché en ligne
     */
    in_situ?: boolean;
    /**
     * Nombre de places disponibles
     */
    price_places_nb?: number;
    /**
     * Indique s'il s'agit d'un tarif SAML, avec connexion obligatoire
     */
    saml_auth_required?: boolean;
    /**
     * Indique si le tarif demande un abonnement
     */
    need_subscription?: boolean;
    /**
     * Indique si le tarif demande un abonnement partenaire
     */
    need_partner_subscription?: boolean;
    stock?: Stock;
};

/**
 * Contingentement de places
 */
export type Quota = {
    id?: number | null;
    /**
     * Titre du contingentement
     */
    title?: string;
    /**
     * @deprecated
     */
    name?: string | null;
    /**
     * Tarifs du contingent
     */
    prices?: Array<{
        price_id?: number;
        /**
         * Nombre de places disponibles pour ce contingent
         */
        price_places_nb?: number;
        /**
         * Si le tarif est visible par défaut avec ce contingent
         */
        visible?: boolean;
    }>;
    /**
     * Nombre de places restantes
     */
    remaining_places_nb?: number | null;
    /**
     * Nombre de places total
     */
    total_places_nb?: number | null;
    /**
     * Description du contingent
     */
    description?: string;
    /**
     * Indique s'il reste des places
     */
    has_remaining?: boolean;
};

/**
 * Contingentement de places pour la gestion des stocks
 */
export type QuotaProductStock = {
    id?: number | null;
    /**
     * Titre du contingentement
     */
    title?: string;
    stock?: Stock;
};

/**
 * Distributeur pour la gestion des stocks
 */
export type RetailerProductStock = {
    id?: number;
    stock?: Stock;
    title?: string;
};

/**
 * Contient toutes les informations sur le statut de l'évènement'
 */
export type InfosStatus = {
    publication?: Publication;
    additionnals?: Array<StatusAdditionnal>;
    /**
     * Indique si l'évènement est clôturé
     */
    closed?: boolean;
    /**
     * Timestamp de clôture
     */
    closed_at?: number;
    schedule?: Array<{
        date?: number;
        publication?: string;
    }>;
    /**
     * Indique si l'achat de l'évènement est disponible
     */
    available?: boolean;
};

/**
 * Statut additionnel d'un produit
 */
export type StatusAdditionnal = {
    /**
     * Clef unique d'un statut additionnel
     */
    key?: 'full' | 'almost_full' | 'full_here' | 'almost_full_here' | 'canceled' | 'waiting' | 'deferred' | 'soon_on_sale' | 'end_sale' | 'only_visible' | 'forced_to_full' | 'remaining_places' | 'remaining_places_warning' | 'full_in_no_quota';
    libelle?: string;
    lang?: 'fr' | 'en' | 'de' | 'nl';
    /**
     * @deprecated
     */
    display_setting?: boolean;
};

/**
 * TVA
 */
export type Vat = {
    /**
     * ID TVA
     */
    id?: number;
    /**
     * Libelle TVA
     */
    title?: string;
    /**
     * Taux TVA
     */
    rate?: number;
};

export type OpenAgenda = {
    /**
     * ID OpenAgenda
     */
    openagenda_id?: number;
    openagenda_custom_fields?: Array<{
        [key: string]: unknown;
    }>;
};

/**
 * Catégories de prix
 */
export type PriceCategory = {
    /**
     * Identifiant de la catégorie
     */
    id?: number;
    /**
     * Titre de la catégorie
     */
    title?: string;
    prices?: Array<Price>;
    prices_in_situ?: Array<Price>;
};

export type Schedule = {
    /**
     * Date
     */
    date?: number;
    /**
     * Statut
     */
    publication?: string;
};

/**
 * Settings d'une session
 */
export type SettingsSessionApi = {
    synchro_site?: boolean;
    revenue_target?: number | null;
    price_auth?: boolean;
    tax?: Tax;
    archiving_date?: number;
    max_places_nb?: number | null;
    nominative_ticket?: boolean;
    sale_end_date?: number;
    sale_start_date?: number;
    pass?: Pass;
    reelax_info?: unknown;
    refund?: unknown;
    site_link?: string;
    carpooling?: CarpoolingEvent;
    pass_culture?: PassCulture;
    /**
     * Message public sur le billet
     */
    message?: string | null;
    /**
     * Durée de l'évènement (en minutes)
     */
    duration?: number | null;
    /**
     * Timezone
     */
    time_zone?: string;
    /**
     * Date de clôture de l'évènement
     */
    closing_date?: number;
    /**
     * Jauge du produit
     */
    gauge?: number | null;
    /**
     * Quota interne du produit
     */
    internal_quota?: number | null;
    publication?: Publication;
    /**
     * Programmation
     */
    schedule?: Array<Schedule>;
    openagenda?: OpenAgenda;
    waiting_list?: WaitingList;
};

/**
 * Liste d'attente
 */
export type WaitingList = {
    /**
     * Indique si la liste d'attente est activée
     */
    enabled?: boolean;
};

/**
 * Session d'un évènement
 */
export type Session = {
    /**
     * Timestamp de la date de début de l'événement
     */
    start_date?: number;
    /**
     * Timestamp de la date de fin de l'événement
     */
    end_date?: number;
    /**
     * Timezone de l'événement
     */
    time_zone?: string;
    labels?: Array<Label> | null;
    categories?: Array<Category> | null;
    activities?: Array<Activity> | null;
    range?: Range;
    multisession?: Multisession;
    producers?: Array<Producer> | null;
    settings?: SettingsSessionApi;
    quotas?: Array<Quota> | null;
    location?: Location;
    room?: Room;
    /**
     * Lien public de l'évènement (billetterie ou site
     */
    public_link?: string;
    /**
     * Catégories de prix
     */
    categorized_prices?: Array<PriceCategory>;
    /**
     * Tarifs sur place
     */
    prices_in_situ?: Array<Price> | null;
    /**
     * Liste des catégories de places
     */
    places_categories?: Array<PlacesCategory>;
};

/**
 * Bordereau de clôture
 */
export type ClosureInvoice = {
    session?: Session;
    /**
     * Chiffre d'affaire
     */
    revenue?: number;
    /**
     * Montant de la TVA en €
     */
    tax_amount?: number;
    /**
     * Total de places vendues
     */
    sold?: number;
    /**
     * Jauge
     */
    gauge?: number;
    /**
     * Quota interne
     */
    internal_quota?: number;
    /**
     * Pic de fréquentation
     */
    peak_attendance?: number;
    /**
     * Pourcentage d'absence à l'évènement
     */
    no_show?: number;
    /**
     * Nombre de billets contrôlés
     */
    checked?: number;
    /**
     * Date de clôture
     */
    closing_date?: number;
    /**
     * Prix moyen
     */
    average_amount?: number;
    externals_prices?: Array<{
        amount?: number;
        quantity?: number;
        revenue?: number;
        title?: string;
    }>;
    internals_prices?: Array<{
        amount?: number;
        quantity?: number;
        revenue?: number;
        title?: string;
    }>;
};

/**
 * Stock d'un produit, d'un tarif, d'une catégorie ou d'un contingentement
 */
export type Stock = {
    available?: number | null;
    initial?: number | null;
    sold?: number;
    revenue?: number | null;
    locked?: number;
    /**
     * Jauge totale
     */
    gauge?: number | null;
};

/**
 * Type d'entité dans la billetterie
 */
export type EntityType = 'event' | 'subscribe' | 'giftcard' | 'additionalProduct';

/**
 * Statut de publication de l'évènement
 */
export type Publication = 'unpublished' | 'counter' | 'only_visible' | 'on_sale';

/**
 * Données disponibles pour les sessions
 */
export type Feature = 'taxonomies' | 'picture' | 'prices' | 'stock' | 'quotas' | 'status' | 'season' | 'location' | 'multisessions' | 'settings' | 'range' | 'externals_data' | 'places_categories';

/**
 * Informations sur l'image du produit
 */
export type Picture = {
    /**
     * ID unique de l'image
     */
    fid?: unknown;
    /**
     * URL de l'image
     * @deprecated
     */
    url?: string;
    /**
     * URL
     */
    src?: string;
    /**
     * URL
     */
    thumbnail?: string;
    /**
     * URL
     */
    medium?: string;
    /**
     * URL
     */
    large?: string;
    /**
     * URL
     */
    favicon?: string;
    /**
     * URL
     */
    ratio_1x1_120?: string;
    /**
     * URL
     */
    ratio_1x1_360?: string;
    /**
     * URL
     */
    ratio_1x1_640?: string;
    /**
     * URL
     */
    ratio_1x1_1000?: string;
    /**
     * URL
     */
    ratio_1x1_1920?: string;
    /**
     * URL
     */
    ratio_auto_32?: string;
    /**
     * url
     */
    ratio_auto_120?: string;
    /**
     * URL
     */
    ratio_auto_360?: string;
    /**
     * URL
     */
    ratio_auto_640?: string;
    /**
     * URL
     */
    ratio_auto_1000?: string;
    /**
     * URL
     */
    ratio_auto_1920?: string;
    /**
     * URL
     */
    logo_203dpi?: string;
    /**
     * URL
     */
    logo_300dpi?: string;
    /**
     * URL
     */
    logo_a4?: string;
    /**
     * URL
     */
    app_icon?: string;
};

/**
 * Informations sur la partie éditioriale du produit (titre, description...)
 */
export type Edito = {
    /**
     * Sur-titre du produit
     */
    over_title?: string | null;
    /**
     * Titre du produit
     */
    title?: string;
    /**
     * Titre alternatif du produit, utilisé dans certains affichages
     */
    alt_title?: string | null;
    /**
     * Sous-titre du produit
     */
    sub_title?: string | null;
    /**
     * Description du produit
     */
    body?: string | null;
};

/**
 * Lieu physique
 */
export type Location = {
    id?: number;
    title?: string;
    address?: string;
    city?: string;
    postal_code?: string;
    /**
     * @deprecated
     */
    location_id?: number;
    /**
     * @deprecated
     */
    location_name?: string;
    /**
     * @deprecated
     */
    location_city_name?: string;
    /**
     * @deprecated
     */
    location_postal_code?: string;
    /**
     * @deprecated
     */
    location_address?: string;
};

/**
 * Regroupement d'évènements
 */
export type Multisession = {
    id?: number;
    /**
     * @deprecated
     */
    multisession_id?: number;
    /**
     * @deprecated
     */
    title?: string;
    /**
     * @deprecated
     */
    body?: string;
    edito?: Edito;
    picture?: Picture;
    /**
     * Lien vers la page éditoriale
     */
    site_link?: string;
    display?: 'default' | 'calendar' | 'events';
};

/**
 * Gamme de tarifs
 */
export type Range = {
    id?: number;
    title?: string;
    /**
     * Indique si la gamme doit être affichée en FRONT
     */
    display?: boolean;
    /**
     * @deprecated
     */
    range_id?: number;
    /**
     * @deprecated
     */
    range_name?: string;
    /**
     * @deprecated
     */
    range_display?: boolean;
};

export type Refund = {
    /**
     * Indique si le statut doit être affiché
     */
    display_setting_status?: boolean;
    /**
     * Indique si le lien de remboursement doit être affiché
     */
    display_url?: boolean;
    /**
     * Indique si le remboursement est actif sur cet évènement
     */
    enabled?: boolean;
    /**
     * Lien vers la page de remboursement
     */
    url?: string;
};

/**
 * Salle physique
 */
export type Room = {
    id?: number;
    title?: string;
    /**
     * Affichage du nom de la salle en FRONT
     */
    display_name?: boolean;
    /**
     * Affichage du nom de la ville en FRONT
     */
    display_city?: boolean;
    /**
     * Clef unique du type de placement
     */
    placing_type_key?: 'place' | 'libre' | 'mixte' | 'ne_pas_afficher';
    /**
     * Libelle du type de placement
     */
    placing_type_label?: string;
    /**
     * Clef unique du type de salle
     */
    free_placing_add_on_key?: '' | 'debout' | 'assis' | 'assis-debout' | 'debout_assis_non_garanti' | 'selon_categorie';
    /**
     * Libellé du type de salle
     */
    free_placing_add_on_label?: string;
    /**
     * @deprecated
     */
    room_id?: number;
    /**
     * @deprecated
     */
    room_name?: string;
    /**
     * Affichage du nom de la salle en FRONT
     * @deprecated
     */
    room_display_name?: boolean;
    /**
     * Affichage du nom de la ville en FRONT
     * @deprecated
     */
    room_display_city?: boolean;
    /**
     * Clef unique du type de placement
     * @deprecated
     */
    room_placing_type_key?: 'place' | 'libre' | 'mixte' | 'ne_pas_afficher';
    /**
     * Libelle du type de placement
     * @deprecated
     */
    room_placing_type_label?: string;
    /**
     * Clef unique du type de salle
     * @deprecated
     */
    room_free_placing_add_on_key?: '' | 'debout' | 'assis' | 'assis-debout' | 'debout_assis_non_garanti' | 'selon_categorie';
    /**
     * Libellé du type de salle
     * @deprecated
     */
    room_free_placing_add_on_label?: string;
};

/**
 * Saison d'une billetterie
 */
export type Season = {
    id?: number;
    title?: string;
    current?: boolean;
    /**
     * @deprecated
     */
    season_id?: number;
    /**
     * @deprecated
     */
    season_name?: string;
    start_date?: number;
    end_date?: number;
    /**
     * Dates de vente des abonnements saison
     */
    subscription_sales?: {
        start_date?: number;
        end_date?: number;
    };
};

/**
 * Informations sur la TVA
 */
export type Tax = {
    /**
     * ID TVA
     */
    id?: number;
    /**
     * Libelle TVA
     */
    title?: string;
    /**
     * Taux TVA
     */
    rate?: number;
    /**
     * @deprecated
     */
    tax_id?: number;
    /**
     * @deprecated
     */
    tax_name?: string;
    /**
     * @deprecated
     */
    tax_value?: number;
};

/**
 * Tag d'activité
 */
export type Activity = {
    title?: string;
    id?: number;
    /**
     * @deprecated
     */
    name?: string;
};

/**
 * Taxonomie de filtre ou d'affichage
 */
export type Category = {
    title?: string;
    id?: number;
    /**
     * Afficher en tant que filtre
     */
    filter?: boolean;
    /**
     * Afficher sur les évènements
     */
    display?: boolean;
    /**
     * @deprecated
     */
    category_id?: number;
    /**
     * @deprecated
     */
    category_name?: string;
    /**
     * @deprecated
     */
    category_filter?: boolean;
    /**
     * @deprecated
     */
    category_display?: boolean;
};

/**
 * (Étiquette) Taxonomie d'affichage
 */
export type Label = {
    title?: string;
    id?: number;
    /**
     * @deprecated
     */
    label_id?: number;
    /**
     * @deprecated
     */
    label_name?: string;
};

/**
 * Organisateur d'évènements
 */
export type Producer = {
    /**
     * @deprecated
     */
    producer_id?: number;
    /**
     * Nom du producteur
     */
    producer_name?: string;
    /**
     * @deprecated
     */
    producer_number?: string;
    /**
     * Identifiant du producteur
     */
    id?: number;
    /**
     * Nom du producteur
     */
    title?: string;
    /**
     * Numéro du producteur
     */
    number?: string;
};

/**
 * Retour en erreur
 */
export type _Error = {
    /**
     * Données de retour
     */
    data?: unknown;
    /**
     * Succès de la requête
     */
    success?: boolean;
    /**
     * Liste des messages d'erreur
     */
    messages?: Array<Message>;
};

/**
 * Message de retour
 */
export type Message = {
    /**
     * Contenu du message
     */
    content?: string;
    /**
     * Statut du message
     */
    status?: 'error' | 'status' | 'warning' | 'info';
    /**
     * Type du message
     */
    type?: 'public' | 'debug';
};

/**
 * Le nombre de résultats à ignorer
 */
export type Offset = number;

/**
 * Nombre de résultats maximum
 */
export type Limit = number;

/**
 * Recherche
 */
export type Search = string;

/**
 * Identifiant de l'évènement
 */
export type Id = number;

/**
 * Identifiants des évènements
 */
export type Ids = Array<number>;

/**
 * Identifiants des évènements interdits
 */
export type ExcludedIds = Array<number>;

/**
 * Mode d'affichage
 */
export type View = 'essential' | 'full';

/**
 * Prochains évènements uniquement
 */
export type Next = boolean;

/**
 * Évènements qui ont une date à partir de from
 */
export type From = number;

/**
 * Évènements qui ont une date jusqu'à to
 */
export type To = number;

/**
 * Évènements du PASS
 */
export type PassId = number;

/**
 * Évènements de la multi-séances
 */
export type MultisessionId = number;

/**
 * Groupement des évènements
 */
export type GroupBy = 'mid';

/**
 * Évènements de ces catégories
 */
export type IdsCategory = Array<number>;

/**
 * Évènements de ces saisons
 */
export type IdsSeason = Array<number>;

/**
 * Évènements de ces gammes de tarifs
 */
export type IdsRange = Array<number>;

/**
 * Évènements de ces activités
 */
export type IdsActivity = Array<number>;

/**
 * Évènements de ces producteurs
 */
export type IdsProducer = Array<number>;

/**
 * Évènements de ces lieux
 */
export type IdsLocation = Array<number>;

/**
 * Évènements de ces salles
 */
export type Room2 = {
    placing_type_key?: 'libre' | 'place' | 'mixte' | 'ne_pas_afficher';
};

/**
 * Statuts de publication
 */
export type PublicationStatus = 'published' | 'all' | 'unpublished' | 'counter' | 'only_visible' | 'online' | 'on_sale';

/**
 * Covoiturage actif/inactif
 */
export type Carpooling = boolean;

/**
 * Uniquement les multiséances
 */
export type IsMultisession = boolean;

/**
 * Uniquement les PASS
 */
export type IsPass = boolean;

/**
 * Uniquement les évènements clôturés
 */
export type Closed = boolean;

/**
 * Uniquement avec distanciation
 */
export type Distancing2 = boolean;

/**
 * Uniquement les évènements synchronisés avec les sites
 */
export type SynchroSite = boolean;

/**
 * Statut additionnel
 */
export type Additional = 'forced_to_full' | 'canceled' | 'waiting' | 'deferred' | 'soon_on_sale';

/**
 * Liste spécifique (slug)
 */
export type List = string;

/**
 * Hash de campagne
 */
export type CampaignHash = string;

/**
 * Valeurs de sessions souhaitées
 */
export type Features = Array<Feature>;

export type GetClosingStatementData = {
    body?: never;
    path: {
        /**
         * ID de l'évènement
         */
        id: number;
    };
    query?: {
        /**
         * Ne pas vérifier si l'évènement est clôturé
         */
        bypass_closed?: boolean;
    };
    url: '/statement/closing/{id}';
};

export type GetClosingStatementErrors = {
    /**
     * Forbidden
     */
    403: _Error;
    /**
     * Évènement introuvable
     */
    404: _Error;
};

export type GetClosingStatementError = GetClosingStatementErrors[keyof GetClosingStatementErrors];

export type GetClosingStatementResponses = {
    /**
     * Bordereau de clôture
     */
    200: {
        data?: ClosureInvoice;
        messages?: Array<Message>;
        success?: boolean;
    };
};

export type GetClosingStatementResponse = GetClosingStatementResponses[keyof GetClosingStatementResponses];

export type GetClosingStatementsData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Timestamp, par défaut -3 mois
         */
        from: number;
        /**
         * Timestamp, par défaut maintenant
         */
        to: number;
        /**
         * Ne pas vérifier si l'évènement est clôturé
         */
        bypass_closed?: boolean;
    };
    url: '/statement/closing';
};

export type GetClosingStatementsErrors = {
    /**
     * Donnée manquante
     */
    400: _Error;
    /**
     * forbidden
     */
    403: _Error;
};

export type GetClosingStatementsError = GetClosingStatementsErrors[keyof GetClosingStatementsErrors];

export type GetClosingStatementsResponses = {
    /**
     * Bordereau de clôture
     */
    200: {
        data?: Array<ClosureInvoice>;
        messages?: Array<Message>;
        success?: boolean;
    };
};

export type GetClosingStatementsResponse = GetClosingStatementsResponses[keyof GetClosingStatementsResponses];