// This file is auto-generated by @hey-api/openapi-ts

export type AbstractSaleSessionRead = {
    [key: string]: unknown;
};

export type AbstractSaleSessionWrite = {
    [key: string]: unknown;
};

export type AbstractSaleSessionOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    [key: string]: unknown;
};

export type AbstractSaleSessionOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    [key: string]: unknown;
};

export type AbstractSaleSessionRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    [key: string]: unknown;
};

export type AbstractSaleSessionTransactionGroupReadTransactionReadTransactionGroupRead = {
    [key: string]: unknown;
};

export type AbstractSaleSessionTransactionRead = {
    [key: string]: unknown;
};

export type AbstractSaleSessionJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AbstractSaleSessionJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AbstractSaleSessionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AbstractSaleSessionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AbstractSaleSessionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AbstractSaleSessionJsonldTransactionGroupReadTransactionReadTransactionGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AbstractSaleSessionJsonldTransactionRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionBookingRead = {
    [key: string]: unknown;
};

export type ArrayCollectionContractReadMinisiteReadContractRead = {
    [key: string]: unknown;
};

export type ArrayCollectionCustomerRead = {
    [key: string]: unknown;
};

export type ArrayCollectionMinisiteReadContractReadTicketingReadMinisiteRead = {
    [key: string]: unknown;
};

export type ArrayCollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    [key: string]: unknown;
};

export type ArrayCollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    [key: string]: unknown;
};

export type ArrayCollectionPayoutRead = {
    [key: string]: unknown;
};

export type ArrayCollectionJsonldBookingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionJsonldContractReadMinisiteReadContractRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionJsonldCustomerRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionJsonldMinisiteReadContractReadTicketingReadMinisiteRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ArrayCollectionJsonldPayoutRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type AuditDocumentAuditDocumentRead = {
    contract: string;
    startDate?: string;
    endDate?: string;
    content?: Array<string>;
    type?: string | null;
    hash?: string | null;
    previousAuditDocument?: AuditDocumentAuditDocumentRead | null;
    createdAt?: string;
};

export type AuditDocumentJsonldAuditDocumentRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    contract: string;
    startDate?: string;
    endDate?: string;
    content?: Array<string>;
    type?: string | null;
    hash?: string | null;
    previousAuditDocument?: AuditDocumentJsonldAuditDocumentRead | null;
    createdAt?: string;
};

export type AvailableSeatAvailableSeatRead = {
    status: 'dismissed' | 'booked' | 'payed' | 'available';
    visible?: boolean;
    seat?: string | null;
    seatGroup?: string | null;
    seatConfig?: string | null;
    eventDate?: string;
    ticket?: string | null;
    cartItem?: string | null;
    stockContingent?: string | null;
    manuallyAssigned?: boolean;
    position?: number | null;
    isLocked?: boolean;
    readonly bookingStatus?: string;
    readonly order?: string | null;
    readonly cart?: string | null;
    readonly dismissed?: boolean;
};

export type AvailableSeatAvailableSeatUpdate = {
    status: 'dismissed' | 'booked' | 'payed' | 'available';
    visible?: boolean;
    seat?: string | null;
    seatGroup?: string | null;
    ticket?: string | null;
    cartItem?: string | null;
    stockContingent?: string | null;
    manuallyAssigned?: boolean;
};

export type AvailableSeatJsonldAvailableSeatRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    status: 'dismissed' | 'booked' | 'payed' | 'available';
    visible?: boolean;
    seat?: string | null;
    seatGroup?: string | null;
    seatConfig?: string | null;
    eventDate?: string;
    ticket?: string | null;
    cartItem?: string | null;
    stockContingent?: string | null;
    manuallyAssigned?: boolean;
    position?: number | null;
    isLocked?: boolean;
    readonly bookingStatus?: string;
    readonly order?: string | null;
    readonly cart?: string | null;
    readonly dismissed?: boolean;
};

export type AvailableSeatJsonldAvailableSeatUpdate = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    status: 'dismissed' | 'booked' | 'payed' | 'available';
    visible?: boolean;
    seat?: string | null;
    seatGroup?: string | null;
    ticket?: string | null;
    cartItem?: string | null;
    stockContingent?: string | null;
    manuallyAssigned?: boolean;
};

export type AvailableSeatModelAvailableSeatModelRead = {
    seat?: string;
    seatGroup?: string;
    logicalSeatConfig?: string | null;
    contingent?: string | null;
    position?: number | null;
    status: 'dismissed' | 'available';
};

export type AvailableSeatModelAvailableSeatModelWrite = {
    seat?: string;
    seatGroup?: string;
    logicalSeatConfig?: string | null;
    contingent?: string | null;
    status: 'dismissed' | 'available';
};

export type AvailableSeatModelJsonldAvailableSeatModelRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    seat?: string;
    seatGroup?: string;
    logicalSeatConfig?: string | null;
    contingent?: string | null;
    position?: number | null;
    status: 'dismissed' | 'available';
};

export type AvailableSeatModelJsonldAvailableSeatModelWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    seat?: string;
    seatGroup?: string;
    logicalSeatConfig?: string | null;
    contingent?: string | null;
    status: 'dismissed' | 'available';
};

export type BankAccountBankAccountRead = {
    type?: 'IBAN' | 'US' | 'GB' | 'CA' | 'OTHER';
    defaultAccount?: boolean | null;
    ownerName: string;
    tag?: string | null;
    mangoPayBankAccountId?: string | null;
    createdAt?: string;
    iban?: string | null;
    bic?: string | null;
    accountNumber?: number | null;
    sortCode?: string | null;
    aba?: number | null;
    depositAccountType?: string | null;
    bankName?: string | null;
    institutionNumber?: number | null;
    branchCode?: number | null;
    country?: string | null;
    addressLine1: string;
    addressLine2?: string | null;
    city: string;
    region?: string | null;
    postalCode: string;
    addressCountry: string;
    payoutList?: Array<string>;
    wallet: string;
    readonly formattedAddress?: string;
};

export type BankAccountBankAccountWrite = {
    type?: 'IBAN' | 'US' | 'GB' | 'CA' | 'OTHER';
    defaultAccount?: boolean | null;
    ownerName: string;
    tag?: string | null;
    mangoPayBankAccountId?: string | null;
    createdAt?: string;
    iban?: string | null;
    bic?: string | null;
    accountNumber?: number | null;
    sortCode?: string | null;
    aba?: number | null;
    depositAccountType?: string | null;
    bankName?: string | null;
    institutionNumber?: number | null;
    branchCode?: number | null;
    country?: string | null;
    addressLine1: string;
    addressLine2?: string | null;
    city: string;
    region?: string | null;
    postalCode: string;
    addressCountry: string;
    payoutList?: Array<string>;
    wallet: string;
};

export type BankAccountJsonldBankAccountRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    type?: 'IBAN' | 'US' | 'GB' | 'CA' | 'OTHER';
    defaultAccount?: boolean | null;
    ownerName: string;
    tag?: string | null;
    mangoPayBankAccountId?: string | null;
    createdAt?: string;
    iban?: string | null;
    bic?: string | null;
    accountNumber?: number | null;
    sortCode?: string | null;
    aba?: number | null;
    depositAccountType?: string | null;
    bankName?: string | null;
    institutionNumber?: number | null;
    branchCode?: number | null;
    country?: string | null;
    addressLine1: string;
    addressLine2?: string | null;
    city: string;
    region?: string | null;
    postalCode: string;
    addressCountry: string;
    payoutList?: Array<string>;
    wallet: string;
    readonly formattedAddress?: string;
};

export type BankAccountJsonldBankAccountWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    type?: 'IBAN' | 'US' | 'GB' | 'CA' | 'OTHER';
    defaultAccount?: boolean | null;
    ownerName: string;
    tag?: string | null;
    mangoPayBankAccountId?: string | null;
    createdAt?: string;
    iban?: string | null;
    bic?: string | null;
    accountNumber?: number | null;
    sortCode?: string | null;
    aba?: number | null;
    depositAccountType?: string | null;
    bankName?: string | null;
    institutionNumber?: number | null;
    branchCode?: number | null;
    country?: string | null;
    addressLine1: string;
    addressLine2?: string | null;
    city: string;
    region?: string | null;
    postalCode: string;
    addressCountry: string;
    payoutList?: Array<string>;
    wallet: string;
};

export type BillingBillingRead = {
    name: string | null;
    contract: string;
    type: 'immediate' | 'defered' | 'recurring';
    policy: 'all' | 'any';
    recurringPaymentParameters?: {
        maturityCount: number;
        periodicity: 'monthly';
        thresholdAmount?: number;
    } | null;
};

export type BillingBillingWrite = {
    [key: string]: unknown;
};

export type BillingJsonldBillingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string | null;
    contract: string;
    type: 'immediate' | 'defered' | 'recurring';
    policy: 'all' | 'any';
    recurringPaymentParameters?: {
        maturityCount: number;
        periodicity: 'monthly';
        thresholdAmount?: number;
    } | null;
};

export type BillingJsonldBillingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type BookingBookingRead = {
    createdAt?: string;
    createdAtTimezone?: string | null;
    cart?: string | null;
    order?: string | null;
    creatorExternalUserId?: number;
    owner?: string | null;
    lastScannedDate?: string | null;
    nbTickets: number;
    nbValidItems: number;
    nbScannedTickets: number;
    nbCoupons: number;
    status?: 'payed' | 'refunded_totally' | 'refunded_partially' | 'booked' | 'option';
    type?: 'order' | 'reservation' | 'option' | 'ticket_import';
    isReservation?: boolean;
    ticketingList?: Array<string>;
    eventDate?: string | null;
    paymentTransactionBalance?: number | null;
    paymentTransactionName?: string | null;
    refundTransactionName?: string | null;
    facialValue?: number;
    retailValue?: number;
    currency?: string;
    contract?: string | null;
    entityId?: number;
    entityName?: string;
    customer?: string;
    bookingItemList?: ArrayCollectionBookingRead;
    paymentLink?: string;
    readonly scanned?: boolean;
};

export type BookingJsonldBookingRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    createdAt?: string;
    createdAtTimezone?: string | null;
    cart?: string | null;
    order?: string | null;
    creatorExternalUserId?: number;
    owner?: string | null;
    lastScannedDate?: string | null;
    nbTickets: number;
    nbValidItems: number;
    nbScannedTickets: number;
    nbCoupons: number;
    status?: 'payed' | 'refunded_totally' | 'refunded_partially' | 'booked' | 'option';
    type?: 'order' | 'reservation' | 'option' | 'ticket_import';
    isReservation?: boolean;
    ticketingList?: Array<string>;
    eventDate?: string | null;
    paymentTransactionBalance?: number | null;
    paymentTransactionName?: string | null;
    refundTransactionName?: string | null;
    facialValue?: number;
    retailValue?: number;
    currency?: string;
    contract?: string | null;
    entityId?: number;
    entityName?: string;
    customer?: string;
    bookingItemList?: ArrayCollectionJsonldBookingRead;
    paymentLink?: string;
    readonly scanned?: boolean;
};

export type BookingTrackBookingTrackRead = {
    name: string;
    isDefault?: boolean | null;
    contract: string;
    bookingTrackMode: string | null;
    cartType?: string;
    bookingOptions?: Array<string>;
    shippingList?: CollectionBookingTrackRead;
    billingList?: CollectionBookingTrackRead;
    readonly ticketPriceList?: Array<string>;
    formList?: Array<string>;
    readonly nbTicketPrices?: number;
};

export type BookingTrackBookingTrackWrite = {
    name: string;
    contract: string;
    bookingTrackMode: string | null;
};

export type BookingTrackCloneBookingTrackInputBookingTrackWrite = {
    name: string;
};

export type BookingTrackCloneBookingTrackInputJsonldBookingTrackWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
};

export type BookingTrackDeleteWithNewBookingTrackInputBookingTrackWrite = {
    bookingTrack: BookingTrackBookingTrackWrite;
};

export type BookingTrackDeleteWithNewBookingTrackInputJsonldBookingTrackWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    bookingTrack: BookingTrackJsonldBookingTrackWrite;
};

export type BookingTrackFormsInputBookingTrackWrite = {
    customer?: Array<string>;
    participant?: Array<string>;
};

export type BookingTrackFormsInputJsonldBookingTrackWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    customer?: Array<string>;
    participant?: Array<string>;
};

export type BookingTrackPostBookingTrackInputBookingTrackWrite = {
    bookingTrackMode?: string | null;
    name: string;
    contract: string;
};

export type BookingTrackPostBookingTrackInputJsonldBookingTrackWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    bookingTrackMode?: string | null;
    name: string;
    contract: string;
};

export type BookingTrackJsonldBookingTrackRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    isDefault?: boolean | null;
    contract: string;
    bookingTrackMode: string | null;
    cartType?: string;
    bookingOptions?: Array<string>;
    shippingList?: CollectionJsonldBookingTrackRead;
    billingList?: CollectionJsonldBookingTrackRead;
    readonly ticketPriceList?: Array<string>;
    formList?: Array<string>;
    readonly nbTicketPrices?: number;
};

export type BookingTrackJsonldBookingTrackWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    contract: string;
    bookingTrackMode: string | null;
};

export type BookingTrackModeBookingTrackModeRead = {
    label: string;
    description?: string | null;
    type: 'simple' | 'needs_validation' | 'more_choices' | 'other';
    isDefault?: boolean | null;
    availableOnPaymentProviders: Array<string> | null;
    contract: string;
    cartType: 'cart' | 'reservation' | 'option';
    bookingOptions: {
        canConvertToReservation: boolean;
        canConvertToOrder: boolean;
    };
    shippingList?: Array<string>;
    billingList?: Array<string>;
};

export type BookingTrackModeJsonldBookingTrackModeRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    label: string;
    description?: string | null;
    type: 'simple' | 'needs_validation' | 'more_choices' | 'other';
    isDefault?: boolean | null;
    availableOnPaymentProviders: Array<string> | null;
    contract: string;
    cartType: 'cart' | 'reservation' | 'option';
    bookingOptions: {
        canConvertToReservation: boolean;
        canConvertToOrder: boolean;
    };
    shippingList?: Array<string>;
    billingList?: Array<string>;
};

export type BookingTypeBookingRead = {
    [key: string]: unknown;
};

export type BookingTypeJsonldBookingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CartRead = {
    comment?: string | null;
    type?: 'cart' | 'reservation' | 'option';
    readonly createdAt?: string;
    currency?: string;
    updatedAt?: string;
    expiresAt?: string | null;
    notifiedAt?: string | null;
    cartItemList?: Array<CartItemRead>;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    orderList?: Array<string>;
    customer?: string | null;
    contact?: string | null;
    couponCodeList?: Array<string> | null;
    /**
     * For an option cart, this field contains the list of event dates and acceptance status on this option
     */
    eventDateOptionStatusList?: Array<EventDateOptionStatusRead>;
    couponList?: Array<string> | null;
    couponValidityMap?: Array<string> | null;
    status?: CartStatusRead;
    parent?: CartRead | null;
    sellingDevice?: string | null;
    tagList?: Array<string>;
    option?: CartRead | null;
    owner?: string | null;
    saleSession?: AbstractSaleSessionRead | null;
    providerExportedCartList?: Array<ProviderExportedCartRead>;
    couponCode?: string | null;
    readonly cartOfferItemList?: Array<string>;
    readonly nbTickets?: number;
    readonly retailValue?: number;
    ticketList?: CollectionRead;
    coupon?: string | null;
    readonly customerPaidAmount?: number;
    readonly facialValue?: number;
    readonly facialFeeValue?: number | null;
    readonly customerPaidAmountWithoutOffer?: number;
    readonly totalItemNumber?: number;
    readonly totalTicketNumber?: number;
    contractList?: CollectionRead;
    organizationalUnitList?: CollectionRead;
    readonly customerRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    walletList?: CollectionRead;
    readonly isOption?: boolean;
    /**
     * For an option cart, returns the reservation linked to this option
     */
    reservation?: CartRead | null;
};

export type CartWrite = {
    comment?: string | null;
    type?: 'cart' | 'reservation' | 'option';
    readonly createdAt?: string;
    currency?: string;
    cartItemList?: Array<CartItemWrite>;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    customer?: CustomerWrite | null;
    contact?: CustomerWrite | null;
    couponCodeList?: Array<string> | null;
    status?: CartStatusWrite;
    parent?: CartWrite | null;
    sellingDevice?: string | null;
    tagList?: Array<TagWrite>;
    option?: CartWrite | null;
    couponCode?: string | null;
};

export type CartNotifyOptionsInputWrite = {
    approvedMessage: string;
    rejectedMessage: string;
    filters?: {
        contract: string;
        [key: string]: unknown | string;
    };
};

export type CartNotifyOptionsInputJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    approvedMessage: string;
    rejectedMessage: string;
    filters?: {
        contract: string;
        [key: string]: unknown | string;
    };
};

export type CartJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    comment?: string | null;
    type?: 'cart' | 'reservation' | 'option';
    readonly createdAt?: string;
    currency?: string;
    updatedAt?: string;
    expiresAt?: string | null;
    notifiedAt?: string | null;
    cartItemList?: Array<CartItemJsonldRead>;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    orderList?: Array<string>;
    customer?: string | null;
    contact?: string | null;
    couponCodeList?: Array<string> | null;
    /**
     * For an option cart, this field contains the list of event dates and acceptance status on this option
     */
    eventDateOptionStatusList?: Array<EventDateOptionStatusJsonldRead>;
    couponList?: Array<string> | null;
    couponValidityMap?: Array<string> | null;
    status?: CartStatusJsonldRead;
    parent?: CartJsonldRead | null;
    sellingDevice?: string | null;
    tagList?: Array<string>;
    option?: CartJsonldRead | null;
    owner?: string | null;
    saleSession?: AbstractSaleSessionJsonldRead | null;
    providerExportedCartList?: Array<ProviderExportedCartJsonldRead>;
    couponCode?: string | null;
    readonly cartOfferItemList?: Array<string>;
    readonly nbTickets?: number;
    readonly retailValue?: number;
    ticketList?: CollectionJsonldRead;
    coupon?: string | null;
    readonly customerPaidAmount?: number;
    readonly facialValue?: number;
    readonly facialFeeValue?: number | null;
    readonly customerPaidAmountWithoutOffer?: number;
    readonly totalItemNumber?: number;
    readonly totalTicketNumber?: number;
    contractList?: CollectionJsonldRead;
    organizationalUnitList?: CollectionJsonldRead;
    readonly customerRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    walletList?: CollectionJsonldRead;
    readonly isOption?: boolean;
    /**
     * For an option cart, returns the reservation linked to this option
     */
    reservation?: CartJsonldRead | null;
};

export type CartJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    comment?: string | null;
    type?: 'cart' | 'reservation' | 'option';
    readonly createdAt?: string;
    currency?: string;
    cartItemList?: Array<CartItemJsonldWrite>;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    customer?: CustomerJsonldWrite | null;
    contact?: CustomerJsonldWrite | null;
    couponCodeList?: Array<string> | null;
    status?: CartStatusJsonldWrite;
    parent?: CartJsonldWrite | null;
    sellingDevice?: string | null;
    tagList?: Array<TagJsonldWrite>;
    option?: CartJsonldWrite | null;
    couponCode?: string | null;
};

export type CartItemRead = {
    data?: Array<string> | null;
    groupKey?: string | null;
    ticketPrice: string;
    stockContingent?: string | null;
    ticketList?: Array<string>;
    facialValue?: number | null;
    availableSeatList?: Array<string>;
    participant?: string | null;
    readonly eventDate?: string | null;
    readonly seatList?: Array<string>;
    availableSeat?: string | null;
    seatReservedList?: CollectionRead;
    readonly participantRequiredFields?: Array<string>;
};

export type CartItemWrite = {
    data?: Array<string> | null;
    groupKey?: string | null;
    ticketPrice: string;
    stockContingent?: string | null;
    cart?: CartWrite;
    facialValue?: number | null;
    availableSeatList?: Array<string>;
    participant?: CustomerWrite | null;
    quantity?: number;
    availableSeat?: string | null;
};

export type CartItemCartItemRead = {
    data?: Array<string> | null;
    groupKey?: string | null;
    ticketPrice: string;
    stockContingent?: string | null;
    ticketList?: Array<string>;
    facialValue?: number | null;
    availableSeatList?: Array<string>;
    participant?: string | null;
    readonly eventDate?: string | null;
    readonly seatList?: Array<string>;
    availableSeat?: string | null;
    seatReservedList?: CollectionCartItemRead;
};

export type CartItemBulkUpdateCartItemsInputCartItemWrite = {
    'hydra:member'?: Array<string>;
};

export type CartItemBulkUpdateCartItemsInputJsonldCartItemWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    'hydra:member'?: Array<string>;
};

export type CartItemJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    data?: Array<string> | null;
    groupKey?: string | null;
    ticketPrice: string;
    stockContingent?: string | null;
    ticketList?: Array<string>;
    facialValue?: number | null;
    availableSeatList?: Array<string>;
    participant?: string | null;
    readonly eventDate?: string | null;
    readonly seatList?: Array<string>;
    availableSeat?: string | null;
    seatReservedList?: CollectionJsonldRead;
    readonly participantRequiredFields?: Array<string>;
};

export type CartItemJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    data?: Array<string> | null;
    groupKey?: string | null;
    ticketPrice: string;
    stockContingent?: string | null;
    cart?: CartJsonldWrite;
    facialValue?: number | null;
    availableSeatList?: Array<string>;
    participant?: CustomerJsonldWrite | null;
    quantity?: number;
    availableSeat?: string | null;
};

export type CartItemJsonldCartItemRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    data?: Array<string> | null;
    groupKey?: string | null;
    ticketPrice: string;
    stockContingent?: string | null;
    ticketList?: Array<string>;
    facialValue?: number | null;
    availableSeatList?: Array<string>;
    participant?: string | null;
    readonly eventDate?: string | null;
    readonly seatList?: Array<string>;
    availableSeat?: string | null;
    seatReservedList?: CollectionJsonldCartItemRead;
};

export type CartStatusRead = {
    [key: string]: unknown;
};

export type CartStatusWrite = {
    [key: string]: unknown;
};

export type CartStatusJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CartStatusJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CheckpointWrite = {
    name: string;
    contract: string;
    scanSuccessCallbackUrl?: string | null;
    seatGroupList?: Array<string>;
};

export type CheckpointCheckpointRead = {
    name: string;
    isDefault?: boolean | null;
    contract: string;
    scanSuccessCallbackUrl?: string | null;
    scanTrackCheckpointList?: Array<ScanTrackCheckpointCheckpointRead>;
    ticketCheckpointList?: Array<TicketCheckpointCheckpointRead>;
    scanList?: Array<string>;
    seatGroupList?: Array<string>;
    readonly isDeletable?: boolean;
    readonly isHidable?: boolean;
};

export type CheckpointCheckpointWrite = {
    name: string;
    contract: string;
    scanSuccessCallbackUrl?: string | null;
    seatGroupList?: Array<string>;
};

export type CheckpointJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    contract: string;
    scanSuccessCallbackUrl?: string | null;
    seatGroupList?: Array<string>;
};

export type CheckpointJsonldCheckpointRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    isDefault?: boolean | null;
    contract: string;
    scanSuccessCallbackUrl?: string | null;
    scanTrackCheckpointList?: Array<ScanTrackCheckpointJsonldCheckpointRead>;
    ticketCheckpointList?: Array<TicketCheckpointJsonldCheckpointRead>;
    scanList?: Array<string>;
    seatGroupList?: Array<string>;
    readonly isDeletable?: boolean;
    readonly isHidable?: boolean;
};

export type CheckpointJsonldCheckpointWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    contract: string;
    scanSuccessCallbackUrl?: string | null;
    seatGroupList?: Array<string>;
};

export type ClientWrite = {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    corporateName?: string | null;
    accountingNumber?: string | null;
    origin?: string | null;
    issuerName?: string | null;
    issuerBankName?: string | null;
    crmData?: Array<string> | null;
    crmId?: string | null;
    ticketingData?: Array<string> | null;
    customerList?: Array<CustomerWrite>;
    contract: string;
    active?: boolean;
};

export type ClientClientRead = {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    corporateName?: string | null;
    accountingNumber?: string | null;
    origin?: string | null;
    issuerName?: string | null;
    issuerBankName?: string | null;
    crmData?: Array<string> | null;
    crmId?: string | null;
    ticketingData?: Array<string> | null;
    customerList?: Array<string>;
    transactionList?: Array<string>;
    global?: boolean | null;
    creditByCurrencyMap?: Array<string> | null;
    debitByCurrencyMap?: Array<string> | null;
    balanceByCurrencyMap?: Array<string> | null;
    cashCouponCreditByCurrencyMap?: Array<string> | null;
    cashCouponDebitByCurrencyMap?: Array<string> | null;
    cashCouponBalanceByCurrencyMap?: Array<string> | null;
    mostRecentTransactionValueDate?: string | null;
    contract: string;
    active?: boolean;
    depositList?: Array<string>;
};

export type ClientClientWrite = {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    corporateName?: string | null;
    accountingNumber?: string | null;
    origin?: string | null;
    issuerName?: string | null;
    issuerBankName?: string | null;
    crmData?: Array<string> | null;
    crmId?: string | null;
    ticketingData?: Array<string> | null;
    customerList?: Array<string>;
    contract: string;
    active?: boolean;
};

export type ClientJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    corporateName?: string | null;
    accountingNumber?: string | null;
    origin?: string | null;
    issuerName?: string | null;
    issuerBankName?: string | null;
    crmData?: Array<string> | null;
    crmId?: string | null;
    ticketingData?: Array<string> | null;
    customerList?: Array<CustomerJsonldWrite>;
    contract: string;
    active?: boolean;
};

export type ClientJsonldClientRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    corporateName?: string | null;
    accountingNumber?: string | null;
    origin?: string | null;
    issuerName?: string | null;
    issuerBankName?: string | null;
    crmData?: Array<string> | null;
    crmId?: string | null;
    ticketingData?: Array<string> | null;
    customerList?: Array<string>;
    transactionList?: Array<string>;
    global?: boolean | null;
    creditByCurrencyMap?: Array<string> | null;
    debitByCurrencyMap?: Array<string> | null;
    balanceByCurrencyMap?: Array<string> | null;
    cashCouponCreditByCurrencyMap?: Array<string> | null;
    cashCouponDebitByCurrencyMap?: Array<string> | null;
    cashCouponBalanceByCurrencyMap?: Array<string> | null;
    mostRecentTransactionValueDate?: string | null;
    contract: string;
    active?: boolean;
    depositList?: Array<string>;
};

export type ClientJsonldClientWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    corporateName?: string | null;
    accountingNumber?: string | null;
    origin?: string | null;
    issuerName?: string | null;
    issuerBankName?: string | null;
    crmData?: Array<string> | null;
    crmId?: string | null;
    ticketingData?: Array<string> | null;
    customerList?: Array<string>;
    contract: string;
    active?: boolean;
};

export type CollectionRead = {
    [key: string]: unknown;
};

export type CollectionBookingTrackRead = {
    [key: string]: unknown;
};

export type CollectionCartItemRead = {
    [key: string]: unknown;
};

export type CollectionEventDateReadTaxReadTicketPriceReadEventDateRead = {
    [key: string]: unknown;
};

export type CollectionLogicalSeatConfigRead = {
    [key: string]: unknown;
};

export type CollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    [key: string]: unknown;
};

export type CollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    [key: string]: unknown;
};

export type CollectionProviderSeatConfigMappingRead = {
    [key: string]: unknown;
};

export type CollectionProviderTicketingMappingRead = {
    [key: string]: unknown;
};

export type CollectionRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    [key: string]: unknown;
};

export type CollectionTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    [key: string]: unknown;
};

export type CollectionTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    [key: string]: unknown;
};

export type CollectionTicketingReadEventDateReadMinisiteReadTicketingRead = {
    [key: string]: unknown;
};

export type CollectionTransactionGroupReadTransactionReadTransactionGroupRead = {
    [key: string]: unknown;
};

export type CollectionTransactionRead = {
    [key: string]: unknown;
};

export type CollectionJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldBookingTrackRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldCartItemRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldEventDateReadTaxReadTicketPriceReadEventDateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldLogicalSeatConfigRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldProviderSeatConfigMappingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldProviderTicketingMappingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldTransactionGroupReadTransactionReadTransactionGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CollectionJsonldTransactionRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ContingentContingentRead = {
    name: string;
    color: string;
    contract: string;
    readonly sanitizedName?: string;
};

export type ContingentContingentWrite = {
    name: string;
    color: string;
    contract: string;
};

export type ContingentJsonldContingentRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    color: string;
    contract: string;
    readonly sanitizedName?: string;
};

export type ContingentJsonldContingentWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    color: string;
    contract: string;
};

export type ContractWrite = {
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    defaultCurrency?: string | null;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    accountabilityEndDate?: string;
    saleSessionEndTime: string;
};

export type ContractContractReadMinisiteReadContractRead = {
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    walletList?: Array<string>;
    tagList?: Array<string>;
    deskPaymentMethodList?: Array<string>;
    sellingDeviceList?: Array<string>;
    offerRuleList?: Array<string>;
    contractAddendumList?: Array<string>;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    seatConfigList?: Array<string>;
    seatGroupList?: Array<string>;
    defaultCurrency?: string | null;
    customerFieldContractList?: Array<string>;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    deviceStateList?: Array<string>;
    sibilParameterList?: Array<string>;
    accountabilityEndDate?: string;
    providerTicketCredentialsList?: Array<string>;
    customerStatusList?: Array<string>;
    seasonList?: Array<string>;
    ticketingCategoryList?: Array<string>;
    readonly organizationalUnitList?: Array<string>;
    logicalSeatConfigList?: Array<string>;
    readonly stickerList?: Array<string>;
    saleSessionEndTime: string;
    readonly missingBankAccounts?: boolean;
    readonly currentAccountabilityPeriodStartDate?: string;
    readonly currentAccountabilityPeriodEndDate?: string;
    minisiteList?: ArrayCollectionContractReadMinisiteReadContractRead;
};

export type ContractContractWriteMinisiteWriteContractCreate = {
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    defaultCurrency?: string | null;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    accountabilityEndDate?: string;
    saleSessionEndTime: string;
};

export type ContractMinisiteReadContractReadTicketingReadMinisiteRead = {
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    walletList?: Array<string>;
    tagList?: Array<string>;
    deskPaymentMethodList?: Array<string>;
    sellingDeviceList?: Array<string>;
    offerRuleList?: Array<string>;
    contractAddendumList?: Array<string>;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    seatConfigList?: Array<string>;
    seatGroupList?: Array<string>;
    defaultCurrency?: string | null;
    customerFieldContractList?: Array<string>;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    deviceStateList?: Array<string>;
    sibilParameterList?: Array<string>;
    accountabilityEndDate?: string;
    providerTicketCredentialsList?: Array<string>;
    customerStatusList?: Array<string>;
    seasonList?: Array<string>;
    ticketingCategoryList?: Array<string>;
    readonly organizationalUnitList?: Array<string>;
    logicalSeatConfigList?: Array<string>;
    readonly stickerList?: Array<string>;
    saleSessionEndTime: string;
    readonly missingBankAccounts?: boolean;
    readonly currentAccountabilityPeriodStartDate?: string;
    readonly currentAccountabilityPeriodEndDate?: string;
    minisiteList?: ArrayCollectionMinisiteReadContractReadTicketingReadMinisiteRead;
};

export type ContractJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    defaultCurrency?: string | null;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    accountabilityEndDate?: string;
    saleSessionEndTime: string;
};

export type ContractJsonldContractReadMinisiteReadContractRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    walletList?: Array<string>;
    tagList?: Array<string>;
    deskPaymentMethodList?: Array<string>;
    sellingDeviceList?: Array<string>;
    offerRuleList?: Array<string>;
    contractAddendumList?: Array<string>;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    seatConfigList?: Array<string>;
    seatGroupList?: Array<string>;
    defaultCurrency?: string | null;
    customerFieldContractList?: Array<string>;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    deviceStateList?: Array<string>;
    sibilParameterList?: Array<string>;
    accountabilityEndDate?: string;
    providerTicketCredentialsList?: Array<string>;
    customerStatusList?: Array<string>;
    seasonList?: Array<string>;
    ticketingCategoryList?: Array<string>;
    readonly organizationalUnitList?: Array<string>;
    logicalSeatConfigList?: Array<string>;
    readonly stickerList?: Array<string>;
    saleSessionEndTime: string;
    readonly missingBankAccounts?: boolean;
    readonly currentAccountabilityPeriodStartDate?: string;
    readonly currentAccountabilityPeriodEndDate?: string;
    minisiteList?: ArrayCollectionJsonldContractReadMinisiteReadContractRead;
};

export type ContractJsonldContractWriteMinisiteWriteContractCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    defaultCurrency?: string | null;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    accountabilityEndDate?: string;
    saleSessionEndTime: string;
};

export type ContractJsonldMinisiteReadContractReadTicketingReadMinisiteRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    timezone?: string;
    billingType: 'flatFare' | 'fees';
    status?: string;
    isOnboarded?: boolean;
    onboardingData?: Array<string> | null;
    isSigned?: boolean;
    hideFees?: boolean;
    companyName?: string | null;
    companyDisplayName?: string | null;
    companyType?: null | 'BUSINESS' | 'ORGANIZATION' | 'INSTITUTION' | 'MUSEUM' | 'THEATRE' | 'CAFE_THEATRE' | 'CONCERT_HALL' | 'FESTIVAL' | 'PARK' | 'OPERA' | 'SPECTACLE_HALL' | 'HERITAGE' | 'CABARET' | 'COLLECTIVITE' | 'MEDIA' | 'UNIVERSITY' | 'OTHER';
    companyLegalForm?: null | 'SARL' | 'SA' | 'SAS' | 'SASU' | 'EURL' | 'LIBERAL' | 'SELF' | 'FONDATION' | 'SNC' | 'EI' | 'SC' | 'SCOP' | 'SCS' | 'OTHER' | 'REGIE' | 'EPIC' | 'OTHER_PUBLIC' | 'ASSOCIATION';
    companyRecordNumber?: string | null;
    companyRecordPlace?: string | null;
    companyAddress?: string | null;
    companyPostalCode?: string | null;
    companyCity?: string | null;
    companyCountry?: string | null;
    companyCapital?: string | null;
    legalRepresentativeFirstName?: string | null;
    legalRepresentativeLastName?: string | null;
    legalRepresentativeStatus?: string | null;
    legalRepresentativeBirthday?: string | null;
    legalRepresentativeNationality?: string | null;
    legalRepresentativeResidenceCountry?: string | null;
    legalRepresentativePhoneNumber?: string | null;
    companyVatNumber?: string | null;
    companyNafCode?: string | null;
    billingContactFirstName?: string | null;
    billingContactLastName?: string | null;
    billingContactEmail?: string | null;
    billingContactPhone?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    publicContactEmail?: string | null;
    orderNotificationEmailList?: Array<string> | null;
    notifyOnNewOrderSuccess?: boolean;
    walletList?: Array<string>;
    tagList?: Array<string>;
    deskPaymentMethodList?: Array<string>;
    sellingDeviceList?: Array<string>;
    offerRuleList?: Array<string>;
    contractAddendumList?: Array<string>;
    paymentFee?: string;
    locale?: string | null;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    seatConfigList?: Array<string>;
    seatGroupList?: Array<string>;
    defaultCurrency?: string | null;
    customerFieldContractList?: Array<string>;
    additionalInformation?: Array<string> | null;
    externalProviderName?: string | null;
    externalProviderId?: string | null;
    deviceStateList?: Array<string>;
    sibilParameterList?: Array<string>;
    accountabilityEndDate?: string;
    providerTicketCredentialsList?: Array<string>;
    customerStatusList?: Array<string>;
    seasonList?: Array<string>;
    ticketingCategoryList?: Array<string>;
    readonly organizationalUnitList?: Array<string>;
    logicalSeatConfigList?: Array<string>;
    readonly stickerList?: Array<string>;
    saleSessionEndTime: string;
    readonly missingBankAccounts?: boolean;
    readonly currentAccountabilityPeriodStartDate?: string;
    readonly currentAccountabilityPeriodEndDate?: string;
    minisiteList?: ArrayCollectionJsonldMinisiteReadContractReadTicketingReadMinisiteRead;
};

export type ContractAddendumContractAddendumRead = {
    contract: string;
    summary: string;
    content: string;
    signatureDate?: string | null;
};

export type ContractAddendumContractAddendumWrite = {
    contract: string;
    summary: string;
    content: string;
    signatureDate?: string | null;
};

export type ContractAddendumJsonldContractAddendumRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    summary: string;
    content: string;
    signatureDate?: string | null;
};

export type ContractAddendumJsonldContractAddendumWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    summary: string;
    content: string;
    signatureDate?: string | null;
};

export type CouponWrite = {
    code: string;
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    offerRuleList?: Array<OfferRuleWrite>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    customerStatusList?: Array<string>;
    season?: string | null;
    data?: Array<string>;
    participant?: string | null;
    amount?: number | null;
};

export type CouponCouponRead = {
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    nbUseCurrent: number | null;
    initialAmount?: number | null;
    creatingOfferRule?: string | null;
    readonly createdAt?: string;
    offerRuleList?: Array<string>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    creatingOrderItemList?: Array<string>;
    userId?: number | null;
    minisite?: string | null;
    customerStatusList?: Array<string>;
    season?: string | null;
    transactionList?: Array<string>;
    data?: Array<string>;
    orderItemCashCouponList?: Array<OrderItemCashCouponCouponRead>;
    participant?: string | null;
    amount?: number | null;
    readonly creatingOrder?: string | null;
    readonly isExpired?: boolean;
    readonly isNominative?: boolean;
    readonly applyingOrderList?: Array<string>;
};

export type CouponCouponWrite = {
    code: string;
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    offerRuleList?: Array<string>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    customerStatusList?: Array<string>;
    season?: string | null;
    data?: Array<string>;
    participant?: string | null;
    amount?: number | null;
};

export type CouponOfferRuleReadCouponReadOfferRuleRead = {
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    nbUseCurrent: number | null;
    initialAmount?: number | null;
    creatingOfferRule?: OfferRuleOfferRuleReadCouponReadOfferRuleRead | null;
    readonly createdAt?: string;
    offerRuleList?: Array<OfferRuleOfferRuleReadCouponReadOfferRuleRead>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    creatingOrderItemList?: Array<string>;
    userId?: number | null;
    minisite?: string | null;
    customerStatusList?: Array<string>;
    season?: string | null;
    transactionList?: Array<string>;
    data?: Array<string>;
    orderItemCashCouponList?: Array<OrderItemCashCouponOfferRuleReadCouponReadOfferRuleRead>;
    participant?: string | null;
    amount?: number | null;
    readonly creatingOrder?: string | null;
    readonly isExpired?: boolean;
    readonly isNominative?: boolean;
    readonly applyingOrderList?: Array<string>;
};

export type CouponJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    code: string;
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    offerRuleList?: Array<OfferRuleJsonldWrite>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    customerStatusList?: Array<string>;
    season?: string | null;
    data?: Array<string>;
    participant?: string | null;
    amount?: number | null;
};

export type CouponJsonldCouponRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    nbUseCurrent: number | null;
    initialAmount?: number | null;
    creatingOfferRule?: string | null;
    readonly createdAt?: string;
    offerRuleList?: Array<string>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    creatingOrderItemList?: Array<string>;
    userId?: number | null;
    minisite?: string | null;
    customerStatusList?: Array<string>;
    season?: string | null;
    transactionList?: Array<string>;
    data?: Array<string>;
    orderItemCashCouponList?: Array<OrderItemCashCouponJsonldCouponRead>;
    participant?: string | null;
    amount?: number | null;
    readonly creatingOrder?: string | null;
    readonly isExpired?: boolean;
    readonly isNominative?: boolean;
    readonly applyingOrderList?: Array<string>;
};

export type CouponJsonldCouponWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    code: string;
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    offerRuleList?: Array<string>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    customerStatusList?: Array<string>;
    season?: string | null;
    data?: Array<string>;
    participant?: string | null;
    amount?: number | null;
};

export type CouponJsonldOfferRuleReadCouponReadOfferRuleRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    description?: string | null;
    emailDescription?: string | null;
    usage: string;
    nbUseMax?: number | null;
    nbUseCurrent: number | null;
    initialAmount?: number | null;
    creatingOfferRule?: OfferRuleJsonldOfferRuleReadCouponReadOfferRuleRead | null;
    readonly createdAt?: string;
    offerRuleList?: Array<OfferRuleJsonldOfferRuleReadCouponReadOfferRuleRead>;
    validFrom?: string | null;
    validUntil?: string | null;
    enabled?: boolean;
    creatingOrderItemList?: Array<string>;
    userId?: number | null;
    minisite?: string | null;
    customerStatusList?: Array<string>;
    season?: string | null;
    transactionList?: Array<string>;
    data?: Array<string>;
    orderItemCashCouponList?: Array<OrderItemCashCouponJsonldOfferRuleReadCouponReadOfferRuleRead>;
    participant?: string | null;
    amount?: number | null;
    readonly creatingOrder?: string | null;
    readonly isExpired?: boolean;
    readonly isNominative?: boolean;
    readonly applyingOrderList?: Array<string>;
};

export type CouponUseApplicationOrderItemRead = {
    [key: string]: unknown;
};

export type CouponUseApplicationOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    [key: string]: unknown;
};

export type CouponUseApplicationOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    [key: string]: unknown;
};

export type CouponUseApplicationJsonldOrderItemRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CouponUseApplicationJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CouponUseApplicationJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerWrite = {
    additionnalInformation?: {
        phone?: string | Array<string>;
        email?: string | Array<string>;
        [key: string]: unknown | (string | Array<string>) | (string | Array<string>) | undefined;
    } | null;
    shippingData?: {
        shippingAddress: {
            lastname?: string;
            firstname?: string;
            address?: string;
            zipcode?: string;
            city?: string;
            country?: string;
        };
    } | null;
    shoppingData?: Array<string> | null;
    crmId?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    email?: string | null;
    civility?: string | null;
    address?: string | null;
    zipcode?: string | null;
    city?: string | null;
    phone?: string | null;
    birthday?: string | null;
    nationality?: string | null;
    countryOfResidence?: string | null;
    gdprInformation?: Array<string> | null;
    readonly createdAt?: string;
    orderList?: Array<string>;
    client?: ClientWrite | null;
    contract?: string | null;
    organizationId?: string | null;
    type?: 'contact' | 'organization';
    diffusionList?: Array<string> | null;
};

export type CustomerCustomerRead = {
    additionnalInformation?: {
        phone?: string | Array<string>;
        email?: string | Array<string>;
        [key: string]: unknown | (string | Array<string>) | (string | Array<string>) | undefined;
    } | null;
    shippingData?: {
        shippingAddress: {
            lastname?: string;
            firstname?: string;
            address?: string;
            zipcode?: string;
            city?: string;
            country?: string;
        };
    } | null;
    shoppingData?: Array<string> | null;
    crmId?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    email?: string | null;
    civility?: string | null;
    address?: string | null;
    zipcode?: string | null;
    city?: string | null;
    phone?: string | null;
    birthday?: string | null;
    nationality?: string | null;
    countryOfResidence?: string | null;
    locale?: string | null;
    gdprInformation?: Array<string> | null;
    readonly createdAt?: string;
    orderList?: Array<string>;
    cartList?: Array<string>;
    client?: string | null;
    contract?: string | null;
    organizationId?: string | null;
    type?: 'contact' | 'organization';
    diffusionList?: Array<string> | null;
    readonly hasOptedIn?: boolean;
    ticketList?: ArrayCollectionCustomerRead;
};

export type CustomerCustomerWrite = {
    additionnalInformation?: {
        phone?: string | Array<string>;
        email?: string | Array<string>;
        [key: string]: unknown | (string | Array<string>) | (string | Array<string>) | undefined;
    } | null;
    shippingData?: {
        shippingAddress: {
            lastname?: string;
            firstname?: string;
            address?: string;
            zipcode?: string;
            city?: string;
            country?: string;
        };
    } | null;
    shoppingData?: Array<string> | null;
    crmId?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    email?: string | null;
    civility?: string | null;
    address?: string | null;
    zipcode?: string | null;
    city?: string | null;
    phone?: string | null;
    birthday?: string | null;
    nationality?: string | null;
    countryOfResidence?: string | null;
    gdprInformation?: Array<string> | null;
    readonly createdAt?: string;
    orderList?: Array<string>;
    client?: string | null;
    contract?: string | null;
    organizationId?: string | null;
    type?: 'contact' | 'organization';
    diffusionList?: Array<string> | null;
};

export type CustomerBulkUpdateCustomersInputCustomerWrite = {
    'hydra:member'?: Array<string>;
};

export type CustomerBulkUpdateCustomersInputJsonldCustomerWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    'hydra:member'?: Array<string>;
};

export type CustomerJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    additionnalInformation?: {
        phone?: string | Array<string>;
        email?: string | Array<string>;
        [key: string]: unknown | (string | Array<string>) | (string | Array<string>) | undefined;
    } | null;
    shippingData?: {
        shippingAddress: {
            lastname?: string;
            firstname?: string;
            address?: string;
            zipcode?: string;
            city?: string;
            country?: string;
        };
    } | null;
    shoppingData?: Array<string> | null;
    crmId?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    email?: string | null;
    civility?: string | null;
    address?: string | null;
    zipcode?: string | null;
    city?: string | null;
    phone?: string | null;
    birthday?: string | null;
    nationality?: string | null;
    countryOfResidence?: string | null;
    gdprInformation?: Array<string> | null;
    readonly createdAt?: string;
    orderList?: Array<string>;
    client?: ClientJsonldWrite | null;
    contract?: string | null;
    organizationId?: string | null;
    type?: 'contact' | 'organization';
    diffusionList?: Array<string> | null;
};

export type CustomerJsonldCustomerRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    additionnalInformation?: {
        phone?: string | Array<string>;
        email?: string | Array<string>;
        [key: string]: unknown | (string | Array<string>) | (string | Array<string>) | undefined;
    } | null;
    shippingData?: {
        shippingAddress: {
            lastname?: string;
            firstname?: string;
            address?: string;
            zipcode?: string;
            city?: string;
            country?: string;
        };
    } | null;
    shoppingData?: Array<string> | null;
    crmId?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    email?: string | null;
    civility?: string | null;
    address?: string | null;
    zipcode?: string | null;
    city?: string | null;
    phone?: string | null;
    birthday?: string | null;
    nationality?: string | null;
    countryOfResidence?: string | null;
    locale?: string | null;
    gdprInformation?: Array<string> | null;
    readonly createdAt?: string;
    orderList?: Array<string>;
    cartList?: Array<string>;
    client?: string | null;
    contract?: string | null;
    organizationId?: string | null;
    type?: 'contact' | 'organization';
    diffusionList?: Array<string> | null;
    readonly hasOptedIn?: boolean;
    ticketList?: ArrayCollectionJsonldCustomerRead;
};

export type CustomerJsonldCustomerWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    additionnalInformation?: {
        phone?: string | Array<string>;
        email?: string | Array<string>;
        [key: string]: unknown | (string | Array<string>) | (string | Array<string>) | undefined;
    } | null;
    shippingData?: {
        shippingAddress: {
            lastname?: string;
            firstname?: string;
            address?: string;
            zipcode?: string;
            city?: string;
            country?: string;
        };
    } | null;
    shoppingData?: Array<string> | null;
    crmId?: string | null;
    firstname?: string | null;
    lastname?: string | null;
    email?: string | null;
    civility?: string | null;
    address?: string | null;
    zipcode?: string | null;
    city?: string | null;
    phone?: string | null;
    birthday?: string | null;
    nationality?: string | null;
    countryOfResidence?: string | null;
    gdprInformation?: Array<string> | null;
    readonly createdAt?: string;
    orderList?: Array<string>;
    client?: string | null;
    contract?: string | null;
    organizationId?: string | null;
    type?: 'contact' | 'organization';
    diffusionList?: Array<string> | null;
};

export type CustomerFieldCustomerFieldRead = {
    label: string;
    description?: string | null;
    slug: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
    isGeneric?: boolean;
    readonly options?: Array<string> | null;
};

export type CustomerFieldCustomerFieldWrite = {
    label: string;
    description?: string | null;
    slug: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
};

export type CustomerFieldJsonldCustomerFieldRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    label: string;
    description?: string | null;
    slug: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
    isGeneric?: boolean;
    readonly options?: Array<string> | null;
};

export type CustomerFieldJsonldCustomerFieldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    label: string;
    description?: string | null;
    slug: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
};

export type CustomerFieldContractCustomerFieldContractRead = {
    contract: string;
    customerField?: string | null;
    label: string | null;
    description?: string | null;
    slug?: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
    dataTarget: CustomerFieldContractDataTargetCustomerFieldContractRead;
    customerFieldContractParent?: CustomerFieldContractCustomerFieldContractRead | null;
    relatedTo?: CustomerFieldContractRelatedToCustomerFieldContractRead | null;
    required?: boolean;
    form?: string | null;
    readonly readOnly?: boolean;
};

export type CustomerFieldContractCustomerFieldContractWrite = {
    contract: string;
    label: string | null;
    description?: string | null;
    slug?: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
    dataTarget: CustomerFieldContractDataTargetCustomerFieldContractWrite;
    customerFieldContractParent?: CustomerFieldContractCustomerFieldContractWrite | null;
    relatedTo?: CustomerFieldContractRelatedToCustomerFieldContractWrite | null;
    required?: boolean;
    form?: string | null;
};

export type CustomerFieldContractJsonldCustomerFieldContractRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    customerField?: string | null;
    label: string | null;
    description?: string | null;
    slug?: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
    dataTarget: CustomerFieldContractDataTargetJsonldCustomerFieldContractRead;
    customerFieldContractParent?: CustomerFieldContractJsonldCustomerFieldContractRead | null;
    relatedTo?: CustomerFieldContractRelatedToJsonldCustomerFieldContractRead | null;
    required?: boolean;
    form?: string | null;
    readonly readOnly?: boolean;
};

export type CustomerFieldContractJsonldCustomerFieldContractWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    label: string | null;
    description?: string | null;
    slug?: string;
    type: string;
    isDeletable?: boolean;
    position?: number | null;
    formType: string;
    formIsMultiple?: boolean;
    formOptions?: Array<string> | null;
    searchType: string;
    searchOptions?: Array<string> | null;
    dataTarget: CustomerFieldContractDataTargetJsonldCustomerFieldContractWrite;
    customerFieldContractParent?: CustomerFieldContractJsonldCustomerFieldContractWrite | null;
    relatedTo?: CustomerFieldContractRelatedToJsonldCustomerFieldContractWrite | null;
    required?: boolean;
    form?: string | null;
};

export type CustomerFieldContractDataTargetCustomerFieldContractRead = {
    [key: string]: unknown;
};

export type CustomerFieldContractDataTargetCustomerFieldContractWrite = {
    [key: string]: unknown;
};

export type CustomerFieldContractDataTargetJsonldCustomerFieldContractRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerFieldContractDataTargetJsonldCustomerFieldContractWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerFieldContractRelatedToCustomerFieldContractRead = {
    [key: string]: unknown;
};

export type CustomerFieldContractRelatedToCustomerFieldContractWrite = {
    [key: string]: unknown;
};

export type CustomerFieldContractRelatedToJsonldCustomerFieldContractRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerFieldContractRelatedToJsonldCustomerFieldContractWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerStatusCustomerStatusRead = {
    label: string;
    contract: string;
    couponList?: Array<string>;
    createdAt?: string;
    isSubscription?: boolean;
};

export type CustomerStatusCustomerStatusWrite = {
    label: string;
    contract: string;
    couponList?: Array<string>;
    isSubscription?: boolean;
};

export type CustomerStatusJsonldCustomerStatusRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    label: string;
    contract: string;
    couponList?: Array<string>;
    createdAt?: string;
    isSubscription?: boolean;
};

export type CustomerStatusJsonldCustomerStatusWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    label: string;
    contract: string;
    couponList?: Array<string>;
    isSubscription?: boolean;
};

export type CustomerTypeWrite = {
    [key: string]: unknown;
};

export type CustomerTypeCustomerRead = {
    [key: string]: unknown;
};

export type CustomerTypeCustomerWrite = {
    [key: string]: unknown;
};

export type CustomerTypeJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerTypeJsonldCustomerRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type CustomerTypeJsonldCustomerWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type DepositWrite = {
    currency?: string | null;
    accountType?: 'client' | 'cash_coupon';
    sellingDevice: string;
    client?: string | null;
    order?: string | null;
    transactionList?: Array<TransactionWrite>;
    providerMetadata?: Array<string> | null;
    cashCoupon?: CouponWrite | null;
    provider?: 'manual' | 'stripe' | 'payzone' | 'payline' | 'payrexx';
};

export type DepositDepositRead = {
    currency?: string | null;
    accountType?: 'client' | 'cash_coupon';
    sellingDevice: string;
    client?: string | null;
    order?: string | null;
    transactionList?: Array<string>;
    providerMetadata?: Array<string> | null;
    cashCoupon?: string | null;
    clientHistory?: Array<string>;
    provider?: 'manual' | 'stripe' | 'payzone' | 'payline' | 'payrexx';
    readonly contract?: string | null;
};

export type DepositJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    currency?: string | null;
    accountType?: 'client' | 'cash_coupon';
    sellingDevice: string;
    client?: string | null;
    order?: string | null;
    transactionList?: Array<TransactionJsonldWrite>;
    providerMetadata?: Array<string> | null;
    cashCoupon?: CouponJsonldWrite | null;
    provider?: 'manual' | 'stripe' | 'payzone' | 'payline' | 'payrexx';
};

export type DepositJsonldDepositRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    currency?: string | null;
    accountType?: 'client' | 'cash_coupon';
    sellingDevice: string;
    client?: string | null;
    order?: string | null;
    transactionList?: Array<string>;
    providerMetadata?: Array<string> | null;
    cashCoupon?: string | null;
    clientHistory?: Array<string>;
    provider?: 'manual' | 'stripe' | 'payzone' | 'payline' | 'payrexx';
    readonly contract?: string | null;
};

export type DeskPaymentMethodDeskPaymentMethodRead = {
    readonly id?: number;
    contract: string;
    code?: string;
    labelTranslationKey?: string;
    position?: number | null;
    enabled?: boolean;
    createdAt?: string;
    readonly flexible?: boolean;
};

export type DeskPaymentMethodDeskPaymentMethodWrite = {
    contract: string;
    code?: string;
    labelTranslationKey?: string;
    position?: number | null;
    enabled?: boolean;
};

export type DeskPaymentMethodJsonldDeskPaymentMethodRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    contract: string;
    code?: string;
    labelTranslationKey?: string;
    position?: number | null;
    enabled?: boolean;
    createdAt?: string;
    readonly flexible?: boolean;
};

export type DeskPaymentMethodJsonldDeskPaymentMethodWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    code?: string;
    labelTranslationKey?: string;
    position?: number | null;
    enabled?: boolean;
};

export type DeskSessionDeskSessionRead = {
    userId?: number;
    userEmail?: string;
    startDate?: string;
    endDate?: string | null;
    sessionNumber?: number | null;
    contract: string;
    timezone?: string | null;
    totalBalance?: number;
};

export type DeskSessionDeskSessionWrite = {
    endDate?: string | null;
    contract: string;
    timezone?: string | null;
};

export type DeskSessionJsonldDeskSessionRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    userId?: number;
    userEmail?: string;
    startDate?: string;
    endDate?: string | null;
    sessionNumber?: number | null;
    contract: string;
    timezone?: string | null;
    totalBalance?: number;
};

export type DeskSessionJsonldDeskSessionWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    endDate?: string | null;
    contract: string;
    timezone?: string | null;
};

export type DeviceStateDeviceStateRead = {
    id?: string;
    name?: string | null;
    contract?: string | null;
    isTokenReadable?: boolean;
    locationStatus?: string;
    lastUpdatedTimestamp?: string | null;
    uptime?: string | null;
    ramUsage?: string | null;
    diskUsage?: string | null;
    forwardingMode?: boolean | null;
    printersState?: string;
    publicIpAddress?: string | null;
    networkInterfaces?: Array<string> | null;
    lastLogs?: string | null;
    throttleStatus?: string | null;
    paperTypeTicketParametersMap?: Array<string> | null;
    pageCutMode?: string | null;
    printSpeed?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    forwardingPort?: number | null;
    wifiSsid?: string | null;
    wifiPassword?: string | null;
    configuration?: Array<string> | null;
    packageVersion?: string | null;
    comment?: string | null;
    isLost?: boolean;
    menderId?: string | null;
};

export type DeviceStateDeviceStateWrite = {
    id?: string;
    name?: string | null;
    contract?: string | null;
    token?: string | null;
    isTokenReadable?: boolean;
    locationStatus?: string;
    lastUpdatedTimestamp?: string | null;
    uptime?: string | null;
    ramUsage?: string | null;
    diskUsage?: string | null;
    forwardingMode?: boolean | null;
    printersState?: string;
    networkInterfaces?: Array<string> | null;
    lastLogs?: string | null;
    throttleStatus?: string | null;
    paperTypeTicketParametersMap?: Array<string> | null;
    pageCutMode?: string | null;
    printSpeed?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    forwardingPort?: number | null;
    configuration?: Array<string> | null;
    packageVersion?: string | null;
    isLost?: boolean;
};

export type DeviceStateJsonldDeviceStateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    id?: string;
    name?: string | null;
    contract?: string | null;
    isTokenReadable?: boolean;
    locationStatus?: string;
    lastUpdatedTimestamp?: string | null;
    uptime?: string | null;
    ramUsage?: string | null;
    diskUsage?: string | null;
    forwardingMode?: boolean | null;
    printersState?: string;
    publicIpAddress?: string | null;
    networkInterfaces?: Array<string> | null;
    lastLogs?: string | null;
    throttleStatus?: string | null;
    paperTypeTicketParametersMap?: Array<string> | null;
    pageCutMode?: string | null;
    printSpeed?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    forwardingPort?: number | null;
    wifiSsid?: string | null;
    wifiPassword?: string | null;
    configuration?: Array<string> | null;
    packageVersion?: string | null;
    comment?: string | null;
    isLost?: boolean;
    menderId?: string | null;
};

export type DeviceStateJsonldDeviceStateWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    id?: string;
    name?: string | null;
    contract?: string | null;
    token?: string | null;
    isTokenReadable?: boolean;
    locationStatus?: string;
    lastUpdatedTimestamp?: string | null;
    uptime?: string | null;
    ramUsage?: string | null;
    diskUsage?: string | null;
    forwardingMode?: boolean | null;
    printersState?: string;
    networkInterfaces?: Array<string> | null;
    lastLogs?: string | null;
    throttleStatus?: string | null;
    paperTypeTicketParametersMap?: Array<string> | null;
    pageCutMode?: string | null;
    printSpeed?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    forwardingPort?: number | null;
    configuration?: Array<string> | null;
    packageVersion?: string | null;
    isLost?: boolean;
};

export type EventDateWrite = {
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    unlimitedStock?: boolean;
};

export type EventDateEventDateReadTaxReadTicketPriceReadEventDateRead = {
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    unlimitedStock?: boolean;
};

export type EventDateTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateTicketingReadEventDateReadMinisiteReadTicketingRead = {
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateEventDateCancelInputWrite = {
    [key: string]: unknown;
};

export type EventDateEventDateCancelInputJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type EventDateEventDateCloneInputTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    ticketing?: TicketingTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
    startDate?: string;
    endDate?: string | null;
    status?: EventDateStatusTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
};

export type EventDateEventDateCloneInputJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketing?: TicketingJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
    startDate?: string;
    endDate?: string | null;
    status?: EventDateStatusJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
};

export type EventDateJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    unlimitedStock?: boolean;
};

export type EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    unlimitedStock?: boolean;
};

export type EventDateJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    startDate?: string | null;
    endDate?: string | null;
    startOfEventDay?: string | null;
    endOfEventDay?: string | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    /**
     * The ticketing IRI
     */
    ticketing: string;
    /**
     * A list of ticket prices URI
     */
    ticketPriceList?: Array<string>;
    stockContingentList?: Array<string>;
    status?: 'draft' | 'opened' | 'closed' | 'cancelled';
    type?: 'general_public' | 'school' | 'business' | 'other';
    readonly createdAt?: string;
    readonly updatedAt?: string;
    /**
     * Seating information for this event date. Something like `room is on the left`.
     */
    seatingName?: string | null;
    isReservableOnline?: boolean;
    availableSeatList?: Array<string>;
    logicalSeatConfig?: string | null;
    representationNumber?: number | null;
    isRepresentationNumberManuallyFixed?: boolean;
    unlimitedStock?: boolean;
    availabilityStatus?: 'draft' | 'opened' | 'closed' | 'cancelled' | 'saleScheduled';
    /**
     * @deprecated
     */
    readonly minPrice?: number;
    /**
     * @deprecated
     */
    readonly maxPrice?: number;
    /**
     * @deprecated
     */
    readonly manuallySetStock?: number | null;
    readonly contractApproved?: boolean;
    /**
     * @deprecated
     */
    readonly seatReservedList?: Array<string>;
    readonly dynamic?: boolean;
    readonly isNumberedSeating?: boolean;
};

export type EventDateOptionStatusRead = {
    option?: CartRead;
    requestedEventDate?: string;
    requestedParticipantNb?: number;
    status?: OptionStatusRead;
    approvedEventDate?: string | null;
    approvedParticipantNb?: number | null;
    readonly requestedParticipantNbPerTicketPriceHash?: Array<string>;
    readonly requestedParticipantNbPerContingent?: Array<string>;
};

export type EventDateOptionStatusJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    option?: CartJsonldRead;
    requestedEventDate?: string;
    requestedParticipantNb?: number;
    status?: OptionStatusJsonldRead;
    approvedEventDate?: string | null;
    approvedParticipantNb?: number | null;
    readonly requestedParticipantNbPerTicketPriceHash?: Array<string>;
    readonly requestedParticipantNbPerContingent?: Array<string>;
};

export type EventDateStatusWrite = {
    [key: string]: unknown;
};

export type EventDateStatusEventDateReadTaxReadTicketPriceReadEventDateRead = {
    [key: string]: unknown;
};

export type EventDateStatusTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    [key: string]: unknown;
};

export type EventDateStatusTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    [key: string]: unknown;
};

export type EventDateStatusTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    [key: string]: unknown;
};

export type EventDateStatusTicketingReadEventDateReadMinisiteReadTicketingRead = {
    [key: string]: unknown;
};

export type EventDateStatusJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type EventDateStatusJsonldEventDateReadTaxReadTicketPriceReadEventDateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type EventDateStatusJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type EventDateStatusJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type EventDateStatusJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type EventDateStatusJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type FeatureFeatureRead = {
    name?: string;
    enabled?: boolean;
    contract?: string | null;
};

export type FeatureFeatureUpdate = {
    [key: string]: unknown;
};

export type FeatureJsonldFeatureRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    name?: string;
    enabled?: boolean;
    contract?: string | null;
};

export type FeatureJsonldFeatureUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type FeeFeeRead = {
    contract: string;
    type: 'postalMail' | 'registeredMail';
    amount?: number | null;
    rate?: number | null;
    vatRate?: number;
    currency: string;
    calculatedAmount?: number;
};

export type FeeFeeWrite = {
    [key: string]: unknown;
};

export type FeeJsonldFeeRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    type: 'postalMail' | 'registeredMail';
    amount?: number | null;
    rate?: number | null;
    vatRate?: number;
    currency: string;
    calculatedAmount?: number;
};

export type FeeJsonldFeeWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type FormFormRead = {
    type?: 'customer' | 'participant';
    customerFieldContractList?: Array<string>;
};

export type FormJsonldFormRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    type?: 'customer' | 'participant';
    customerFieldContractList?: Array<string>;
};

export type ImportedFileProviderTicketImportedFileRead = {
    [key: string]: unknown;
};

export type ImportedFileJsonldProviderTicketImportedFileRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type InvoiceInvoiceRead = {
    identifier?: string | null;
    cancelled?: boolean;
    type?: string;
    createdAt?: string;
    invoicedAt?: string | null;
    invoiceLineList?: Array<InvoiceLineInvoiceRead>;
    order: string | null;
    refund?: string | null;
    customerName?: string | null;
    customerAddress?: string | null;
    customerVatNumber?: string | null;
    customerSiretNumber?: string | null;
    customerAdditionalInfo?: string | null;
    hash?: string | null;
    parameters?: Array<string> | null;
    metadata?: Array<string> | null;
    payout?: string | null;
    orderItemInvoiceGroup?: string | null;
    readonly groupLabel?: string | null;
    readonly customerPaidAmountExvat?: number;
};

export type InvoiceInvoiceWrite = {
    customerName?: string | null;
    customerAddress?: string | null;
    customerVatNumber?: string | null;
    customerSiretNumber?: string | null;
    customerAdditionalInfo?: string | null;
    parameters?: Array<string> | null;
    metadata?: Array<string> | null;
};

export type InvoiceJsonldInvoiceRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    identifier?: string | null;
    cancelled?: boolean;
    type?: string;
    createdAt?: string;
    invoicedAt?: string | null;
    invoiceLineList?: Array<InvoiceLineJsonldInvoiceRead>;
    order: string | null;
    refund?: string | null;
    customerName?: string | null;
    customerAddress?: string | null;
    customerVatNumber?: string | null;
    customerSiretNumber?: string | null;
    customerAdditionalInfo?: string | null;
    hash?: string | null;
    parameters?: Array<string> | null;
    metadata?: Array<string> | null;
    payout?: string | null;
    orderItemInvoiceGroup?: string | null;
    readonly groupLabel?: string | null;
    readonly customerPaidAmountExvat?: number;
};

export type InvoiceJsonldInvoiceWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    customerName?: string | null;
    customerAddress?: string | null;
    customerVatNumber?: string | null;
    customerSiretNumber?: string | null;
    customerAdditionalInfo?: string | null;
    parameters?: Array<string> | null;
    metadata?: Array<string> | null;
};

export type InvoiceLineInvoiceLineReadTaxReadInvoiceLineRead = {
    readonly valueExvat?: number;
    readonly amountForProExvat?: number;
    readonly unitAmountExvat?: number;
    readonly customerPaidAmountExvat?: number;
};

export type InvoiceLineInvoiceRead = {
    ticketingTitle?: string | null;
    label?: string;
    feeAmount?: number;
    vatRate?: number;
    feeVatRate?: number | null;
    ticketingTimezone?: string | null;
    eventDateStartDate?: string | null;
    eventDateEndDate?: string | null;
    orderItem?: string | null;
    refundOrderItem?: string | null;
    unitAmount?: number;
    valueIncvat?: number;
    tax?: number;
    fee?: number;
    amountForPro?: number;
    readonly valueExvat?: number;
    readonly amountForProExvat?: number;
    readonly unitAmountExvat?: number;
    readonly customerPaidAmountExvat?: number;
    activityTitle?: string;
};

export type InvoiceLineJsonldInvoiceLineReadTaxReadInvoiceLineRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly valueExvat?: number;
    readonly amountForProExvat?: number;
    readonly unitAmountExvat?: number;
    readonly customerPaidAmountExvat?: number;
};

export type InvoiceLineJsonldInvoiceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketingTitle?: string | null;
    label?: string;
    feeAmount?: number;
    vatRate?: number;
    feeVatRate?: number | null;
    ticketingTimezone?: string | null;
    eventDateStartDate?: string | null;
    eventDateEndDate?: string | null;
    orderItem?: string | null;
    refundOrderItem?: string | null;
    unitAmount?: number;
    valueIncvat?: number;
    tax?: number;
    fee?: number;
    amountForPro?: number;
    readonly valueExvat?: number;
    readonly amountForProExvat?: number;
    readonly unitAmountExvat?: number;
    readonly customerPaidAmountExvat?: number;
    activityTitle?: string;
};

export type IsHidableResourceIsHidableResourceRead = {
    [key: string]: unknown;
};

export type IsHidableResourceToogleVisibilityWriteIsHidableResourceWrite = {
    [key: string]: unknown;
};

export type IsHidableResourceToogleVisibilityInputToogleVisibilityWriteIsHidableResourceWrite = {
    filters: {
        contract: string;
        [key: string]: unknown | string;
    };
};

export type IsHidableResourceToogleVisibilityInputJsonldToogleVisibilityWriteIsHidableResourceWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    filters: {
        contract: string;
        [key: string]: unknown | string;
    };
};

export type IsHidableResourceJsonldIsHidableResourceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type IsHidableResourceJsonldToogleVisibilityWriteIsHidableResourceWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type JobJobRead = {
    id?: string;
    name?: 'ticketing_stats' | 'mass_action';
    status?: 'PENDING' | 'STARTED' | 'SUCCESS' | 'FAIL';
    contract: string;
    userId?: number | null;
    userData?: Array<string> | null;
    progress?: number | null;
    result?: Array<string> | null;
    parameters?: Array<string>;
    createdAt?: string;
    readonly updatedAt?: string;
};

export type JobJobWrite = {
    name?: 'ticketing_stats' | 'mass_action';
    contract: string;
    result?: Array<string> | null;
    parameters?: Array<string>;
};

export type JobJsonldJobRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    id?: string;
    name?: 'ticketing_stats' | 'mass_action';
    status?: 'PENDING' | 'STARTED' | 'SUCCESS' | 'FAIL';
    contract: string;
    userId?: number | null;
    userData?: Array<string> | null;
    progress?: number | null;
    result?: Array<string> | null;
    parameters?: Array<string>;
    createdAt?: string;
    readonly updatedAt?: string;
};

export type JobJsonldJobWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: 'ticketing_stats' | 'mass_action';
    contract: string;
    result?: Array<string> | null;
    parameters?: Array<string>;
};

export type LetteringWrite = {
    transactionList?: Array<string>;
};

export type LetteringLetteringReadLetteringRead = {
    transactionList?: Array<string>;
};

export type LetteringJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    transactionList?: Array<string>;
};

export type LetteringJsonldLetteringReadLetteringRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    transactionList?: Array<string>;
};

export type LogicalSeatConfigLogicalSeatConfigRead = {
    totalStock?: number | null;
    unlimitedStock?: boolean;
    createdAt?: string;
    updatedAt?: string;
    name: string | null;
    seatConfig?: string | null;
    contract?: string;
    defaultSeatGroup?: string | null;
    availableSeatModelList?: Array<string>;
    eventDateList?: Array<string>;
    stockContingentList?: Array<string>;
    seatGroupList?: CollectionLogicalSeatConfigRead;
    contingentList?: CollectionLogicalSeatConfigRead;
    readonly isNumberedSeating?: boolean;
};

export type LogicalSeatConfigLogicalSeatConfigWrite = {
    totalStock?: number | null;
    unlimitedStock?: boolean;
    name: string | null;
    seatConfig?: string | null;
    contract?: string;
    defaultSeatGroup?: string | null;
};

export type LogicalSeatConfigJsonldLogicalSeatConfigRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    createdAt?: string;
    updatedAt?: string;
    name: string | null;
    seatConfig?: string | null;
    contract?: string;
    defaultSeatGroup?: string | null;
    availableSeatModelList?: Array<string>;
    eventDateList?: Array<string>;
    stockContingentList?: Array<string>;
    seatGroupList?: CollectionJsonldLogicalSeatConfigRead;
    contingentList?: CollectionJsonldLogicalSeatConfigRead;
    readonly isNumberedSeating?: boolean;
};

export type LogicalSeatConfigJsonldLogicalSeatConfigWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    name: string | null;
    seatConfig?: string | null;
    contract?: string;
    defaultSeatGroup?: string | null;
};

export type MappingErrorTypeProviderMappingNotificationRead = {
    [key: string]: unknown;
};

export type MappingErrorTypeJsonldProviderMappingNotificationRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type MassActionAggregateEventDateReadMassActionAggregateRead = {
    name?: string;
    aggregationResult?: Array<string>;
};

export type MassActionAggregateMassActionAggregateInputWrite = {
    name: 'ticketPriceAvailability';
    aggregationParams: Array<string>;
};

export type MassActionAggregateMassActionAggregateInputJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: 'ticketPriceAvailability';
    aggregationParams: Array<string>;
};

export type MassActionAggregateJsonldEventDateReadMassActionAggregateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    aggregationResult?: Array<string>;
};

export type MasterTicketMasterTicketRead = {
    [key: string]: unknown;
};

export type MasterTicketMasterTicketWrite = {
    [key: string]: unknown;
};

export type MasterTicketTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    ticketList?: Array<TicketTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
    order?: string | null;
    participant?: string | null;
    boughtAt?: string | null;
    readonly id?: number;
    data?: Array<string>;
    provider?: string;
};

export type MasterTicketJsonldMasterTicketRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
};

export type MasterTicketJsonldMasterTicketWrite = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
};

export type MasterTicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketList?: Array<TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
    order?: string | null;
    participant?: string | null;
    boughtAt?: string | null;
    readonly id?: number;
    data?: Array<string>;
    provider?: string;
};

export type MinisiteWrite = {
    slug?: string;
    domain?: string;
    name?: string | null;
    city?: string | null;
    backgroundUrl?: string | null;
    logo?: string | null;
    flyingButtonBgColor?: string | null;
    flyingButtonText?: string | null;
    minisiteBgColor?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    companyName?: string | null;
    settings?: Array<string> | null;
    integrations?: Array<string> | null;
    footerContent?: string | null;
    mainContract?: string | null;
    termsOfSale?: string | null;
    isLoginRequired?: boolean;
    contract?: string | null;
};

export type MinisiteMinisiteReadContractReadTicketingReadMinisiteRead = {
    slug?: string;
    domain?: string;
    name?: string | null;
    city?: string | null;
    backgroundUrl?: string | null;
    logo?: string | null;
    flyingButtonBgColor?: string | null;
    flyingButtonText?: string | null;
    minisiteBgColor?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    demoMode?: boolean;
    companyName?: string | null;
    settings?: Array<string> | null;
    integrations?: Array<string> | null;
    sellingDevice?: string | null;
    footerContent?: string | null;
    mainContract?: ContractMinisiteReadContractReadTicketingReadMinisiteRead | null;
    termsOfSale?: string | null;
    isLoginRequired?: boolean;
    readonly online?: boolean;
    contract?: ContractMinisiteReadContractReadTicketingReadMinisiteRead | null;
    readonly isMultiContract?: boolean;
};

export type MinisiteSellingDeviceRead = {
    moduleList?: Array<string>;
};

export type MinisiteTicketingReadEventDateReadMinisiteReadTicketingRead = {
    slug?: string;
    domain?: string;
    name?: string | null;
    city?: string | null;
    backgroundUrl?: string | null;
    logo?: string | null;
    flyingButtonBgColor?: string | null;
    flyingButtonText?: string | null;
    minisiteBgColor?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    demoMode?: boolean;
    companyName?: string | null;
    settings?: Array<string> | null;
    integrations?: Array<string> | null;
    sellingDevice?: string | null;
    footerContent?: string | null;
    mainContract?: string | null;
    termsOfSale?: string | null;
    isLoginRequired?: boolean;
    readonly online?: boolean;
    contract?: string | null;
    readonly isMultiContract?: boolean;
};

export type MinisiteJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    slug?: string;
    domain?: string;
    name?: string | null;
    city?: string | null;
    backgroundUrl?: string | null;
    logo?: string | null;
    flyingButtonBgColor?: string | null;
    flyingButtonText?: string | null;
    minisiteBgColor?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    companyName?: string | null;
    settings?: Array<string> | null;
    integrations?: Array<string> | null;
    footerContent?: string | null;
    mainContract?: string | null;
    termsOfSale?: string | null;
    isLoginRequired?: boolean;
    contract?: string | null;
};

export type MinisiteJsonldMinisiteReadContractReadTicketingReadMinisiteRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    slug?: string;
    domain?: string;
    name?: string | null;
    city?: string | null;
    backgroundUrl?: string | null;
    logo?: string | null;
    flyingButtonBgColor?: string | null;
    flyingButtonText?: string | null;
    minisiteBgColor?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    demoMode?: boolean;
    companyName?: string | null;
    settings?: Array<string> | null;
    integrations?: Array<string> | null;
    sellingDevice?: string | null;
    footerContent?: string | null;
    mainContract?: ContractJsonldMinisiteReadContractReadTicketingReadMinisiteRead | null;
    termsOfSale?: string | null;
    isLoginRequired?: boolean;
    readonly online?: boolean;
    contract?: ContractJsonldMinisiteReadContractReadTicketingReadMinisiteRead | null;
    readonly isMultiContract?: boolean;
};

export type MinisiteJsonldSellingDeviceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    moduleList?: Array<string>;
};

export type MinisiteJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    slug?: string;
    domain?: string;
    name?: string | null;
    city?: string | null;
    backgroundUrl?: string | null;
    logo?: string | null;
    flyingButtonBgColor?: string | null;
    flyingButtonText?: string | null;
    minisiteBgColor?: string | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    demoMode?: boolean;
    companyName?: string | null;
    settings?: Array<string> | null;
    integrations?: Array<string> | null;
    sellingDevice?: string | null;
    footerContent?: string | null;
    mainContract?: string | null;
    termsOfSale?: string | null;
    isLoginRequired?: boolean;
    readonly online?: boolean;
    contract?: string | null;
    readonly isMultiContract?: boolean;
};

export type ModuleModuleRead = {
    readonly id?: number;
    minisite: string;
    type?: 'programme' | 'event_date_offers' | 'ticket_prices' | 'offer_pages' | 'promote' | 'information' | 'recommendation';
    configuration: Array<string>;
    position?: number | null;
    pageType?: 'home' | 'event';
    ticketingList?: Array<string>;
    readonly canBe?: Array<string>;
};

export type ModuleModuleWrite = {
    minisite: string;
    type?: 'programme' | 'event_date_offers' | 'ticket_prices' | 'offer_pages' | 'promote' | 'information' | 'recommendation';
    configuration: Array<string>;
    position?: number | null;
    pageType?: 'home' | 'event';
    ticketingList?: Array<string>;
};

export type ModuleJsonldModuleRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    minisite: string;
    type?: 'programme' | 'event_date_offers' | 'ticket_prices' | 'offer_pages' | 'promote' | 'information' | 'recommendation';
    configuration: Array<string>;
    position?: number | null;
    pageType?: 'home' | 'event';
    ticketingList?: Array<string>;
    readonly canBe?: Array<string>;
};

export type ModuleJsonldModuleWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    minisite: string;
    type?: 'programme' | 'event_date_offers' | 'ticket_prices' | 'offer_pages' | 'promote' | 'information' | 'recommendation';
    configuration: Array<string>;
    position?: number | null;
    pageType?: 'home' | 'event';
    ticketingList?: Array<string>;
};

export type NotificationNotificationRead = {
    contract?: string | null;
    message?: string;
    displayStyle?: string | null;
    active?: boolean;
    createdAt?: string;
};

export type NotificationJsonldNotificationRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    contract?: string | null;
    message?: string;
    displayStyle?: string | null;
    active?: boolean;
    createdAt?: string;
};

export type NotificationMappingTypeProviderMappingNotificationRead = {
    [key: string]: unknown;
};

export type NotificationMappingTypeJsonldProviderMappingNotificationRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type OfferRuleWrite = {
    readonly createdAt?: string;
    readonly updatedAt?: string;
    hasApplier?: boolean | null;
    archived?: boolean;
    draft?: boolean;
    validStartDate?: string | null;
    validEndDate?: string | null;
    timezone: string;
    title?: string | null;
    image?: string | null;
    handcrafted?: boolean;
    message?: Array<string>;
    triggerList?: Array<string>;
    exchangeData?: Array<string>;
    contractList?: Array<string>;
    combinable?: boolean;
    position?: number;
    couponList?: Array<CouponWrite>;
    ticketPriceList?: Array<string>;
    applicationDataList?: unknown;
    generateMasterTicket?: boolean;
    isNominative?: boolean;
    isListed?: boolean;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: unknown;
    contract?: string;
    enabled?: boolean;
};

export type OfferRuleOfferRuleReadCouponReadOfferRuleRead = {
    schemaVersion?: number;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    hasApplier?: boolean | null;
    archived?: boolean;
    draft?: boolean;
    validStartDate?: string | null;
    validEndDate?: string | null;
    timezone: string;
    title?: string | null;
    image?: string | null;
    handcrafted?: boolean;
    message?: Array<string>;
    triggerList?: Array<string>;
    exchangeData?: Array<string>;
    contractList?: Array<string>;
    combinable?: boolean;
    position?: number;
    needsCoupon?: boolean;
    couponList?: Array<CouponOfferRuleReadCouponReadOfferRuleRead>;
    ticketPriceList?: Array<string>;
    applicationDataList?: unknown;
    generateMasterTicket?: boolean;
    isNominative?: boolean;
    isListed?: boolean;
    hasCashCoupon?: boolean;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: unknown;
    isGenericCashCoupon: boolean;
    readonly description?: string | null;
    readonly color?: string | null;
    readonly conditionsText?: string;
    contract?: string;
    enabled?: boolean;
};

export type OfferRuleJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    hasApplier?: boolean | null;
    archived?: boolean;
    draft?: boolean;
    validStartDate?: string | null;
    validEndDate?: string | null;
    timezone: string;
    title?: string | null;
    image?: string | null;
    handcrafted?: boolean;
    message?: Array<string>;
    triggerList?: Array<string>;
    exchangeData?: Array<string>;
    contractList?: Array<string>;
    combinable?: boolean;
    position?: number;
    couponList?: Array<CouponJsonldWrite>;
    ticketPriceList?: Array<string>;
    applicationDataList?: unknown;
    generateMasterTicket?: boolean;
    isNominative?: boolean;
    isListed?: boolean;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: unknown;
    contract?: string;
    enabled?: boolean;
};

export type OfferRuleJsonldOfferRuleReadCouponReadOfferRuleRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    schemaVersion?: number;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    hasApplier?: boolean | null;
    archived?: boolean;
    draft?: boolean;
    validStartDate?: string | null;
    validEndDate?: string | null;
    timezone: string;
    title?: string | null;
    image?: string | null;
    handcrafted?: boolean;
    message?: Array<string>;
    triggerList?: Array<string>;
    exchangeData?: Array<string>;
    contractList?: Array<string>;
    combinable?: boolean;
    position?: number;
    needsCoupon?: boolean;
    couponList?: Array<CouponJsonldOfferRuleReadCouponReadOfferRuleRead>;
    ticketPriceList?: Array<string>;
    applicationDataList?: unknown;
    generateMasterTicket?: boolean;
    isNominative?: boolean;
    isListed?: boolean;
    hasCashCoupon?: boolean;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: unknown;
    isGenericCashCoupon: boolean;
    readonly description?: string | null;
    readonly color?: string | null;
    readonly conditionsText?: string;
    contract?: string;
    enabled?: boolean;
};

export type OptionStatusRead = {
    [key: string]: unknown;
};

export type OptionStatusJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type OrderWrite = {
    parent?: OrderWrite | null;
    childrenList?: Array<OrderWrite>;
    statusDescription?: string | null;
    comment?: string | null;
    orderItemList?: Array<string>;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupWrite>;
    shipping?: string | null;
    billing?: string | null;
    isBillingDefered?: boolean;
    cart?: string | null;
    sellingDeviceForPayment?: string;
    tagList?: Array<TagWrite>;
};

export type OrderOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    status?: 'awaiting_payment' | 'failed' | 'payed' | 'refunded_totally' | 'refunded_partially';
    parent?: OrderOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    childrenList?: Array<OrderOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    originType?: string;
    originId?: string | null;
    externalIntentId?: string | null;
    statusDescription?: string | null;
    comment?: string | null;
    invoiceList?: Array<string>;
    customer?: string | null;
    contact?: string | null;
    currency?: string;
    createdAt?: string;
    readonly updatedAt?: string;
    orderItemList?: Array<string>;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    ticketList?: Array<string>;
    readonly couponUseApplicationList?: Array<CouponUseApplicationOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    payment?: string | null;
    shipping?: string | null;
    billing?: string | null;
    isBillingDefered?: boolean;
    cart?: string | null;
    sellingDeviceForPayment?: string;
    rescheduledFromOrder?: OrderOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    contract?: string | null;
    tagList?: Array<string>;
    subscriptionList?: Array<string>;
    owner?: string | null;
    saleSession?: AbstractSaleSessionOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    paymentAttemptList?: Array<string>;
    readonly sellingDeviceForPaymentOriginType?: string;
    readonly orderOfferItemList?: Array<string>;
    readonly nbTickets?: number;
    readonly nbCoupons?: number;
    readonly soldTicketQuantity?: number;
    readonly payedTicketQuantity?: number;
    readonly amountForPro?: number;
    readonly appliedCouponCashAmount?: number;
    readonly accountedForPro?: number;
    readonly autoGeneratedPaymentTransactionAmount?: number;
    readonly customerPaidAmount?: number;
    readonly orderOnlyFeeAmount?: number;
    readonly currentRetailValue?: number;
    readonly retailValue?: number;
    readonly autoRefundable?: boolean;
    nonRevertedPaymentTransactionList?: CollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    contractList?: CollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    createdCouponList?: ArrayCollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly customerRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    readonly invoice?: string | null;
    readonly transactionBalance?: number;
    readonly isSubscriptionOrder?: boolean;
    readonly bankTransactionBalance?: number;
    actionnableTransactionList?: CollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly actionnableTransactionBalance?: number;
    readonly balance?: number;
    readonly isSettled?: boolean;
    readonly externalBalanceForOrder?: number;
    externalActionnableTransactionList?: CollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly wallet?: string | null;
    readonly isPaymentLinkOrder?: boolean;
    readonly paymentTransactionName?: string | null;
    readonly refundTransactionName?: string | null;
    readonly isDistinctPaymentMultiWallet?: boolean;
    readonly paymentLink?: string | null;
    organizationalUnitList?: CollectionOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly paymentStatus?: string | null;
};

export type OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    status?: 'awaiting_payment' | 'failed' | 'payed' | 'refunded_totally' | 'refunded_partially';
    parent?: OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    childrenList?: Array<OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    originType?: string;
    originId?: string | null;
    externalIntentId?: string | null;
    statusDescription?: string | null;
    comment?: string | null;
    invoiceList?: Array<string>;
    customer?: string | null;
    contact?: string | null;
    currency?: string;
    createdAt?: string;
    readonly updatedAt?: string;
    orderItemList?: Array<string>;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    ticketList?: Array<string>;
    readonly couponUseApplicationList?: Array<CouponUseApplicationOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    payment?: string | null;
    shipping?: string | null;
    billing?: string | null;
    isBillingDefered?: boolean;
    cart?: string | null;
    sellingDeviceForPayment?: string;
    rescheduledFromOrder?: OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    contract?: string | null;
    tagList?: Array<string>;
    subscriptionList?: Array<string>;
    owner?: string | null;
    saleSession?: AbstractSaleSessionOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    paymentAttemptList?: Array<string>;
    readonly sellingDeviceForPaymentOriginType?: string;
    readonly orderOfferItemList?: Array<string>;
    readonly nbTickets?: number;
    readonly nbCoupons?: number;
    readonly soldTicketQuantity?: number;
    readonly payedTicketQuantity?: number;
    readonly amountForPro?: number;
    readonly appliedCouponCashAmount?: number;
    readonly accountedForPro?: number;
    readonly autoGeneratedPaymentTransactionAmount?: number;
    readonly customerPaidAmount?: number;
    readonly orderOnlyFeeAmount?: number;
    readonly currentRetailValue?: number;
    readonly retailValue?: number;
    readonly autoRefundable?: boolean;
    nonRevertedPaymentTransactionList?: CollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    contractList?: CollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    createdCouponList?: ArrayCollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly customerRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    readonly invoice?: string | null;
    readonly transactionBalance?: number;
    readonly isSubscriptionOrder?: boolean;
    readonly bankTransactionBalance?: number;
    actionnableTransactionList?: CollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly actionnableTransactionBalance?: number;
    readonly balance?: number;
    readonly isSettled?: boolean;
    readonly externalBalanceForOrder?: number;
    externalActionnableTransactionList?: CollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly wallet?: string | null;
    readonly isPaymentLinkOrder?: boolean;
    readonly paymentTransactionName?: string | null;
    readonly refundTransactionName?: string | null;
    readonly isDistinctPaymentMultiWallet?: boolean;
    readonly paymentLink?: string | null;
    organizationalUnitList?: CollectionOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly paymentStatus?: string | null;
};

export type OrderPaymentRead = {
    sellingDevice?: string;
};

export type OrderSendOrderCouponsByEmailInputWrite = {
    email: string;
    downloadId?: string | null;
    coupons?: Array<string> | null;
};

export type OrderSendOrderCouponsByEmailInputJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    email: string;
    downloadId?: string | null;
    coupons?: Array<string> | null;
};

export type OrderSendOrderTicketsAndCouponsByEmailInputWrite = {
    email: string;
    tickets?: Array<string> | null;
    coupons?: Array<string> | null;
};

export type OrderSendOrderTicketsAndCouponsByEmailInputJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    email: string;
    tickets?: Array<string> | null;
    coupons?: Array<string> | null;
};

export type OrderJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    parent?: OrderJsonldWrite | null;
    childrenList?: Array<OrderJsonldWrite>;
    statusDescription?: string | null;
    comment?: string | null;
    orderItemList?: Array<string>;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupJsonldWrite>;
    shipping?: string | null;
    billing?: string | null;
    isBillingDefered?: boolean;
    cart?: string | null;
    sellingDeviceForPayment?: string;
    tagList?: Array<TagJsonldWrite>;
};

export type OrderJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    status?: 'awaiting_payment' | 'failed' | 'payed' | 'refunded_totally' | 'refunded_partially';
    parent?: OrderJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    childrenList?: Array<OrderJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    originType?: string;
    originId?: string | null;
    externalIntentId?: string | null;
    statusDescription?: string | null;
    comment?: string | null;
    invoiceList?: Array<string>;
    customer?: string | null;
    contact?: string | null;
    currency?: string;
    createdAt?: string;
    readonly updatedAt?: string;
    orderItemList?: Array<string>;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    ticketList?: Array<string>;
    readonly couponUseApplicationList?: Array<CouponUseApplicationJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    payment?: string | null;
    shipping?: string | null;
    billing?: string | null;
    isBillingDefered?: boolean;
    cart?: string | null;
    sellingDeviceForPayment?: string;
    rescheduledFromOrder?: OrderJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    contract?: string | null;
    tagList?: Array<string>;
    subscriptionList?: Array<string>;
    owner?: string | null;
    saleSession?: AbstractSaleSessionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    paymentAttemptList?: Array<string>;
    readonly sellingDeviceForPaymentOriginType?: string;
    readonly orderOfferItemList?: Array<string>;
    readonly nbTickets?: number;
    readonly nbCoupons?: number;
    readonly soldTicketQuantity?: number;
    readonly payedTicketQuantity?: number;
    readonly amountForPro?: number;
    readonly appliedCouponCashAmount?: number;
    readonly accountedForPro?: number;
    readonly autoGeneratedPaymentTransactionAmount?: number;
    readonly customerPaidAmount?: number;
    readonly orderOnlyFeeAmount?: number;
    readonly currentRetailValue?: number;
    readonly retailValue?: number;
    readonly autoRefundable?: boolean;
    nonRevertedPaymentTransactionList?: CollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    contractList?: CollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    createdCouponList?: ArrayCollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly customerRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    readonly invoice?: string | null;
    readonly transactionBalance?: number;
    readonly isSubscriptionOrder?: boolean;
    readonly bankTransactionBalance?: number;
    actionnableTransactionList?: CollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly actionnableTransactionBalance?: number;
    readonly balance?: number;
    readonly isSettled?: boolean;
    readonly externalBalanceForOrder?: number;
    externalActionnableTransactionList?: CollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly wallet?: string | null;
    readonly isPaymentLinkOrder?: boolean;
    readonly paymentTransactionName?: string | null;
    readonly refundTransactionName?: string | null;
    readonly isDistinctPaymentMultiWallet?: boolean;
    readonly paymentLink?: string | null;
    organizationalUnitList?: CollectionJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead;
    readonly paymentStatus?: string | null;
};

export type OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    status?: 'awaiting_payment' | 'failed' | 'payed' | 'refunded_totally' | 'refunded_partially';
    parent?: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    childrenList?: Array<OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    originType?: string;
    originId?: string | null;
    externalIntentId?: string | null;
    statusDescription?: string | null;
    comment?: string | null;
    invoiceList?: Array<string>;
    customer?: string | null;
    contact?: string | null;
    currency?: string;
    createdAt?: string;
    readonly updatedAt?: string;
    orderItemList?: Array<string>;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    ticketList?: Array<string>;
    readonly couponUseApplicationList?: Array<CouponUseApplicationJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    payment?: string | null;
    shipping?: string | null;
    billing?: string | null;
    isBillingDefered?: boolean;
    cart?: string | null;
    sellingDeviceForPayment?: string;
    rescheduledFromOrder?: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    contract?: string | null;
    tagList?: Array<string>;
    subscriptionList?: Array<string>;
    owner?: string | null;
    saleSession?: AbstractSaleSessionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    paymentAttemptList?: Array<string>;
    readonly sellingDeviceForPaymentOriginType?: string;
    readonly orderOfferItemList?: Array<string>;
    readonly nbTickets?: number;
    readonly nbCoupons?: number;
    readonly soldTicketQuantity?: number;
    readonly payedTicketQuantity?: number;
    readonly amountForPro?: number;
    readonly appliedCouponCashAmount?: number;
    readonly accountedForPro?: number;
    readonly autoGeneratedPaymentTransactionAmount?: number;
    readonly customerPaidAmount?: number;
    readonly orderOnlyFeeAmount?: number;
    readonly currentRetailValue?: number;
    readonly retailValue?: number;
    readonly autoRefundable?: boolean;
    nonRevertedPaymentTransactionList?: CollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    contractList?: CollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    createdCouponList?: ArrayCollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly customerRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    readonly invoice?: string | null;
    readonly transactionBalance?: number;
    readonly isSubscriptionOrder?: boolean;
    readonly bankTransactionBalance?: number;
    actionnableTransactionList?: CollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly actionnableTransactionBalance?: number;
    readonly balance?: number;
    readonly isSettled?: boolean;
    readonly externalBalanceForOrder?: number;
    externalActionnableTransactionList?: CollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly wallet?: string | null;
    readonly isPaymentLinkOrder?: boolean;
    readonly paymentTransactionName?: string | null;
    readonly refundTransactionName?: string | null;
    readonly isDistinctPaymentMultiWallet?: boolean;
    readonly paymentLink?: string | null;
    organizationalUnitList?: CollectionJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
    readonly paymentStatus?: string | null;
};

export type OrderJsonldPaymentRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    sellingDevice?: string;
};

export type OrderFeeItemOrderFeeItemRead = {
    amount?: number;
    type?: 'rental' | 'postalMail' | 'registeredMail';
    target?: 'mapado' | 'pro';
};

export type OrderFeeItemOrderFeeItemWrite = {
    [key: string]: unknown;
};

export type OrderFeeItemJsonldOrderFeeItemRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    amount?: number;
    type?: 'rental' | 'postalMail' | 'registeredMail';
    target?: 'mapado' | 'pro';
};

export type OrderFeeItemJsonldOrderFeeItemWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type OrderItemWrite = {
    data?: Array<string> | null;
    customerPaidAmount?: number;
};

export type OrderItemOrderItemRead = {
    data?: Array<string> | null;
    readonly createdAt?: string;
    order: string | null;
    orderItemInvoiceGroupList?: Array<string>;
    rescheduledFromOrderItem?: OrderItemOrderItemRead | null;
    rescheduledToOrderItem?: OrderItemOrderItemRead | null;
    ticketPrice?: string | null;
    ticketList?: Array<string>;
    currency: string;
    facialValue?: number;
    retailValue?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    totalRefundedAmount?: number | null;
    totalRefundedFeeAmount?: number | null;
    vatRate?: number | null;
    stockContingent?: string | null;
    payout?: string | null;
    offerRule?: string | null;
    applicationId?: string | null;
    feeCollected?: boolean;
    feeCollectionType?: string | null;
    createdCoupon?: string | null;
    appliedCoupon?: string | null;
    orderFeeItemList?: Array<string>;
    couponUseApplicationList?: Array<CouponUseApplicationOrderItemRead>;
    orderItemCashCouponList?: Array<OrderItemCashCouponOrderItemRead>;
    type?: string | null;
    readonly paidValueNoFee?: number | null;
    readonly appliedCouponCashAmount?: number;
    readonly eventDate?: string | null;
    readonly ticketing?: string | null;
    readonly orderOfferItem?: string;
    readonly fee?: Array<string>;
    readonly valueIncvatWithFee?: Array<string>;
    readonly valueIncvatWithoutFee?: Array<string>;
    readonly feeAmount?: number;
    readonly feeVatRate?: number | null;
    customerPaidAmount?: number;
    readonly refundedTotally?: boolean;
    readonly refundedInFull?: boolean;
    readonly refunded?: boolean;
    readonly cancelled?: boolean;
    readonly refundedCouponCashAmount?: number;
};

export type OrderItemOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    data?: Array<string> | null;
    readonly createdAt?: string;
    order: OrderOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    rescheduledFromOrderItem?: OrderItemOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    rescheduledToOrderItem?: OrderItemOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    ticketPrice?: string | null;
    ticketList?: Array<string>;
    currency: string;
    facialValue?: number;
    retailValue?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    totalRefundedAmount?: number | null;
    totalRefundedFeeAmount?: number | null;
    vatRate?: number | null;
    stockContingent?: string | null;
    payout?: string | null;
    offerRule?: string | null;
    applicationId?: string | null;
    feeCollected?: boolean;
    feeCollectionType?: string | null;
    createdCoupon?: string | null;
    appliedCoupon?: string | null;
    orderFeeItemList?: Array<string>;
    couponUseApplicationList?: Array<CouponUseApplicationOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    orderItemCashCouponList?: Array<OrderItemCashCouponOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    type?: string | null;
    readonly paidValueNoFee?: number | null;
    readonly appliedCouponCashAmount?: number;
    readonly eventDate?: string | null;
    readonly ticketing?: string | null;
    readonly orderOfferItem?: string;
    readonly fee?: Array<string>;
    readonly valueIncvatWithFee?: Array<string>;
    readonly valueIncvatWithoutFee?: Array<string>;
    readonly feeAmount?: number;
    readonly feeVatRate?: number | null;
    customerPaidAmount?: number;
    readonly refundedTotally?: boolean;
    readonly refundedInFull?: boolean;
    readonly refunded?: boolean;
    readonly cancelled?: boolean;
    readonly refundedCouponCashAmount?: number;
};

export type OrderItemOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    data?: Array<string> | null;
    readonly createdAt?: string;
    order: OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    rescheduledFromOrderItem?: OrderItemOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    rescheduledToOrderItem?: OrderItemOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    ticketPrice?: string | null;
    ticketList?: Array<string>;
    currency: string;
    facialValue?: number;
    retailValue?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    totalRefundedAmount?: number | null;
    totalRefundedFeeAmount?: number | null;
    vatRate?: number | null;
    stockContingent?: string | null;
    payout?: string | null;
    offerRule?: string | null;
    applicationId?: string | null;
    feeCollected?: boolean;
    feeCollectionType?: string | null;
    createdCoupon?: string | null;
    appliedCoupon?: string | null;
    orderFeeItemList?: Array<string>;
    couponUseApplicationList?: Array<CouponUseApplicationOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    orderItemCashCouponList?: Array<OrderItemCashCouponOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    type?: string | null;
    readonly paidValueNoFee?: number | null;
    readonly appliedCouponCashAmount?: number;
    readonly eventDate?: string | null;
    readonly ticketing?: string | null;
    readonly orderOfferItem?: string;
    readonly fee?: Array<string>;
    readonly valueIncvatWithFee?: Array<string>;
    readonly valueIncvatWithoutFee?: Array<string>;
    readonly feeAmount?: number;
    readonly feeVatRate?: number | null;
    customerPaidAmount?: number;
    readonly refundedTotally?: boolean;
    readonly refundedInFull?: boolean;
    readonly refunded?: boolean;
    readonly cancelled?: boolean;
    readonly refundedCouponCashAmount?: number;
};

export type OrderItemJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    data?: Array<string> | null;
    customerPaidAmount?: number;
};

export type OrderItemJsonldOrderItemRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    data?: Array<string> | null;
    readonly createdAt?: string;
    order: string | null;
    orderItemInvoiceGroupList?: Array<string>;
    rescheduledFromOrderItem?: OrderItemJsonldOrderItemRead | null;
    rescheduledToOrderItem?: OrderItemJsonldOrderItemRead | null;
    ticketPrice?: string | null;
    ticketList?: Array<string>;
    currency: string;
    facialValue?: number;
    retailValue?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    totalRefundedAmount?: number | null;
    totalRefundedFeeAmount?: number | null;
    vatRate?: number | null;
    stockContingent?: string | null;
    payout?: string | null;
    offerRule?: string | null;
    applicationId?: string | null;
    feeCollected?: boolean;
    feeCollectionType?: string | null;
    createdCoupon?: string | null;
    appliedCoupon?: string | null;
    orderFeeItemList?: Array<string>;
    couponUseApplicationList?: Array<CouponUseApplicationJsonldOrderItemRead>;
    orderItemCashCouponList?: Array<OrderItemCashCouponJsonldOrderItemRead>;
    type?: string | null;
    readonly paidValueNoFee?: number | null;
    readonly appliedCouponCashAmount?: number;
    readonly eventDate?: string | null;
    readonly ticketing?: string | null;
    readonly orderOfferItem?: string;
    readonly fee?: Array<string>;
    readonly valueIncvatWithFee?: Array<string>;
    readonly valueIncvatWithoutFee?: Array<string>;
    readonly feeAmount?: number;
    readonly feeVatRate?: number | null;
    customerPaidAmount?: number;
    readonly refundedTotally?: boolean;
    readonly refundedInFull?: boolean;
    readonly refunded?: boolean;
    readonly cancelled?: boolean;
    readonly refundedCouponCashAmount?: number;
};

export type OrderItemJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    data?: Array<string> | null;
    readonly createdAt?: string;
    order: OrderJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    rescheduledFromOrderItem?: OrderItemJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    rescheduledToOrderItem?: OrderItemJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    ticketPrice?: string | null;
    ticketList?: Array<string>;
    currency: string;
    facialValue?: number;
    retailValue?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    totalRefundedAmount?: number | null;
    totalRefundedFeeAmount?: number | null;
    vatRate?: number | null;
    stockContingent?: string | null;
    payout?: string | null;
    offerRule?: string | null;
    applicationId?: string | null;
    feeCollected?: boolean;
    feeCollectionType?: string | null;
    createdCoupon?: string | null;
    appliedCoupon?: string | null;
    orderFeeItemList?: Array<string>;
    couponUseApplicationList?: Array<CouponUseApplicationJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    orderItemCashCouponList?: Array<OrderItemCashCouponJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    type?: string | null;
    readonly paidValueNoFee?: number | null;
    readonly appliedCouponCashAmount?: number;
    readonly eventDate?: string | null;
    readonly ticketing?: string | null;
    readonly orderOfferItem?: string;
    readonly fee?: Array<string>;
    readonly valueIncvatWithFee?: Array<string>;
    readonly valueIncvatWithoutFee?: Array<string>;
    readonly feeAmount?: number;
    readonly feeVatRate?: number | null;
    customerPaidAmount?: number;
    readonly refundedTotally?: boolean;
    readonly refundedInFull?: boolean;
    readonly refunded?: boolean;
    readonly cancelled?: boolean;
    readonly refundedCouponCashAmount?: number;
};

export type OrderItemJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    data?: Array<string> | null;
    readonly createdAt?: string;
    order: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    orderItemInvoiceGroupList?: Array<OrderItemInvoiceGroupJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    rescheduledFromOrderItem?: OrderItemJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    rescheduledToOrderItem?: OrderItemJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    ticketPrice?: string | null;
    ticketList?: Array<string>;
    currency: string;
    facialValue?: number;
    retailValue?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    totalRefundedAmount?: number | null;
    totalRefundedFeeAmount?: number | null;
    vatRate?: number | null;
    stockContingent?: string | null;
    payout?: string | null;
    offerRule?: string | null;
    applicationId?: string | null;
    feeCollected?: boolean;
    feeCollectionType?: string | null;
    createdCoupon?: string | null;
    appliedCoupon?: string | null;
    orderFeeItemList?: Array<string>;
    couponUseApplicationList?: Array<CouponUseApplicationJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    orderItemCashCouponList?: Array<OrderItemCashCouponJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    type?: string | null;
    readonly paidValueNoFee?: number | null;
    readonly appliedCouponCashAmount?: number;
    readonly eventDate?: string | null;
    readonly ticketing?: string | null;
    readonly orderOfferItem?: string;
    readonly fee?: Array<string>;
    readonly valueIncvatWithFee?: Array<string>;
    readonly valueIncvatWithoutFee?: Array<string>;
    readonly feeAmount?: number;
    readonly feeVatRate?: number | null;
    customerPaidAmount?: number;
    readonly refundedTotally?: boolean;
    readonly refundedInFull?: boolean;
    readonly refunded?: boolean;
    readonly cancelled?: boolean;
    readonly refundedCouponCashAmount?: number;
};

export type OrderItemCashCouponCouponRead = {
    orderItem?: string | null;
    cashCoupon?: CouponCouponRead | null;
    amount: number;
};

export type OrderItemCashCouponOfferRuleReadCouponReadOfferRuleRead = {
    orderItem?: string | null;
    cashCoupon?: CouponOfferRuleReadCouponReadOfferRuleRead | null;
    amount: number;
};

export type OrderItemCashCouponOrderItemCashCouponRead = {
    [key: string]: unknown;
};

export type OrderItemCashCouponOrderItemRead = {
    orderItem?: OrderItemOrderItemRead | null;
    cashCoupon?: string | null;
    amount: number;
};

export type OrderItemCashCouponOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    orderItem?: OrderItemOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    cashCoupon?: string | null;
    amount: number;
};

export type OrderItemCashCouponOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    orderItem?: OrderItemOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    cashCoupon?: string | null;
    amount: number;
};

export type OrderItemCashCouponJsonldCouponRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    orderItem?: string | null;
    cashCoupon?: CouponJsonldCouponRead | null;
    amount: number;
};

export type OrderItemCashCouponJsonldOfferRuleReadCouponReadOfferRuleRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    orderItem?: string | null;
    cashCoupon?: CouponJsonldOfferRuleReadCouponReadOfferRuleRead | null;
    amount: number;
};

export type OrderItemCashCouponJsonldOrderItemCashCouponRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type OrderItemCashCouponJsonldOrderItemRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    orderItem?: OrderItemJsonldOrderItemRead | null;
    cashCoupon?: string | null;
    amount: number;
};

export type OrderItemCashCouponJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    orderItem?: OrderItemJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    cashCoupon?: string | null;
    amount: number;
};

export type OrderItemCashCouponJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    orderItem?: OrderItemJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    cashCoupon?: string | null;
    amount: number;
};

export type OrderItemInvoiceGroupWrite = {
    order?: OrderWrite | null;
    orderItemList?: Array<OrderItemWrite>;
    invoiceList?: Array<string>;
    createdAt?: string;
    updatedAt?: string;
    label?: string | null;
};

export type OrderItemInvoiceGroupOrderItemInvoiceGroupCreate = {
    [key: string]: unknown;
};

export type OrderItemInvoiceGroupOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    isCancelled?: boolean;
    order?: OrderOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    orderItemList?: Array<OrderItemOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    invoiceList?: Array<string>;
    createdAt?: string;
    updatedAt?: string;
    label?: string | null;
};

export type OrderItemInvoiceGroupOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    isCancelled?: boolean;
    order?: OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    orderItemList?: Array<OrderItemOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    invoiceList?: Array<string>;
    createdAt?: string;
    updatedAt?: string;
    label?: string | null;
};

export type OrderItemInvoiceGroupJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    order?: OrderJsonldWrite | null;
    orderItemList?: Array<OrderItemJsonldWrite>;
    invoiceList?: Array<string>;
    createdAt?: string;
    updatedAt?: string;
    label?: string | null;
};

export type OrderItemInvoiceGroupJsonldOrderItemInvoiceGroupCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type OrderItemInvoiceGroupJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    isCancelled?: boolean;
    order?: OrderJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead | null;
    orderItemList?: Array<OrderItemJsonldOrderReadOrderItemReadOrderItemInvoiceGroupRead>;
    invoiceList?: Array<string>;
    createdAt?: string;
    updatedAt?: string;
    label?: string | null;
};

export type OrderItemInvoiceGroupJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    isCancelled?: boolean;
    order?: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead | null;
    orderItemList?: Array<OrderItemJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
    invoiceList?: Array<string>;
    createdAt?: string;
    updatedAt?: string;
    label?: string | null;
};

export type OrganizationalUnitOrganizationalUnitRead = {
    name?: string | null;
    contract?: string;
    isDefault?: boolean;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    publicContactEmail?: string | null;
    hideFees?: boolean;
    notifyOnNewOrderSuccess?: boolean;
    orderNotificationEmailList?: Array<string> | null;
};

export type OrganizationalUnitOrganizationalUnitWrite = {
    name?: string | null;
    contract?: string;
    isDefault?: boolean;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    publicContactEmail?: string | null;
    hideFees?: boolean;
    notifyOnNewOrderSuccess?: boolean;
    orderNotificationEmailList?: Array<string> | null;
};

export type OrganizationalUnitJsonldOrganizationalUnitRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    contract?: string;
    isDefault?: boolean;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    publicContactEmail?: string | null;
    hideFees?: boolean;
    notifyOnNewOrderSuccess?: boolean;
    orderNotificationEmailList?: Array<string> | null;
};

export type OrganizationalUnitJsonldOrganizationalUnitWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    contract?: string;
    isDefault?: boolean;
    templateParameters?: Array<string> | null;
    customerRequiredFields?: Array<string> | null;
    gdprOptinMessage?: string | null;
    mailAdditionalInformation?: string | null;
    publicContactEmail?: string | null;
    hideFees?: boolean;
    notifyOnNewOrderSuccess?: boolean;
    orderNotificationEmailList?: Array<string> | null;
};

export type PaymentWrite = {
    provider?: 'manual' | 'stripe' | 'payzone' | 'mangopay' | 'payline' | 'payrexx' | 'reschedule' | 'none';
    providerMetadata?: Array<string> | null;
    createdAt?: string;
    customerPaidAmount?: number;
    amountForPro?: number | null;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    saleSession?: AbstractSaleSessionWrite | null;
    originId?: string | null;
    order?: string;
    refundList?: Array<string>;
    paymentTransactionList?: Array<TransactionWrite>;
    valueIncvat?: number;
    creditedFunds?: number;
};

export type PaymentPaymentRead = {
    provider?: 'manual' | 'stripe' | 'payzone' | 'mangopay' | 'payline' | 'payrexx' | 'reschedule' | 'none';
    providerMetadata?: Array<string> | null;
    createdAt?: string;
    customerPaidAmount?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    order?: OrderPaymentRead;
    refundList?: Array<string>;
    wallet?: string | null;
    paymentTransactionList?: Array<string>;
    parent?: PaymentPaymentRead | null;
    childrenList?: Array<PaymentPaymentRead>;
    sellingDevice?: string | null;
    valueIncvat?: number;
    readonly payout?: string | null;
    readonly balance?: number;
    creditedFunds?: number;
    readonly orderStatus?: string | null;
    readonly feeValue?: number;
    readonly feeAmount?: number;
    readonly paid?: boolean;
};

export type PaymentJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    provider?: 'manual' | 'stripe' | 'payzone' | 'mangopay' | 'payline' | 'payrexx' | 'reschedule' | 'none';
    providerMetadata?: Array<string> | null;
    createdAt?: string;
    customerPaidAmount?: number;
    amountForPro?: number | null;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    saleSession?: AbstractSaleSessionJsonldWrite | null;
    originId?: string | null;
    order?: string;
    refundList?: Array<string>;
    paymentTransactionList?: Array<TransactionJsonldWrite>;
    valueIncvat?: number;
    creditedFunds?: number;
};

export type PaymentJsonldPaymentRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    provider?: 'manual' | 'stripe' | 'payzone' | 'mangopay' | 'payline' | 'payrexx' | 'reschedule' | 'none';
    providerMetadata?: Array<string> | null;
    createdAt?: string;
    customerPaidAmount?: number;
    amountForPro?: number | null;
    accountedForPro?: number | null;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    order?: OrderJsonldPaymentRead;
    refundList?: Array<string>;
    wallet?: string | null;
    paymentTransactionList?: Array<string>;
    parent?: PaymentJsonldPaymentRead | null;
    childrenList?: Array<PaymentJsonldPaymentRead>;
    sellingDevice?: string | null;
    valueIncvat?: number;
    readonly payout?: string | null;
    readonly balance?: number;
    creditedFunds?: number;
    readonly orderStatus?: string | null;
    readonly feeValue?: number;
    readonly feeAmount?: number;
    readonly paid?: boolean;
};

export type PaymentAttemptPaymentAttemptCreate = {
    [key: string]: unknown;
};

export type PaymentAttemptPaymentAttemptRead = {
    readonly id?: number;
    order?: string;
    externalIntentId?: string;
    providerMetadata?: Array<string>;
    amount?: number;
    status?: PaymentAttemptStatusPaymentAttemptRead;
};

export type PaymentAttemptJsonldPaymentAttemptCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type PaymentAttemptJsonldPaymentAttemptRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    order?: string;
    externalIntentId?: string;
    providerMetadata?: Array<string>;
    amount?: number;
    status?: PaymentAttemptStatusJsonldPaymentAttemptRead;
};

export type PaymentAttemptStatusPaymentAttemptRead = {
    [key: string]: unknown;
};

export type PaymentAttemptStatusJsonldPaymentAttemptRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type PaymentFeePaymentFeeRead = {
    formula?: string | null;
    parsedFormula?: PaymentFeeFormulaPaymentFeeRead;
    comment?: string | null;
    isPublic?: boolean;
    itemFeeTax?: string | null;
};

export type PaymentFeePaymentFeeWrite = {
    formula?: string | null;
    itemFeeTax?: string | null;
};

export type PaymentFeeJsonldPaymentFeeRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    formula?: string | null;
    parsedFormula?: PaymentFeeFormulaJsonldPaymentFeeRead;
    comment?: string | null;
    isPublic?: boolean;
    itemFeeTax?: string | null;
};

export type PaymentFeeJsonldPaymentFeeWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    formula?: string | null;
    itemFeeTax?: string | null;
};

export type PaymentFeeFormulaPaymentFeeRead = {
    [key: string]: unknown;
};

export type PaymentFeeFormulaJsonldPaymentFeeRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type PayoutPayoutRead = {
    provider?: string;
    createdAt?: string;
    paidAt?: string | null;
    amountForPro?: number | null;
    totalInvoiceFeeToCollectAmount?: number | null;
    collectedFeeAmount?: number | null;
    orderItemList?: Array<string>;
    paymentList?: ArrayCollectionPayoutRead;
    refundList?: ArrayCollectionPayoutRead;
    refundOrderItemList?: Array<string>;
    wallet: string;
    payoutRegularisationList?: Array<string>;
    bankAccount: string | null;
    status?: string;
    payoutRef?: string;
    isOpaque?: boolean;
    hasRefunds?: boolean;
    metadata?: Array<string> | null;
    invoiceList?: Array<string>;
    creditedFunds?: number;
    readonly type?: string;
    collectedFees?: number;
};

export type PayoutPayoutWrite = {
    provider?: string;
    createdAt?: string;
    paidAt?: string | null;
    amountForPro?: number | null;
    collectedFeeAmount?: number | null;
    wallet: string;
    bankAccount: string | null;
    status?: string;
    payoutRef?: string;
    metadata?: Array<string> | null;
    creditedFunds?: number;
    readonly type?: string;
    collectedFees?: number;
};

export type PayoutJsonldPayoutRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    provider?: string;
    createdAt?: string;
    paidAt?: string | null;
    amountForPro?: number | null;
    totalInvoiceFeeToCollectAmount?: number | null;
    collectedFeeAmount?: number | null;
    orderItemList?: Array<string>;
    paymentList?: ArrayCollectionJsonldPayoutRead;
    refundList?: ArrayCollectionJsonldPayoutRead;
    refundOrderItemList?: Array<string>;
    wallet: string;
    payoutRegularisationList?: Array<string>;
    bankAccount: string | null;
    status?: string;
    payoutRef?: string;
    isOpaque?: boolean;
    hasRefunds?: boolean;
    metadata?: Array<string> | null;
    invoiceList?: Array<string>;
    creditedFunds?: number;
    readonly type?: string;
    collectedFees?: number;
};

export type PayoutJsonldPayoutWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    provider?: string;
    createdAt?: string;
    paidAt?: string | null;
    amountForPro?: number | null;
    collectedFeeAmount?: number | null;
    wallet: string;
    bankAccount: string | null;
    status?: string;
    payoutRef?: string;
    metadata?: Array<string> | null;
    creditedFunds?: number;
    readonly type?: string;
    collectedFees?: number;
};

export type PayoutRegularisationPayoutRegularisationRead = {
    description?: string | null;
    amountForPro?: number;
    feeAmount?: number;
    payout?: string | null;
    wallet?: string;
    referenceDocument?: string | null;
};

export type PayoutRegularisationJsonldPayoutRegularisationRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    description?: string | null;
    amountForPro?: number;
    feeAmount?: number;
    payout?: string | null;
    wallet?: string;
    referenceDocument?: string | null;
};

export type ProviderAutoImportedTicketProviderAutoImportedTicketRead = {
    [key: string]: unknown;
};

export type ProviderAutoImportedTicketProcessHandleImportInputProviderAutoImportedTicketWrite = {
    provider: 'bamticket' | 'billetreduc' | 'eventim' | 'festik' | 'billetel' | 'placeminute' | 'ressources' | 'rodrigue' | 'secutix' | 'seetickets' | 'sirius' | 'supersoniks' | 'theatre_online' | 'ticketac' | 'ticketnet' | 'tiqets' | 'utick' | 'weezevent' | 'yurplan' | 'mapado_import';
    contract: string | null;
};

export type ProviderAutoImportedTicketProcessHandleImportInputJsonldProviderAutoImportedTicketWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    provider: 'bamticket' | 'billetreduc' | 'eventim' | 'festik' | 'billetel' | 'placeminute' | 'ressources' | 'rodrigue' | 'secutix' | 'seetickets' | 'sirius' | 'supersoniks' | 'theatre_online' | 'ticketac' | 'ticketnet' | 'tiqets' | 'utick' | 'weezevent' | 'yurplan' | 'mapado_import';
    contract: string | null;
};

export type ProviderAutoImportedTicketJsonldProviderAutoImportedTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderContingentMappingProviderContingentMappingRead = {
    contingent?: string | null;
    isDefault?: boolean;
    readonly label?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
};

export type ProviderContingentMappingProviderContingentMappingWrite = {
    contingent?: string | null;
    isDefault?: boolean;
};

export type ProviderContingentMappingJsonldProviderContingentMappingRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    contingent?: string | null;
    isDefault?: boolean;
    readonly label?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
};

export type ProviderContingentMappingJsonldProviderContingentMappingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contingent?: string | null;
    isDefault?: boolean;
};

export type ProviderExportedCartRead = {
    cart?: CartRead;
    status?: ProviderExportedCartStatusRead;
    externalId?: string;
    providerName?: ProviderNameRead;
    contract?: string;
    data?: Array<string>;
};

export type ProviderExportedCartWrite = {
    cart?: string;
    status?: ProviderExportedCartStatusWrite;
    externalId?: string;
    providerName?: ProviderNameWrite;
    contract?: string;
    data?: Array<string>;
};

export type ProviderExportedCartProviderExportedCartRead = {
    cart?: string;
    status?: ProviderExportedCartStatusProviderExportedCartRead;
    externalId?: string;
    providerName?: ProviderNameProviderExportedCartRead;
    contract?: string;
    data?: Array<string>;
};

export type ProviderExportedCartJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    cart?: CartJsonldRead;
    status?: ProviderExportedCartStatusJsonldRead;
    externalId?: string;
    providerName?: ProviderNameJsonldRead;
    contract?: string;
    data?: Array<string>;
};

export type ProviderExportedCartJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    cart?: string;
    status?: ProviderExportedCartStatusJsonldWrite;
    externalId?: string;
    providerName?: ProviderNameJsonldWrite;
    contract?: string;
    data?: Array<string>;
};

export type ProviderExportedCartJsonldProviderExportedCartRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    cart?: string;
    status?: ProviderExportedCartStatusJsonldProviderExportedCartRead;
    externalId?: string;
    providerName?: ProviderNameJsonldProviderExportedCartRead;
    contract?: string;
    data?: Array<string>;
};

export type ProviderExportedCartStatusRead = {
    [key: string]: unknown;
};

export type ProviderExportedCartStatusWrite = {
    [key: string]: unknown;
};

export type ProviderExportedCartStatusProviderExportedCartRead = {
    [key: string]: unknown;
};

export type ProviderExportedCartStatusJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderExportedCartStatusJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderExportedCartStatusJsonldProviderExportedCartRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderMappingNotificationProviderMappingNotificationRead = {
    providerAutoImportedTicket?: string;
    mappingType?: NotificationMappingTypeProviderMappingNotificationRead | null;
    createdAt?: string;
    type?: MappingErrorTypeProviderMappingNotificationRead;
    message?: string;
    readonly providerTicketImportedFile?: string | null;
};

export type ProviderMappingNotificationProviderMappingNotificationWrite = {
    [key: string]: unknown;
};

export type ProviderMappingNotificationJsonldProviderMappingNotificationRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    providerAutoImportedTicket?: string;
    mappingType?: NotificationMappingTypeJsonldProviderMappingNotificationRead | null;
    createdAt?: string;
    type?: MappingErrorTypeJsonldProviderMappingNotificationRead;
    message?: string;
    readonly providerTicketImportedFile?: string | null;
};

export type ProviderMappingNotificationJsonldProviderMappingNotificationWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderNameRead = {
    [key: string]: unknown;
};

export type ProviderNameWrite = {
    [key: string]: unknown;
};

export type ProviderNameProviderExportedCartRead = {
    [key: string]: unknown;
};

export type ProviderNameJsonldRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderNameJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderNameJsonldProviderExportedCartRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderSeatConfigMappingProviderSeatConfigMappingRead = {
    seatConfig?: string | null;
    providerSeatMappingList?: CollectionProviderSeatConfigMappingRead;
    readonly label?: string | null;
    seatConfigName?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
    isIgnored?: boolean;
};

export type ProviderSeatConfigMappingProviderSeatConfigMappingWrite = {
    seatConfig?: string | null;
    isIgnored?: boolean;
};

export type ProviderSeatConfigMappingJsonldProviderSeatConfigMappingRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    seatConfig?: string | null;
    providerSeatMappingList?: CollectionJsonldProviderSeatConfigMappingRead;
    readonly label?: string | null;
    seatConfigName?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
    isIgnored?: boolean;
};

export type ProviderSeatConfigMappingJsonldProviderSeatConfigMappingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    seatConfig?: string | null;
    isIgnored?: boolean;
};

export type ProviderSeatMappingProviderSeatMappingRead = {
    seat?: string | null;
    readonly label?: string | null;
    readonly seatConfigName?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
};

export type ProviderSeatMappingProviderSeatMappingWrite = {
    seat?: string | null;
};

export type ProviderSeatMappingJsonldProviderSeatMappingRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    seat?: string | null;
    readonly label?: string | null;
    readonly seatConfigName?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
};

export type ProviderSeatMappingJsonldProviderSeatMappingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    seat?: string | null;
};

export type ProviderTicketCredentialsProviderTicketCredentialsRead = {
    providerType?: ProviderTypeProviderTicketCredentialsRead;
    providerName?: string;
    importType?: string | null;
    active?: number;
    lastSuccess?: string | null;
    param1?: string | null;
    param2?: string | null;
    param3?: string | null;
    contract?: string;
};

export type ProviderTicketCredentialsProviderTicketCredentialsWrite = {
    providerType?: ProviderTypeProviderTicketCredentialsWrite;
    providerName?: string;
    importType?: string | null;
    active?: number;
    lastSuccess?: string | null;
    param1?: string | null;
    param2?: string | null;
    param3?: string | null;
    contract?: string;
};

export type ProviderTicketCredentialsJsonldProviderTicketCredentialsRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    providerType?: ProviderTypeJsonldProviderTicketCredentialsRead;
    providerName?: string;
    importType?: string | null;
    active?: number;
    lastSuccess?: string | null;
    param1?: string | null;
    param2?: string | null;
    param3?: string | null;
    contract?: string;
};

export type ProviderTicketCredentialsJsonldProviderTicketCredentialsWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    providerType?: ProviderTypeJsonldProviderTicketCredentialsWrite;
    providerName?: string;
    importType?: string | null;
    active?: number;
    lastSuccess?: string | null;
    param1?: string | null;
    param2?: string | null;
    param3?: string | null;
    contract?: string;
};

export type ProviderTicketImportedFileProviderTicketImportedFileRead = {
    eventDate?: string | null;
    importedFile: ImportedFileProviderTicketImportedFileRead | null;
    importedBy?: number;
    contract: string | null;
    importStatus?: string;
    importedAt?: string | null;
    importToken?: string;
    mapping?: Array<string> | null;
    sheet?: SheetProviderTicketImportedFileRead;
    context?: unknown;
    externalProvider?: string | null;
    ticketList?: Array<string>;
    providerAutoImportedTicketList?: Array<string>;
    totalTicketsImported?: number;
    scanTrack?: string | null;
    strategy?: StrategyProviderTicketImportedFileRead;
    strategyMode?: StrategyModeProviderTicketImportedFileRead;
    readonly canDownloadErrorReport?: boolean;
    readonly allowedProviders?: Array<string>;
};

export type ProviderTicketImportedFileProviderTicketImportedFileWrite = {
    eventDate?: string | null;
    mapping?: Array<string> | null;
    context?: unknown;
    externalProvider?: string | null;
    scanTrack?: string | null;
    strategy?: StrategyProviderTicketImportedFileWrite;
    strategyMode?: StrategyModeProviderTicketImportedFileWrite;
};

export type ProviderTicketImportedFileJsonldProviderTicketImportedFileRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    eventDate?: string | null;
    importedFile: ImportedFileJsonldProviderTicketImportedFileRead | null;
    importedBy?: number;
    contract: string | null;
    importStatus?: string;
    importedAt?: string | null;
    importToken?: string;
    mapping?: Array<string> | null;
    sheet?: SheetJsonldProviderTicketImportedFileRead;
    context?: unknown;
    externalProvider?: string | null;
    ticketList?: Array<string>;
    providerAutoImportedTicketList?: Array<string>;
    totalTicketsImported?: number;
    scanTrack?: string | null;
    strategy?: StrategyJsonldProviderTicketImportedFileRead;
    strategyMode?: StrategyModeJsonldProviderTicketImportedFileRead;
    readonly canDownloadErrorReport?: boolean;
    readonly allowedProviders?: Array<string>;
};

export type ProviderTicketImportedFileJsonldProviderTicketImportedFileWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    eventDate?: string | null;
    mapping?: Array<string> | null;
    context?: unknown;
    externalProvider?: string | null;
    scanTrack?: string | null;
    strategy?: StrategyJsonldProviderTicketImportedFileWrite;
    strategyMode?: StrategyModeJsonldProviderTicketImportedFileWrite;
};

export type ProviderTicketPriceMappingProviderTicketPriceMappingRead = {
    ticketPrice?: string | null;
    readonly label?: string | null;
    readonly isMapped?: boolean;
    eventName?: string | null;
    contract?: string;
    provider?: string;
    isIgnored?: boolean;
};

export type ProviderTicketPriceMappingProviderTicketPriceMappingWrite = {
    ticketPrice?: string | null;
    isIgnored?: boolean;
};

export type ProviderTicketPriceMappingJsonldProviderTicketPriceMappingRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    ticketPrice?: string | null;
    readonly label?: string | null;
    readonly isMapped?: boolean;
    eventName?: string | null;
    contract?: string;
    provider?: string;
    isIgnored?: boolean;
};

export type ProviderTicketPriceMappingJsonldProviderTicketPriceMappingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketPrice?: string | null;
    isIgnored?: boolean;
};

export type ProviderTicketingMappingProviderTicketingMappingRead = {
    ticketing?: string | null;
    providerTicketPriceMappingList?: CollectionProviderTicketingMappingRead;
    readonly label?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
    isIgnored?: boolean;
};

export type ProviderTicketingMappingProviderTicketingMappingWrite = {
    ticketing?: string | null;
    isIgnored?: boolean;
};

export type ProviderTicketingMappingJsonldProviderTicketingMappingRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    ticketing?: string | null;
    providerTicketPriceMappingList?: CollectionJsonldProviderTicketingMappingRead;
    readonly label?: string | null;
    readonly isMapped?: boolean;
    contract?: string;
    provider?: string;
    isIgnored?: boolean;
};

export type ProviderTicketingMappingJsonldProviderTicketingMappingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketing?: string | null;
    isIgnored?: boolean;
};

export type ProviderTypeProviderTicketCredentialsRead = {
    [key: string]: unknown;
};

export type ProviderTypeProviderTicketCredentialsWrite = {
    [key: string]: unknown;
};

export type ProviderTypeJsonldProviderTicketCredentialsRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ProviderTypeJsonldProviderTicketCredentialsWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type RefundWrite = {
    externalId?: string | null;
    payment?: string | null;
    providerMetadata?: Array<string> | null;
    amountForCustomer?: number | null;
    wallet?: string;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    refundOrderItemList?: Array<RefundOrderItemWrite>;
    saleSession?: AbstractSaleSessionWrite | null;
    sellingDevice?: string | null;
    refundTransactionList?: Array<TransactionWrite>;
    debitedFunds?: number;
    creditedFunds?: number;
};

export type RefundRefundOrderItemReadRefundReadRefundOrderItemRead = {
    externalId?: string | null;
    payment?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    amountForCustomer?: number | null;
    wallet?: string;
    refundType?: string;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    refundOrderItemList?: Array<RefundOrderItemRefundOrderItemReadRefundReadRefundOrderItemRead>;
    sellingDevice?: string | null;
    refundTransactionList?: Array<string>;
    debitedFunds?: number;
    creditedFunds?: number;
    readonly payout?: string | null;
    readonly refundedCouponCashAmount?: number;
};

export type RefundRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    externalId?: string | null;
    payment?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    amountForCustomer?: number | null;
    wallet?: string;
    refundType?: string;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    refundOrderItemList?: Array<RefundOrderItemRefundReadRefundOrderItemReadTransactionReadRefundRead>;
    sellingDevice?: string | null;
    refundTransactionList?: Array<TransactionRefundReadRefundOrderItemReadTransactionReadRefundRead>;
    debitedFunds?: number;
    creditedFunds?: number;
    readonly payout?: string | null;
    readonly refundedCouponCashAmount?: number;
};

export type RefundJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    externalId?: string | null;
    payment?: string | null;
    providerMetadata?: Array<string> | null;
    amountForCustomer?: number | null;
    wallet?: string;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    refundOrderItemList?: Array<RefundOrderItemJsonldWrite>;
    saleSession?: AbstractSaleSessionJsonldWrite | null;
    sellingDevice?: string | null;
    refundTransactionList?: Array<TransactionJsonldWrite>;
    debitedFunds?: number;
    creditedFunds?: number;
};

export type RefundJsonldRefundOrderItemReadRefundReadRefundOrderItemRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    externalId?: string | null;
    payment?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    amountForCustomer?: number | null;
    wallet?: string;
    refundType?: string;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    refundOrderItemList?: Array<RefundOrderItemJsonldRefundOrderItemReadRefundReadRefundOrderItemRead>;
    sellingDevice?: string | null;
    refundTransactionList?: Array<string>;
    debitedFunds?: number;
    creditedFunds?: number;
    readonly payout?: string | null;
    readonly refundedCouponCashAmount?: number;
};

export type RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    externalId?: string | null;
    payment?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    amountForCustomer?: number | null;
    wallet?: string;
    refundType?: string;
    originType?: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    originId?: string | null;
    refundOrderItemList?: Array<RefundOrderItemJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead>;
    sellingDevice?: string | null;
    refundTransactionList?: Array<TransactionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead>;
    debitedFunds?: number;
    creditedFunds?: number;
    readonly payout?: string | null;
    readonly refundedCouponCashAmount?: number;
};

export type RefundOrderItemWrite = {
    refund?: RefundWrite | null;
    orderItem?: string | null;
    refundedFeeAmount?: number;
};

export type RefundOrderItemRefundOrderItemReadRefundReadRefundOrderItemRead = {
    refund?: RefundRefundOrderItemReadRefundReadRefundOrderItemRead | null;
    orderItem?: string | null;
    payout?: string | null;
    refundedAmount?: number;
    refundedCouponCashAmount?: number;
    refundedFeeAmount?: number;
};

export type RefundOrderItemRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    refund?: RefundRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    orderItem?: string | null;
    payout?: string | null;
    refundedAmount?: number;
    refundedCouponCashAmount?: number;
    refundedFeeAmount?: number;
};

export type RefundOrderItemJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    refund?: RefundJsonldWrite | null;
    orderItem?: string | null;
    refundedFeeAmount?: number;
};

export type RefundOrderItemJsonldRefundOrderItemReadRefundReadRefundOrderItemRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    refund?: RefundJsonldRefundOrderItemReadRefundReadRefundOrderItemRead | null;
    orderItem?: string | null;
    payout?: string | null;
    refundedAmount?: number;
    refundedCouponCashAmount?: number;
    refundedFeeAmount?: number;
};

export type RefundOrderItemJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    refund?: RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    orderItem?: string | null;
    payout?: string | null;
    refundedAmount?: number;
    refundedCouponCashAmount?: number;
    refundedFeeAmount?: number;
};

export type ScanScanRead = {
    readonly id?: number;
    scanDate?: string;
    status?: string;
    scannedBy?: string | null;
    deviceId?: string | null;
    deviceInfo?: string | null;
    appModel?: string | null;
    appVersion?: string | null;
    ticket?: string;
    checkpoint?: string | null;
    user?: string | null;
    readonly eventDate?: string | null;
};

export type ScanScanWrite = {
    scanDate?: string;
    scannedBy?: string | null;
    deviceId?: string | null;
    deviceInfo?: string | null;
    appModel?: string | null;
    appVersion?: string | null;
    ticket?: string;
    checkpoint?: string | null;
    user?: string | null;
};

export type ScanJsonldScanRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    scanDate?: string;
    status?: string;
    scannedBy?: string | null;
    deviceId?: string | null;
    deviceInfo?: string | null;
    appModel?: string | null;
    appVersion?: string | null;
    ticket?: string;
    checkpoint?: string | null;
    user?: string | null;
    readonly eventDate?: string | null;
};

export type ScanJsonldScanWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    scanDate?: string;
    scannedBy?: string | null;
    deviceId?: string | null;
    deviceInfo?: string | null;
    appModel?: string | null;
    appVersion?: string | null;
    ticket?: string;
    checkpoint?: string | null;
    user?: string | null;
};

export type ScanConfigScanConfigRead = {
    readonly id?: number;
    contract: string;
    config?: Array<string>;
};

export type ScanConfigJsonldScanConfigRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly id?: number;
    contract: string;
    config?: Array<string>;
};

export type ScanTrackWrite = {
    name: string;
    contract: string;
    scanTrackCheckpointList?: Array<ScanTrackCheckpointWrite>;
    maxScanNb?: number;
};

export type ScanTrackScanTrackRead = {
    name: string;
    isDefault?: boolean | null;
    contract: string;
    scanTrackCheckpointList?: Array<ScanTrackCheckpointScanTrackRead>;
    maxScanNb?: number;
    ticketPriceList?: Array<string>;
    providerTicketImportedFileList?: Array<string>;
    readonly isDeletable?: boolean;
    readonly isHidable?: boolean;
};

export type ScanTrackJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    contract: string;
    scanTrackCheckpointList?: Array<ScanTrackCheckpointJsonldWrite>;
    maxScanNb?: number;
};

export type ScanTrackJsonldScanTrackRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    isDefault?: boolean | null;
    contract: string;
    scanTrackCheckpointList?: Array<ScanTrackCheckpointJsonldScanTrackRead>;
    maxScanNb?: number;
    ticketPriceList?: Array<string>;
    providerTicketImportedFileList?: Array<string>;
    readonly isDeletable?: boolean;
    readonly isHidable?: boolean;
};

export type ScanTrackCheckpointWrite = {
    scanTrack?: ScanTrackWrite;
    checkpoint?: CheckpointWrite;
    maxScanNb?: number | null;
};

export type ScanTrackCheckpointCheckpointRead = {
    checkpoint?: CheckpointCheckpointRead;
    maxScanNb?: number | null;
};

export type ScanTrackCheckpointScanTrackCheckpointRead = {
    [key: string]: unknown;
};

export type ScanTrackCheckpointScanTrackCheckpointWrite = {
    [key: string]: unknown;
};

export type ScanTrackCheckpointScanTrackRead = {
    scanTrack?: ScanTrackScanTrackRead;
    maxScanNb?: number | null;
};

export type ScanTrackCheckpointJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    scanTrack?: ScanTrackJsonldWrite;
    checkpoint?: CheckpointJsonldWrite;
    maxScanNb?: number | null;
};

export type ScanTrackCheckpointJsonldCheckpointRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    checkpoint?: CheckpointJsonldCheckpointRead;
    maxScanNb?: number | null;
};

export type ScanTrackCheckpointJsonldScanTrackCheckpointRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ScanTrackCheckpointJsonldScanTrackCheckpointWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ScanTrackCheckpointJsonldScanTrackRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    scanTrack?: ScanTrackJsonldScanTrackRead;
    maxScanNb?: number | null;
};

export type SeasonSeasonCreate = {
    name?: string | null;
    contract: string;
    startDate?: string;
    endDate?: string;
    type?: 'season' | 'festival';
};

export type SeasonSeasonRead = {
    name?: string | null;
    ticketingList?: Array<string>;
    contract: string;
    startDate?: string;
    endDate?: string;
    type?: 'season' | 'festival';
};

export type SeasonSeasonUpdate = {
    name?: string | null;
    startDate?: string;
    endDate?: string;
    type?: 'season' | 'festival';
};

export type SeasonJsonldSeasonCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    contract: string;
    startDate?: string;
    endDate?: string;
    type?: 'season' | 'festival';
};

export type SeasonJsonldSeasonRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    ticketingList?: Array<string>;
    contract: string;
    startDate?: string;
    endDate?: string;
    type?: 'season' | 'festival';
};

export type SeasonJsonldSeasonUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    startDate?: string;
    endDate?: string;
    type?: 'season' | 'festival';
};

export type SeatSeatCreate = {
    /**
     * Additional information about the seat, Use `row`, `seatNumber`, `zone`, `label`, and `coordinates` instead.
     * @deprecated
     */
    info?: Array<string>;
    /**
     * Full label of the seat.
     */
    label?: string | null;
    /**
     * row identifier of the seat.
     */
    row?: string | null;
    /**
     * seat number in the row.
     */
    seatNumber?: string | null;
    /**
     * Zone information of the seat (label suffix).
     */
    zone?: string | null;
    angle?: number | null;
    type?: SeatTypeSeatCreate;
    /**
     * Seat angle.
     */
    position?: number;
    hasObstructedView?: boolean | null;
    seatConfig?: string;
    stockContingent?: string | null;
    /**
     * Get coordinate X,Y,Z of the seat.
     */
    coordinates?: Array<string>;
};

export type SeatSeatRead = {
    /**
     * Additional information about the seat, Use `row`, `seatNumber`, `zone`, `label`, and `coordinates` instead.
     * @deprecated
     */
    info?: Array<string>;
    /**
     * Full label of the seat.
     */
    label?: string | null;
    /**
     * row identifier of the seat.
     */
    row?: string | null;
    /**
     * seat number in the row.
     */
    seatNumber?: string | null;
    /**
     * Zone information of the seat (label suffix).
     */
    zone?: string | null;
    angle?: number | null;
    type?: SeatTypeSeatRead;
    /**
     * Seat angle.
     */
    position?: number;
    hasObstructedView?: boolean | null;
    seatConfig?: string;
    stockContingent?: string | null;
    availableSeatList?: Array<string>;
    availableSeatModelList?: Array<string>;
    /**
     * Get coordinate X,Y,Z of the seat.
     */
    coordinates?: Array<string>;
};

export type SeatSeatUpdate = {
    /**
     * Additional information about the seat, Use `row`, `seatNumber`, `zone`, `label`, and `coordinates` instead.
     * @deprecated
     */
    info?: Array<string>;
    /**
     * Full label of the seat.
     */
    label?: string | null;
    /**
     * row identifier of the seat.
     */
    row?: string | null;
    /**
     * seat number in the row.
     */
    seatNumber?: string | null;
    /**
     * Zone information of the seat (label suffix).
     */
    zone?: string | null;
    angle?: number | null;
    type?: SeatTypeSeatUpdate;
    /**
     * Seat angle.
     */
    position?: number;
    hasObstructedView?: boolean | null;
    stockContingent?: string | null;
    /**
     * Get coordinate X,Y,Z of the seat.
     */
    coordinates?: Array<string>;
};

export type SeatJsonldSeatCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * Additional information about the seat, Use `row`, `seatNumber`, `zone`, `label`, and `coordinates` instead.
     * @deprecated
     */
    info?: Array<string>;
    /**
     * Full label of the seat.
     */
    label?: string | null;
    /**
     * row identifier of the seat.
     */
    row?: string | null;
    /**
     * seat number in the row.
     */
    seatNumber?: string | null;
    /**
     * Zone information of the seat (label suffix).
     */
    zone?: string | null;
    angle?: number | null;
    type?: SeatTypeJsonldSeatCreate;
    /**
     * Seat angle.
     */
    position?: number;
    hasObstructedView?: boolean | null;
    seatConfig?: string;
    stockContingent?: string | null;
    /**
     * Get coordinate X,Y,Z of the seat.
     */
    coordinates?: Array<string>;
};

export type SeatJsonldSeatRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * Additional information about the seat, Use `row`, `seatNumber`, `zone`, `label`, and `coordinates` instead.
     * @deprecated
     */
    info?: Array<string>;
    /**
     * Full label of the seat.
     */
    label?: string | null;
    /**
     * row identifier of the seat.
     */
    row?: string | null;
    /**
     * seat number in the row.
     */
    seatNumber?: string | null;
    /**
     * Zone information of the seat (label suffix).
     */
    zone?: string | null;
    angle?: number | null;
    type?: SeatTypeJsonldSeatRead;
    /**
     * Seat angle.
     */
    position?: number;
    hasObstructedView?: boolean | null;
    seatConfig?: string;
    stockContingent?: string | null;
    availableSeatList?: Array<string>;
    availableSeatModelList?: Array<string>;
    /**
     * Get coordinate X,Y,Z of the seat.
     */
    coordinates?: Array<string>;
};

export type SeatJsonldSeatUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * Additional information about the seat, Use `row`, `seatNumber`, `zone`, `label`, and `coordinates` instead.
     * @deprecated
     */
    info?: Array<string>;
    /**
     * Full label of the seat.
     */
    label?: string | null;
    /**
     * row identifier of the seat.
     */
    row?: string | null;
    /**
     * seat number in the row.
     */
    seatNumber?: string | null;
    /**
     * Zone information of the seat (label suffix).
     */
    zone?: string | null;
    angle?: number | null;
    type?: SeatTypeJsonldSeatUpdate;
    /**
     * Seat angle.
     */
    position?: number;
    hasObstructedView?: boolean | null;
    stockContingent?: string | null;
    /**
     * Get coordinate X,Y,Z of the seat.
     */
    coordinates?: Array<string>;
};

export type SeatConfigSeatConfigRead = {
    totalStock?: number;
    label?: string;
    contract: string | null;
    seatList?: Array<string>;
    seatConfigBlockList?: Array<string>;
    isDisabled?: boolean;
    logicalSeatConfigList?: Array<string>;
    providerSeatMappingList?: Array<string>;
};

export type SeatConfigSeatConfigWrite = {
    label?: string;
    contract: string | null;
    seatList?: Array<string>;
    isDisabled?: boolean;
    logicalSeatConfigList?: Array<string>;
};

export type SeatConfigJsonldSeatConfigRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    totalStock?: number;
    label?: string;
    contract: string | null;
    seatList?: Array<string>;
    seatConfigBlockList?: Array<string>;
    isDisabled?: boolean;
    logicalSeatConfigList?: Array<string>;
    providerSeatMappingList?: Array<string>;
};

export type SeatConfigJsonldSeatConfigWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    label?: string;
    contract: string | null;
    seatList?: Array<string>;
    isDisabled?: boolean;
    logicalSeatConfigList?: Array<string>;
};

export type SeatConfigBlockSeatConfigBlockRead = {
    seatConfig?: string;
    info?: string | null;
    x?: number | null;
    y?: number | null;
    z?: number | null;
    width?: number | null;
    height?: number | null;
    fontSize?: number | null;
};

export type SeatConfigBlockSeatConfigBlockWrite = {
    seatConfig?: string;
    info?: string | null;
};

export type SeatConfigBlockJsonldSeatConfigBlockRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    seatConfig?: string;
    info?: string | null;
    x?: number | null;
    y?: number | null;
    z?: number | null;
    width?: number | null;
    height?: number | null;
    fontSize?: number | null;
};

export type SeatConfigBlockJsonldSeatConfigBlockWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    seatConfig?: string;
    info?: string | null;
};

export type SeatGroupSeatGroupRead = {
    label?: string | null;
    seatColor?: string | null;
    ticketPriceSeatGroupList?: Array<string>;
    availableSeatModelList?: Array<string>;
    contract?: string;
    readonly ticketPriceList?: Array<string>;
};

export type SeatGroupSeatGroupWrite = {
    label?: string | null;
    seatColor?: string | null;
    ticketPriceSeatGroupList?: Array<string>;
    contract?: string;
};

export type SeatGroupJsonldSeatGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    label?: string | null;
    seatColor?: string | null;
    ticketPriceSeatGroupList?: Array<string>;
    availableSeatModelList?: Array<string>;
    contract?: string;
    readonly ticketPriceList?: Array<string>;
};

export type SeatGroupJsonldSeatGroupWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    label?: string | null;
    seatColor?: string | null;
    ticketPriceSeatGroupList?: Array<string>;
    contract?: string;
};

export type SeatTypeSeatCreate = {
    [key: string]: unknown;
};

export type SeatTypeSeatRead = {
    [key: string]: unknown;
};

export type SeatTypeSeatUpdate = {
    [key: string]: unknown;
};

export type SeatTypeJsonldSeatCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type SeatTypeJsonldSeatRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type SeatTypeJsonldSeatUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type SellingDeviceHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    name?: string | null;
    paymentFeeKey: string;
    originType: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    contractList?: Array<string>;
    type?: string;
};

export type SellingDeviceSellingDeviceRead = {
    name?: string | null;
    hideFees?: boolean | null;
    paymentFeeKey: string;
    originType: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    createdAt?: string | null;
    contractList?: Array<string>;
    minisite?: MinisiteSellingDeviceRead | null;
    readonly isExternalProvider?: boolean;
    contract?: Array<string>;
    type?: string;
};

export type SellingDeviceSellingDeviceWrite = {
    name?: string | null;
    paymentFeeKey: string;
    originType: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    contractList?: Array<string>;
    type?: string;
};

export type SellingDeviceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    paymentFeeKey: string;
    originType: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    contractList?: Array<string>;
    type?: string;
};

export type SellingDeviceJsonldSellingDeviceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    hideFees?: boolean | null;
    paymentFeeKey: string;
    originType: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    createdAt?: string | null;
    contractList?: Array<string>;
    minisite?: MinisiteJsonldSellingDeviceRead | null;
    readonly isExternalProvider?: boolean;
    contract?: Array<string>;
    type?: string;
};

export type SellingDeviceJsonldSellingDeviceWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    paymentFeeKey: string;
    originType: 'MAPADO_WWW' | 'MINISITE' | 'STOCK_ISSUE' | 'DESK' | 'KIOSK' | 'RESELLER';
    contractList?: Array<string>;
    type?: string;
};

export type ServiceServiceRead = {
    name?: string;
    slug?: string;
    versionList?: Array<string>;
};

export type ServiceServiceWrite = {
    [key: string]: unknown;
};

export type ServiceVersionRead = {
    readonly id?: number;
};

export type ServiceJsonldServiceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    slug?: string;
    versionList?: Array<string>;
};

export type ServiceJsonldServiceWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ServiceJsonldVersionRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
};

export type SheetProviderTicketImportedFileRead = {
    [key: string]: unknown;
};

export type SheetJsonldProviderTicketImportedFileRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type ShippingShippingRead = {
    name: string | null;
    contract: string;
    type: 'eTicket' | 'desk' | 'postalMail' | 'registeredMail';
    fee?: string | null;
    tagList?: Array<string>;
};

export type ShippingShippingWrite = {
    tagList?: Array<string>;
};

export type ShippingJsonldShippingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string | null;
    contract: string;
    type: 'eTicket' | 'desk' | 'postalMail' | 'registeredMail';
    fee?: string | null;
    tagList?: Array<string>;
};

export type ShippingJsonldShippingWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    tagList?: Array<string>;
};

export type SibilParameterSibilParameterRead = {
    readonly id?: number;
    sibilUsername?: string;
    name?: string;
    contract?: string;
};

export type SibilParameterSibilParameterWrite = {
    sibilUsername?: string;
    sibilPassword?: string;
    name?: string;
    contract?: string;
};

export type SibilParameterJsonldSibilParameterRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    sibilUsername?: string;
    name?: string;
    contract?: string;
};

export type SibilParameterJsonldSibilParameterWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    sibilUsername?: string;
    sibilPassword?: string;
    name?: string;
    contract?: string;
};

export type SibilTicketingSpectacleSibilTicketingSpectacleRead = {
    readonly id?: number;
    ticketing: string;
};

export type SibilTicketingSpectacleSibilTicketingSpectacleWrite = {
    spectacleId?: number;
    festivalId?: number | null;
    jeunePublic?: boolean;
    coproduction?: boolean;
    ticketing: string;
    sibilParameter: string;
};

export type SibilTicketingSpectacleJsonldSibilTicketingSpectacleRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    ticketing: string;
};

export type SibilTicketingSpectacleJsonldSibilTicketingSpectacleWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    spectacleId?: number;
    festivalId?: number | null;
    jeunePublic?: boolean;
    coproduction?: boolean;
    ticketing: string;
    sibilParameter: string;
};

export type SibilVenueLieuSibilVenueLieuRead = {
    readonly id?: number;
    venue: string;
};

export type SibilVenueLieuSibilVenueLieuWrite = {
    lieuId?: number;
    venue: string;
};

export type SibilVenueLieuJsonldSibilVenueLieuRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    venue: string;
};

export type SibilVenueLieuJsonldSibilVenueLieuWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    lieuId?: number;
    venue: string;
};

export type StickerStickerRead = {
    readonly id?: number;
    contract: string;
    name?: string;
    pageType?: string;
    horizontalNb?: number;
    verticalNb?: number;
    stickerHeight?: number;
    stickerWidth?: number;
    marginLeft?: number;
    marginTop?: number;
    horizontalDistance?: number;
    verticalDistance?: number;
};

export type StickerStickerWrite = {
    contract: string;
    name?: string;
    pageType?: string;
    horizontalNb?: number;
    verticalNb?: number;
    stickerHeight?: number;
    stickerWidth?: number;
    marginLeft?: number;
    marginTop?: number;
    horizontalDistance?: number;
    verticalDistance?: number;
};

export type StickerJsonldStickerRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    contract: string;
    name?: string;
    pageType?: string;
    horizontalNb?: number;
    verticalNb?: number;
    stickerHeight?: number;
    stickerWidth?: number;
    marginLeft?: number;
    marginTop?: number;
    horizontalDistance?: number;
    verticalDistance?: number;
};

export type StickerJsonldStickerWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    name?: string;
    pageType?: string;
    horizontalNb?: number;
    verticalNb?: number;
    stickerHeight?: number;
    stickerWidth?: number;
    marginLeft?: number;
    marginTop?: number;
    horizontalDistance?: number;
    verticalDistance?: number;
};

export type StockContingentStockContingentRead = {
    dismissedStock?: number;
    logicalSeatConfig?: string | null;
    totalStock: number;
    soldTickets?: number;
    bookedTickets?: number;
    reservedTickets?: number;
    bookableStock?: number;
    draft?: boolean;
    seatConfig?: string | null;
    eventDate?: string | null;
    parent?: StockContingentStockContingentRead | null;
    childrenList?: Array<StockContingentStockContingentRead>;
    seatList?: Array<string>;
    availableSeatList?: Array<string>;
    contingent?: string;
    ticketPriceList?: Array<string>;
    readonly name?: string;
    readonly color?: string;
    readonly contract?: string;
};

export type StockContingentStockContingentWrite = {
    logicalSeatConfig?: string | null;
    totalStock: number;
    draft?: boolean;
    seatConfig?: string | null;
    eventDate?: string | null;
    seatList?: Array<string>;
    availableSeatList?: Array<string>;
    contingent?: string;
};

export type StockContingentJsonldStockContingentRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    dismissedStock?: number;
    logicalSeatConfig?: string | null;
    totalStock: number;
    soldTickets?: number;
    bookedTickets?: number;
    reservedTickets?: number;
    bookableStock?: number;
    draft?: boolean;
    seatConfig?: string | null;
    eventDate?: string | null;
    parent?: StockContingentJsonldStockContingentRead | null;
    childrenList?: Array<StockContingentJsonldStockContingentRead>;
    seatList?: Array<string>;
    availableSeatList?: Array<string>;
    contingent?: string;
    ticketPriceList?: Array<string>;
    readonly name?: string;
    readonly color?: string;
    readonly contract?: string;
};

export type StockContingentJsonldStockContingentWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    logicalSeatConfig?: string | null;
    totalStock: number;
    draft?: boolean;
    seatConfig?: string | null;
    eventDate?: string | null;
    seatList?: Array<string>;
    availableSeatList?: Array<string>;
    contingent?: string;
};

export type StrategyProviderTicketImportedFileRead = {
    [key: string]: unknown;
};

export type StrategyProviderTicketImportedFileWrite = {
    [key: string]: unknown;
};

export type StrategyJsonldProviderTicketImportedFileRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type StrategyJsonldProviderTicketImportedFileWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type StrategyModeProviderTicketImportedFileRead = {
    [key: string]: unknown;
};

export type StrategyModeProviderTicketImportedFileWrite = {
    [key: string]: unknown;
};

export type StrategyModeJsonldProviderTicketImportedFileRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type StrategyModeJsonldProviderTicketImportedFileWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type SubscriptionSubscriptionRead = {
    name?: string | null;
    description?: string | null;
    coupon?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    status?: 'active' | 'payment_failed' | 'missing_provider_metadata' | 'disabled' | 'ended';
    sepaMandateUniqueRef?: string | null;
    createdAt?: string;
    updatedAt?: string;
    subscriptionMaturityList?: Array<string>;
    /**
     * The order URI to be associated with
     */
    order: string | null;
    parameters: Array<string>;
    readonly customer?: string | null;
    readonly currency?: string;
    readonly payment?: string | null;
    readonly paidSubscriptionMaturityCount?: number;
    readonly totalSubscriptionMaturityCount?: number;
    readonly pendingSubscriptionMaturityCount?: number;
    readonly nextPendingSubscriptionMaturity?: string | null;
    readonly wallet?: string;
    readonly paidSubscriptionMaturityAmount?: number;
    readonly pendingSubscriptionMaturityAmount?: number;
};

export type SubscriptionSubscriptionWrite = {
    name?: string | null;
    description?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    status?: 'active' | 'payment_failed' | 'missing_provider_metadata' | 'disabled' | 'ended';
    sepaMandateUniqueRef?: string | null;
    createdAt?: string;
    updatedAt?: string;
    subscriptionMaturityList?: Array<string>;
    /**
     * The order URI to be associated with
     */
    order: string | null;
    parameters: Array<string>;
};

export type SubscriptionJsonldSubscriptionRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    description?: string | null;
    coupon?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    status?: 'active' | 'payment_failed' | 'missing_provider_metadata' | 'disabled' | 'ended';
    sepaMandateUniqueRef?: string | null;
    createdAt?: string;
    updatedAt?: string;
    subscriptionMaturityList?: Array<string>;
    /**
     * The order URI to be associated with
     */
    order: string | null;
    parameters: Array<string>;
    readonly customer?: string | null;
    readonly currency?: string;
    readonly payment?: string | null;
    readonly paidSubscriptionMaturityCount?: number;
    readonly totalSubscriptionMaturityCount?: number;
    readonly pendingSubscriptionMaturityCount?: number;
    readonly nextPendingSubscriptionMaturity?: string | null;
    readonly wallet?: string;
    readonly paidSubscriptionMaturityAmount?: number;
    readonly pendingSubscriptionMaturityAmount?: number;
};

export type SubscriptionJsonldSubscriptionWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string | null;
    description?: string | null;
    provider?: string;
    providerMetadata?: Array<string> | null;
    status?: 'active' | 'payment_failed' | 'missing_provider_metadata' | 'disabled' | 'ended';
    sepaMandateUniqueRef?: string | null;
    createdAt?: string;
    updatedAt?: string;
    subscriptionMaturityList?: Array<string>;
    /**
     * The order URI to be associated with
     */
    order: string | null;
    parameters: Array<string>;
};

export type SubscriptionMaturitySubscriptionMaturityRead = {
    status?: 'pending' | 'paid' | 'failed' | 'dismissed';
    statusDescription?: string | null;
    amount?: number;
    currency: string;
    dueDate: string;
    subscription: string | null;
};

export type SubscriptionMaturitySubscriptionMaturityWrite = {
    status?: 'pending' | 'paid' | 'failed' | 'dismissed';
    amount?: number;
    currency: string;
    dueDate: string;
};

export type SubscriptionMaturityJsonldSubscriptionMaturityRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    status?: 'pending' | 'paid' | 'failed' | 'dismissed';
    statusDescription?: string | null;
    amount?: number;
    currency: string;
    dueDate: string;
    subscription: string | null;
};

export type SubscriptionMaturityJsonldSubscriptionMaturityWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    status?: 'pending' | 'paid' | 'failed' | 'dismissed';
    amount?: number;
    currency: string;
    dueDate: string;
};

export type TagWrite = {
    name?: string;
    contract?: string | null;
    ticketingList?: Array<TicketingWrite>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagEventDateCreateTagCreateTicketingCreate = {
    name?: string;
    contract?: string | null;
    ticketingList?: Array<TicketingEventDateCreateTagCreateTicketingCreate>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagTagCreate = {
    name?: string;
    contract?: string | null;
    ticketingList?: Array<string>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagTagRead = {
    name?: string;
    nameTokenized?: string;
    contract?: string | null;
    ticketingList?: Array<string>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagTagUpdate = {
    name?: string;
    ticketingList?: Array<string>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    contract?: string | null;
    ticketingList?: Array<TicketingJsonldWrite>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagJsonldEventDateCreateTagCreateTicketingCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    contract?: string | null;
    ticketingList?: Array<TicketingJsonldEventDateCreateTagCreateTicketingCreate>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagJsonldTagCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    contract?: string | null;
    ticketingList?: Array<string>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagJsonldTagRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    nameTokenized?: string;
    contract?: string | null;
    ticketingList?: Array<string>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TagJsonldTagUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    ticketingList?: Array<string>;
    orderList?: Array<string>;
    cartList?: Array<string>;
    shippingList?: Array<string>;
};

export type TaxWrite = {
    rate?: number;
    countryCode?: string | null;
};

export type TaxEventDateReadTaxReadTicketPriceReadEventDateRead = {
    rate?: number;
    countryCode?: string | null;
};

export type TaxHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    rate?: number;
    countryCode?: string | null;
};

export type TaxTaxRead = {
    rate?: number;
    countryCode?: string | null;
};

export type TaxTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    rate?: number;
    countryCode?: string | null;
};

export type TaxTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    rate?: number;
    countryCode?: string | null;
};

export type TaxJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    rate?: number;
    countryCode?: string | null;
};

export type TaxJsonldEventDateReadTaxReadTicketPriceReadEventDateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    rate?: number;
    countryCode?: string | null;
};

export type TaxJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    rate?: number;
    countryCode?: string | null;
};

export type TaxJsonldTaxRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    rate?: number;
    countryCode?: string | null;
};

export type TaxJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    rate?: number;
    countryCode?: string | null;
};

export type TaxJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    rate?: number;
    countryCode?: string | null;
};

export type TicketWrite = {
    cartItem?: string | null;
    isCustomized?: boolean | null;
};

export type TicketTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    paidValue?: number | null;
    feeValue?: number | null;
    facialValue?: number | null;
    facialFeeValue?: number | null;
    currency?: string | null;
    status?: 'payed' | 'refunded' | 'booked' | 'cancelled';
    ticketingTitle?: string | null;
    eventDateStartDate?: string | null;
    eventDateEndDate?: string | null;
    /**
     * If the ticket can be scanned (not already scanned, not cancelled or validity date is not expired)
     */
    readonly isValid?: boolean;
    hasMasterTicketList?: boolean;
    refundedAt?: string | null;
    ticketPrice?: TicketPriceTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead | null;
    orderItem?: string | null;
    order?: string | null;
    availableSeat?: string | null;
    updatedAt?: string | null;
    cartItem?: string | null;
    ticketingTimezone: string;
    readonly masterTicketList?: Array<MasterTicketTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
    participant?: string | null;
    isCustomized?: boolean | null;
    ticketPriceName?: string | null;
    ticketPriceType?: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    providerTicketImportedFile?: string | null;
    eventDate?: EventDateTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead | null;
    ticketCheckpointList?: Array<TicketCheckpointTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
    boughtAt?: string | null;
    readonly priceVat?: number | null;
    readonly seatReserved?: string | null;
    readonly participantRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    readonly imported?: boolean;
    readonly id?: number;
    data?: Array<string>;
    provider?: string;
};

export type TicketJsonldWrite = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    cartItem?: string | null;
    isCustomized?: boolean | null;
};

export type TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    paidValue?: number | null;
    feeValue?: number | null;
    facialValue?: number | null;
    facialFeeValue?: number | null;
    currency?: string | null;
    status?: 'payed' | 'refunded' | 'booked' | 'cancelled';
    ticketingTitle?: string | null;
    eventDateStartDate?: string | null;
    eventDateEndDate?: string | null;
    /**
     * If the ticket can be scanned (not already scanned, not cancelled or validity date is not expired)
     */
    readonly isValid?: boolean;
    hasMasterTicketList?: boolean;
    refundedAt?: string | null;
    ticketPrice?: TicketPriceJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead | null;
    orderItem?: string | null;
    order?: string | null;
    availableSeat?: string | null;
    updatedAt?: string | null;
    cartItem?: string | null;
    ticketingTimezone: string;
    readonly masterTicketList?: Array<MasterTicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
    participant?: string | null;
    isCustomized?: boolean | null;
    ticketPriceName?: string | null;
    ticketPriceType?: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    providerTicketImportedFile?: string | null;
    eventDate?: EventDateJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead | null;
    ticketCheckpointList?: Array<TicketCheckpointJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
    boughtAt?: string | null;
    readonly priceVat?: number | null;
    readonly seatReserved?: string | null;
    readonly participantRequiredFields?: Array<string>;
    readonly ticketRequiredFields?: Array<string>;
    readonly imported?: boolean;
    readonly id?: number;
    data?: Array<string>;
    provider?: string;
};

export type TicketCheckpointCheckpointRead = {
    checkpoint?: CheckpointCheckpointRead;
    maxScanNb?: number;
    isValid?: boolean;
    lastScannedDate?: string | null;
    firstScannedDate?: string | null;
    currentScanNb?: number;
    currentValidScanNb?: number;
    validStartDate?: string | null;
    validEndDate?: string | null;
    readonly isUnlimited?: boolean;
};

export type TicketCheckpointTicketCheckpointRead = {
    [key: string]: unknown;
};

export type TicketCheckpointTicketCheckpointWrite = {
    [key: string]: unknown;
};

export type TicketCheckpointTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    ticket?: TicketTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead;
    maxScanNb?: number;
    isValid?: boolean;
    lastScannedDate?: string | null;
    firstScannedDate?: string | null;
    currentScanNb?: number;
    currentValidScanNb?: number;
    validStartDate?: string | null;
    validEndDate?: string | null;
    readonly isUnlimited?: boolean;
};

export type TicketCheckpointJsonldCheckpointRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    checkpoint?: CheckpointJsonldCheckpointRead;
    maxScanNb?: number;
    isValid?: boolean;
    lastScannedDate?: string | null;
    firstScannedDate?: string | null;
    currentScanNb?: number;
    currentValidScanNb?: number;
    validStartDate?: string | null;
    validEndDate?: string | null;
    readonly isUnlimited?: boolean;
};

export type TicketCheckpointJsonldTicketCheckpointRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type TicketCheckpointJsonldTicketCheckpointWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type TicketCheckpointJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticket?: TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead;
    maxScanNb?: number;
    isValid?: boolean;
    lastScannedDate?: string | null;
    firstScannedDate?: string | null;
    currentScanNb?: number;
    currentValidScanNb?: number;
    validStartDate?: string | null;
    validEndDate?: string | null;
    readonly isUnlimited?: boolean;
};

export type TicketPriceWrite = {
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    eventDate?: EventDateWrite | null;
    tax: TaxWrite | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    sellingDeviceList?: Array<string>;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<TicketPriceSeatGroupWrite>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    valueIncvat?: number | null;
};

export type TicketPriceEventDateReadTaxReadTicketPriceReadEventDateRead = {
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    eventDate?: EventDateEventDateReadTaxReadTicketPriceReadEventDateRead | null;
    tax: TaxEventDateReadTaxReadTicketPriceReadEventDateRead | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    orderItemList?: Array<string>;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    ticketMaximumScan?: number | null;
    sellingDeviceList?: Array<string>;
    hash?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<string>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    readonly hideFees?: boolean;
    valueIncvat?: number | null;
    readonly currency?: string;
    enabled?: boolean;
    readonly contract?: string;
    readonly seatGroupList?: Array<string>;
    readonly dynamic?: boolean;
    readonly manuallySetStock?: number | null;
};

export type TicketPriceHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    eventDate?: string | null;
    tax: TaxHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate | null;
    ticketPriceGroup?: TicketPriceGroupHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate | null;
    wallet?: string | null;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    sellingDeviceList?: Array<SellingDeviceHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate>;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<TicketPriceSeatGroupHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    valueIncvat?: number | null;
};

export type TicketPriceTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    eventDate?: EventDateTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
    tax: TaxTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    sellingDeviceList?: Array<string>;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<TicketPriceSeatGroupTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    valueIncvat?: number | null;
};

export type TicketPriceTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    eventDate?: EventDateTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead | null;
    tax: TaxTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead | null;
    ticketPriceGroup?: TicketPriceGroupTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead | null;
    wallet?: string | null;
    orderItemList?: Array<string>;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    ticketMaximumScan?: number | null;
    sellingDeviceList?: Array<string>;
    hash?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<string>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    readonly hideFees?: boolean;
    valueIncvat?: number | null;
    readonly currency?: string;
    enabled?: boolean;
    readonly contract?: string;
    readonly seatGroupList?: Array<string>;
    readonly dynamic?: boolean;
    readonly manuallySetStock?: number | null;
};

export type TicketPriceTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    eventDate?: EventDateTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead | null;
    tax: string | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    orderItemList?: Array<string>;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    ticketMaximumScan?: number | null;
    sellingDeviceList?: Array<string>;
    hash?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<string>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    readonly hideFees?: boolean;
    valueIncvat?: number | null;
    readonly currency?: string;
    enabled?: boolean;
    readonly contract?: string;
    readonly seatGroupList?: Array<string>;
    readonly dynamic?: boolean;
    readonly manuallySetStock?: number | null;
};

export type TicketPriceTicketingReadEventDateReadMinisiteReadTicketingRead = {
    readonly imageList?: Array<string> | null;
};

export type TicketPriceJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    eventDate?: EventDateJsonldWrite | null;
    tax: TaxJsonldWrite | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    sellingDeviceList?: Array<string>;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<TicketPriceSeatGroupJsonldWrite>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    valueIncvat?: number | null;
};

export type TicketPriceJsonldEventDateReadTaxReadTicketPriceReadEventDateRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    eventDate?: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead | null;
    tax: TaxJsonldEventDateReadTaxReadTicketPriceReadEventDateRead | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    orderItemList?: Array<string>;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    ticketMaximumScan?: number | null;
    sellingDeviceList?: Array<string>;
    hash?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<string>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    readonly hideFees?: boolean;
    valueIncvat?: number | null;
    readonly currency?: string;
    enabled?: boolean;
    readonly contract?: string;
    readonly seatGroupList?: Array<string>;
    readonly dynamic?: boolean;
    readonly manuallySetStock?: number | null;
};

export type TicketPriceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    eventDate?: string | null;
    tax: TaxJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate | null;
    ticketPriceGroup?: TicketPriceGroupJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate | null;
    wallet?: string | null;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    sellingDeviceList?: Array<SellingDeviceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate>;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<TicketPriceSeatGroupJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    valueIncvat?: number | null;
};

export type TicketPriceJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    eventDate?: EventDateJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
    tax: TaxJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    sellingDeviceList?: Array<string>;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<TicketPriceSeatGroupJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    valueIncvat?: number | null;
};

export type TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    eventDate?: EventDateJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead | null;
    tax: TaxJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead | null;
    ticketPriceGroup?: TicketPriceGroupJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead | null;
    wallet?: string | null;
    orderItemList?: Array<string>;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    ticketMaximumScan?: number | null;
    sellingDeviceList?: Array<string>;
    hash?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<string>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    readonly hideFees?: boolean;
    valueIncvat?: number | null;
    readonly currency?: string;
    enabled?: boolean;
    readonly contract?: string;
    readonly seatGroupList?: Array<string>;
    readonly dynamic?: boolean;
    readonly manuallySetStock?: number | null;
};

export type TicketPriceJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    excludedFromParentStock?: boolean;
    readonly id?: string;
    facialValue: number;
    type: 'full_price' | 'reduced' | 'exempted' | 'subscription' | 'subscriptionMemberLoyalty' | 'scholar' | 'group' | 'reseller' | 'other' | 'default';
    name?: string | null;
    description?: string | null;
    manualSort?: number | null;
    saleStartDate?: string | null;
    saleEndDate?: string | null;
    templateParameters?: Array<string> | null;
    readonly createdAt?: string;
    readonly updatedAt?: string;
    eventDate?: EventDateJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead | null;
    tax: string | null;
    ticketPriceGroup?: string | null;
    wallet?: string | null;
    orderItemList?: Array<string>;
    ticketStartDate?: string | null;
    ticketExpirationInterval?: string | null;
    ticketMaximumScan?: number | null;
    sellingDeviceList?: Array<string>;
    hash?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    ticketPriceSeatGroupList?: Array<string>;
    buyable?: boolean;
    visible?: boolean;
    offerRuleList?: Array<string>;
    willGenerateTicket?: boolean;
    behaviour: null | 'trigger_offer' | 'cash_coupon';
    isPriceDisplayed?: boolean;
    customerRequiredFields?: Array<string> | null;
    bookingTrack?: string;
    scanTrack?: string | null;
    /**
     * This stock contingent will be automatically set for online orders.
     */
    onlineStockContingent?: string | null;
    /**
     * Used for price list only (ie. not in an event date). The online contingent will automatically convert to a `onlineStockContingent` once in an event date context.
     */
    onlineContingent?: string | null;
    onlineMaxQuantityPerCart?: number | null;
    totalStock?: number | null;
    unlimitedStock?: boolean;
    readonly hideFees?: boolean;
    valueIncvat?: number | null;
    readonly currency?: string;
    enabled?: boolean;
    readonly contract?: string;
    readonly seatGroupList?: Array<string>;
    readonly dynamic?: boolean;
    readonly manuallySetStock?: number | null;
};

export type TicketPriceJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly imageList?: Array<string> | null;
};

export type TicketPriceGroupHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<TicketPriceHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupTicketPriceGroupCreate = {
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<string>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupTicketPriceGroupRead = {
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<string>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupTicketPriceGroupUpdate = {
    manualSort: number | null;
    groupName?: string;
    ticketPriceList?: Array<string>;
};

export type TicketPriceGroupTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<TicketPriceTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<TicketPriceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupJsonldTicketPriceGroupCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<string>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupJsonldTicketPriceGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<string>;
    organizationalUnit?: string | null;
};

export type TicketPriceGroupJsonldTicketPriceGroupUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    manualSort: number | null;
    groupName?: string;
    ticketPriceList?: Array<string>;
};

export type TicketPriceGroupJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    manualSort: number | null;
    groupName?: string;
    contract: string;
    ticketPriceList?: Array<TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead>;
    organizationalUnit?: string | null;
};

export type TicketPriceSeatGroupWrite = {
    ticketPrice: TicketPriceWrite;
    seatGroup: string;
};

export type TicketPriceSeatGroupHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    ticketPrice: TicketPriceHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate;
    seatGroup: string;
};

export type TicketPriceSeatGroupTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    ticketPrice: TicketPriceTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate;
    seatGroup: string;
};

export type TicketPriceSeatGroupTicketPriceSeatGroupRead = {
    ticketPrice: string;
    seatGroup: string;
};

export type TicketPriceSeatGroupTicketPriceSeatGroupWrite = {
    ticketPrice?: string;
    seatGroup?: string;
};

export type TicketPriceSeatGroupJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketPrice: TicketPriceJsonldWrite;
    seatGroup: string;
};

export type TicketPriceSeatGroupJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketPrice: TicketPriceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate;
    seatGroup: string;
};

export type TicketPriceSeatGroupJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketPrice: TicketPriceJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate;
    seatGroup: string;
};

export type TicketPriceSeatGroupJsonldTicketPriceSeatGroupRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    ticketPrice: string;
    seatGroup: string;
};

export type TicketPriceSeatGroupJsonldTicketPriceSeatGroupWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketPrice?: string;
    seatGroup?: string;
};

export type TicketingWrite = {
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    permanent?: boolean | null;
    /**
     * The venue IRI
     */
    venue?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<TagWrite>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
};

export type TicketingEventDateCreateTagCreateTicketingCreate = {
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The wallet URI to be associated with
     */
    wallet: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    permanent?: boolean | null;
    /**
     * The venue IRI
     */
    venue?: string | null;
    /**
     * @deprecated
     */
    activitySlug?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<TagEventDateCreateTagCreateTicketingCreate>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
};

export type TicketingTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The wallet URI to be associated with
     */
    wallet: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    permanent?: boolean | null;
    /**
     * The venue IRI
     */
    venue?: string | null;
    /**
     * @deprecated
     */
    activitySlug?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<string>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
};

export type TicketingTicketingReadEventDateReadMinisiteReadTicketingRead = {
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The wallet URI to be associated with
     */
    wallet: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    secretSalt?: number;
    permanent?: boolean | null;
    readonly createdAt?: string;
    /**
     * A list of event dates URI
     */
    eventDateList?: Array<string>;
    /**
     * The venue IRI
     */
    venue?: VenueTicketingReadEventDateReadMinisiteReadTicketingRead | null;
    sellingDeviceData?: Array<string>;
    isOnSale?: boolean;
    /**
     * No demo mode anymore
     * @deprecated
     */
    isOnSaleDemoMode?: boolean;
    refreshDenormalizationAt?: string | null;
    /**
     * The slug of the ticketing
     */
    slug?: string;
    /**
     * @deprecated
     */
    activitySlug?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    /**
     * Use the `SellingDeviceSchedule` instead
     * @deprecated
     */
    schedule?: string | null;
    sellingDeviceSchedule?: unknown;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    availabilityStatus?: 'onSale' | 'soldOut' | 'soldOutOnline' | 'pastOrClosed' | 'contractNotApproved' | 'noTicketPrice' | 'onHold' | 'other';
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<string>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
    readonly hideFees?: boolean;
    /**
     * The contract URI to be associated with
     */
    readonly contract?: string;
    readonly currency?: string;
    readonly venueName?: string | null;
    readonly venueFullAddress?: string;
    /**
     * @deprecated
     */
    minisite?: MinisiteTicketingReadEventDateReadMinisiteReadTicketingRead | null;
    readonly minisiteList?: Array<string>;
    readonly firstFutureEventDateStartDate?: string | null;
    readonly lastPastEventDateStartDate?: string | null;
    cartItemWithOfferList?: Array<CartItemWithOffer>;
    totalEventDateCount?: number;
    futureEventDateCount?: number;
    /**
     * The first event date in the future (or the undated eventDate if undated)
     */
    firstFutureEventDate?: string;
    futureEventDatesAvailabilityStatus?: string;
    /**
     * `true` if the ticketing has unlimited stock, fasle otherwise
     */
    unlimitedStock?: boolean;
    contingentBookableStock?: number;
    notInStockContingentBookableStock?: number;
};

export type TicketingJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    permanent?: boolean | null;
    /**
     * The venue IRI
     */
    venue?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<TagJsonldWrite>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
};

export type TicketingJsonldEventDateCreateTagCreateTicketingCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The wallet URI to be associated with
     */
    wallet: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    permanent?: boolean | null;
    /**
     * The venue IRI
     */
    venue?: string | null;
    /**
     * @deprecated
     */
    activitySlug?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<TagJsonldEventDateCreateTagCreateTicketingCreate>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
};

export type TicketingJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The wallet URI to be associated with
     */
    wallet: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    permanent?: boolean | null;
    /**
     * The venue IRI
     */
    venue?: string | null;
    /**
     * @deprecated
     */
    activitySlug?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<string>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
};

export type TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    /**
     * The timezone where the event occurs (ex : 'Europe/Paris')
     */
    timezone: string;
    /**
     * The wallet URI to be associated with
     */
    wallet: string;
    /**
     * The name of the event
     */
    title: string;
    type?: 'dated_events' | 'undated_event' | 'offer';
    secretSalt?: number;
    permanent?: boolean | null;
    readonly createdAt?: string;
    /**
     * A list of event dates URI
     */
    eventDateList?: Array<string>;
    /**
     * The venue IRI
     */
    venue?: VenueJsonldTicketingReadEventDateReadMinisiteReadTicketingRead | null;
    sellingDeviceData?: Array<string>;
    isOnSale?: boolean;
    /**
     * No demo mode anymore
     * @deprecated
     */
    isOnSaleDemoMode?: boolean;
    refreshDenormalizationAt?: string | null;
    /**
     * The slug of the ticketing
     */
    slug?: string;
    /**
     * @deprecated
     */
    activitySlug?: string | null;
    description?: string | null;
    /**
     * Use `venue.name` instead
     * @deprecated
     */
    place?: string | null;
    /**
     * Use `venue.address` instead
     * @deprecated
     */
    address?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    city?: string | null;
    /**
     * Use `venue.city` instead
     * @deprecated
     */
    citySlug?: string | null;
    /**
     * Use `venue.countryCode` instead
     * @deprecated
     */
    countryCode?: string | null;
    /**
     * A list of "media" objects
     */
    mediaList?: Array<string> | null;
    /**
     * Use the `SellingDeviceSchedule` instead
     * @deprecated
     */
    schedule?: string | null;
    sellingDeviceSchedule?: unknown;
    position?: number;
    customerRequiredFields?: Array<string> | null;
    templateParameters?: Array<string> | null;
    availabilityStatus?: 'onSale' | 'soldOut' | 'soldOutOnline' | 'pastOrClosed' | 'contractNotApproved' | 'noTicketPrice' | 'onHold' | 'other';
    orderNotificationEmailList?: Array<string> | null;
    /**
     * A list of images path
     */
    imageList?: Array<string> | null;
    /**
     * A list of tags URI
     */
    tagList?: Array<string>;
    /**
     * The season IRI
     */
    season?: string | null;
    /**
     * The ticketing category IRI
     */
    ticketingCategory?: string | null;
    /**
     * @deprecated
     */
    activityUuid?: string | null;
    /**
     * The organizationalUnit IRI
     */
    organizationalUnit?: string;
    moduleList?: Array<string>;
    readonly hideFees?: boolean;
    /**
     * The contract URI to be associated with
     */
    readonly contract?: string;
    readonly currency?: string;
    readonly venueName?: string | null;
    readonly venueFullAddress?: string;
    /**
     * @deprecated
     */
    minisite?: MinisiteJsonldTicketingReadEventDateReadMinisiteReadTicketingRead | null;
    readonly minisiteList?: Array<string>;
    readonly firstFutureEventDateStartDate?: string | null;
    readonly lastPastEventDateStartDate?: string | null;
    cartItemWithOfferList?: Array<CartItemWithOffer>;
    totalEventDateCount?: number;
    futureEventDateCount?: number;
    /**
     * The first event date in the future (or the undated eventDate if undated)
     */
    firstFutureEventDate?: string;
    futureEventDatesAvailabilityStatus?: string;
    /**
     * `true` if the ticketing has unlimited stock, fasle otherwise
     */
    unlimitedStock?: boolean;
    contingentBookableStock?: number;
    notInStockContingentBookableStock?: number;
};

export type TicketingCategoryTicketingCategoryCreate = {
    name: string;
    contract: string;
};

export type TicketingCategoryTicketingCategoryRead = {
    name: string;
    position?: number | null;
    contract: string;
};

export type TicketingCategoryTicketingCategoryUpdate = {
    name: string;
};

export type TicketingCategoryJsonldTicketingCategoryCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    contract: string;
};

export type TicketingCategoryJsonldTicketingCategoryRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    position?: number | null;
    contract: string;
};

export type TicketingCategoryJsonldTicketingCategoryUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
};

export type TicketingOptionStressTicketingOptionStressRead = {
    [key: string]: unknown;
};

export type TicketingOptionStressTicketingOptionStressUpdate = {
    [key: string]: unknown;
};

export type TicketingOptionStressJsonldTicketingOptionStressRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
};

export type TicketingOptionStressJsonldTicketingOptionStressUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type TicketingSellingDeviceTicketingSellingDeviceRead = {
    minFacialValue?: number | null;
    maxFacialValue?: number | null;
    hasTicketPriceOnSale?: boolean | null;
    hasTicketPriceEnabled?: boolean | null;
    sellingDevice?: string;
    ticketing?: string;
    readonly minPrice?: number | null;
    readonly maxPrice?: number | null;
};

export type TicketingSellingDeviceJsonldTicketingSellingDeviceRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    minFacialValue?: number | null;
    maxFacialValue?: number | null;
    hasTicketPriceOnSale?: boolean | null;
    hasTicketPriceEnabled?: boolean | null;
    sellingDevice?: string;
    ticketing?: string;
    readonly minPrice?: number | null;
    readonly maxPrice?: number | null;
};

export type TicketingUserTicketingUserReadTicketingUserRead = {
    externalId?: string;
    provider?: string;
};

export type TicketingUserTicketingUserWrite = {
    [key: string]: unknown;
};

export type TicketingUserJsonldTicketingUserReadTicketingUserRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    externalId?: string;
    provider?: string;
};

export type TicketingUserJsonldTicketingUserWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type TransactionWrite = {
    name?: string;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    cashCoupon?: string | null;
    sourceExternalTransaction?: TransactionWrite | null;
};

export type TransactionRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    name?: string;
    nameTranslationKey?: string;
    operationType?: string;
    provider?: string | null;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    transactionGroup?: string | null;
    contract?: string;
    lettering?: string | null;
    cashCoupon?: string | null;
    currency?: string;
    saleSession?: AbstractSaleSessionRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    order?: string | null;
    createdAt?: string | null;
    readonly updatedAt?: string | null;
    payment?: string | null;
    refund?: RefundRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    deposit?: string | null;
    revertedTransaction?: TransactionRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    client?: string | null;
    clientHistory?: Array<string>;
    sourceExternalTransaction?: TransactionRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    initialSourceExternalTransaction?: TransactionRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    readonly accountType?: string | null;
    readonly lettered?: boolean;
    readonly externalProviderBalance?: number;
    readonly externalAmount?: number;
    otherTransactionGroupTransactionList?: CollectionRefundReadRefundOrderItemReadTransactionReadRefundRead;
};

export type TransactionTransactionGroupReadTransactionReadTransactionGroupRead = {
    name?: string;
    nameTranslationKey?: string;
    operationType?: string;
    provider?: string | null;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    transactionGroup?: TransactionGroupTransactionGroupReadTransactionReadTransactionGroupRead | null;
    contract?: string;
    lettering?: string | null;
    cashCoupon?: string | null;
    currency?: string;
    saleSession?: AbstractSaleSessionTransactionGroupReadTransactionReadTransactionGroupRead | null;
    order?: string | null;
    createdAt?: string | null;
    readonly updatedAt?: string | null;
    payment?: string | null;
    refund?: string | null;
    deposit?: string | null;
    revertedTransaction?: TransactionTransactionGroupReadTransactionReadTransactionGroupRead | null;
    client?: string | null;
    clientHistory?: Array<string>;
    sourceExternalTransaction?: TransactionTransactionGroupReadTransactionReadTransactionGroupRead | null;
    initialSourceExternalTransaction?: TransactionTransactionGroupReadTransactionReadTransactionGroupRead | null;
    readonly accountType?: string | null;
    readonly lettered?: boolean;
    readonly externalProviderBalance?: number;
    readonly externalAmount?: number;
    otherTransactionGroupTransactionList?: CollectionTransactionGroupReadTransactionReadTransactionGroupRead;
};

export type TransactionTransactionRead = {
    name?: string;
    nameTranslationKey?: string;
    operationType?: string;
    provider?: string | null;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    transactionGroup?: string | null;
    contract?: string;
    lettering?: string | null;
    cashCoupon?: string | null;
    currency?: string;
    saleSession?: AbstractSaleSessionTransactionRead | null;
    order?: string | null;
    createdAt?: string | null;
    readonly updatedAt?: string | null;
    payment?: string | null;
    refund?: string | null;
    deposit?: string | null;
    revertedTransaction?: TransactionTransactionRead | null;
    client?: string | null;
    clientHistory?: Array<string>;
    sourceExternalTransaction?: TransactionTransactionRead | null;
    initialSourceExternalTransaction?: TransactionTransactionRead | null;
    readonly accountType?: string | null;
    readonly lettered?: boolean;
    readonly externalProviderBalance?: number;
    readonly externalAmount?: number;
    otherTransactionGroupTransactionList?: CollectionTransactionRead;
};

export type TransactionTransactionWrite = {
    name?: string;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    cashCoupon?: string | null;
    sourceExternalTransaction?: TransactionTransactionWrite | null;
};

export type TransactionJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    cashCoupon?: string | null;
    sourceExternalTransaction?: TransactionJsonldWrite | null;
};

export type TransactionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    nameTranslationKey?: string;
    operationType?: string;
    provider?: string | null;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    transactionGroup?: string | null;
    contract?: string;
    lettering?: string | null;
    cashCoupon?: string | null;
    currency?: string;
    saleSession?: AbstractSaleSessionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    order?: string | null;
    createdAt?: string | null;
    readonly updatedAt?: string | null;
    payment?: string | null;
    refund?: RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    deposit?: string | null;
    revertedTransaction?: TransactionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    client?: string | null;
    clientHistory?: Array<string>;
    sourceExternalTransaction?: TransactionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    initialSourceExternalTransaction?: TransactionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead | null;
    readonly accountType?: string | null;
    readonly lettered?: boolean;
    readonly externalProviderBalance?: number;
    readonly externalAmount?: number;
    otherTransactionGroupTransactionList?: CollectionJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead;
};

export type TransactionJsonldTransactionGroupReadTransactionReadTransactionGroupRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    nameTranslationKey?: string;
    operationType?: string;
    provider?: string | null;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    transactionGroup?: TransactionGroupJsonldTransactionGroupReadTransactionReadTransactionGroupRead | null;
    contract?: string;
    lettering?: string | null;
    cashCoupon?: string | null;
    currency?: string;
    saleSession?: AbstractSaleSessionJsonldTransactionGroupReadTransactionReadTransactionGroupRead | null;
    order?: string | null;
    createdAt?: string | null;
    readonly updatedAt?: string | null;
    payment?: string | null;
    refund?: string | null;
    deposit?: string | null;
    revertedTransaction?: TransactionJsonldTransactionGroupReadTransactionReadTransactionGroupRead | null;
    client?: string | null;
    clientHistory?: Array<string>;
    sourceExternalTransaction?: TransactionJsonldTransactionGroupReadTransactionReadTransactionGroupRead | null;
    initialSourceExternalTransaction?: TransactionJsonldTransactionGroupReadTransactionReadTransactionGroupRead | null;
    readonly accountType?: string | null;
    readonly lettered?: boolean;
    readonly externalProviderBalance?: number;
    readonly externalAmount?: number;
    otherTransactionGroupTransactionList?: CollectionJsonldTransactionGroupReadTransactionReadTransactionGroupRead;
};

export type TransactionJsonldTransactionRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    name?: string;
    nameTranslationKey?: string;
    operationType?: string;
    provider?: string | null;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    transactionGroup?: string | null;
    contract?: string;
    lettering?: string | null;
    cashCoupon?: string | null;
    currency?: string;
    saleSession?: AbstractSaleSessionJsonldTransactionRead | null;
    order?: string | null;
    createdAt?: string | null;
    readonly updatedAt?: string | null;
    payment?: string | null;
    refund?: string | null;
    deposit?: string | null;
    revertedTransaction?: TransactionJsonldTransactionRead | null;
    client?: string | null;
    clientHistory?: Array<string>;
    sourceExternalTransaction?: TransactionJsonldTransactionRead | null;
    initialSourceExternalTransaction?: TransactionJsonldTransactionRead | null;
    readonly accountType?: string | null;
    readonly lettered?: boolean;
    readonly externalProviderBalance?: number;
    readonly externalAmount?: number;
    otherTransactionGroupTransactionList?: CollectionJsonldTransactionRead;
};

export type TransactionJsonldTransactionWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name?: string;
    credit?: number | null;
    debit?: number | null;
    valueDate?: string | null;
    label?: string | null;
    externalId?: string | null;
    cashCoupon?: string | null;
    sourceExternalTransaction?: TransactionJsonldTransactionWrite | null;
};

export type TransactionGroupTransactionGroupReadTransactionReadTransactionGroupRead = {
    type?: string;
    sellingDevice: string;
    createdAt?: string;
    brokenDown?: boolean;
    transactionList?: Array<TransactionTransactionGroupReadTransactionReadTransactionGroupRead>;
    payment?: string | null;
    refund?: string | null;
    deposit?: string | null;
    order?: string | null;
    readonly clientTransactionBalance?: number;
    readonly clientTransactionCredit?: number;
    readonly clientTransactionDebit?: number;
    readonly contract?: string | null;
    readonly deleteable?: boolean;
};

export type TransactionGroupJsonldTransactionGroupReadTransactionReadTransactionGroupRead = {
    readonly '@id'?: string;
    readonly '@type'?: string;
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    type?: string;
    sellingDevice: string;
    createdAt?: string;
    brokenDown?: boolean;
    transactionList?: Array<TransactionJsonldTransactionGroupReadTransactionReadTransactionGroupRead>;
    payment?: string | null;
    refund?: string | null;
    deposit?: string | null;
    order?: string | null;
    readonly clientTransactionBalance?: number;
    readonly clientTransactionCredit?: number;
    readonly clientTransactionDebit?: number;
    readonly contract?: string | null;
    readonly deleteable?: boolean;
};

export type UserUserRead = {
    readonly id?: number;
    firstname?: string | null;
    lastname?: string | null;
    gender?: string | null;
    city?: string | null;
    address?: string | null;
    avatar?: string | null;
    email?: string;
    phoneNumber?: string | null;
    readonly fullName?: string | null;
};

export type UserJsonldUserRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    firstname?: string | null;
    lastname?: string | null;
    gender?: string | null;
    city?: string | null;
    address?: string | null;
    avatar?: string | null;
    email?: string;
    phoneNumber?: string | null;
    readonly fullName?: string | null;
};

export type UserSettingsUserSettingsRead = {
    [key: string]: unknown;
};

export type UserSettingsUserSettingsWrite = {
    selectedDeviceState?: string | null;
};

export type UserSettingsJsonldUserSettingsRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
};

export type UserSettingsJsonldUserSettingsWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    selectedDeviceState?: string | null;
};

export type VenueWrite = {
    name: string;
    seatingName?: string | null;
    address: string | null;
    city: string | null;
    zipCode: string | null;
    countryCode: string | null;
    timezone: string;
};

export type VenueTicketingReadEventDateReadMinisiteReadTicketingRead = {
    ticketingList?: Array<TicketingTicketingReadEventDateReadMinisiteReadTicketingRead>;
};

export type VenueVenueCreate = {
    contract: string;
    name: string;
    seatingName?: string | null;
    address: string | null;
    city: string | null;
    zipCode: string | null;
    countryCode: string | null;
    timezone: string;
};

export type VenueVenueRead = {
    readonly createdAt?: string;
    contract: string;
    name: string;
    seatingName?: string | null;
    address: string | null;
    city: string | null;
    zipCode: string | null;
    countryCode: string | null;
    timezone: string;
    sibilVenueLieu?: string | null;
};

export type VenueJsonldWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    name: string;
    seatingName?: string | null;
    address: string | null;
    city: string | null;
    zipCode: string | null;
    countryCode: string | null;
    timezone: string;
};

export type VenueJsonldTicketingReadEventDateReadMinisiteReadTicketingRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    ticketingList?: Array<TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead>;
};

export type VenueJsonldVenueCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    contract: string;
    name: string;
    seatingName?: string | null;
    address: string | null;
    city: string | null;
    zipCode: string | null;
    countryCode: string | null;
    timezone: string;
};

export type VenueJsonldVenueRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly createdAt?: string;
    contract: string;
    name: string;
    seatingName?: string | null;
    address: string | null;
    city: string | null;
    zipCode: string | null;
    countryCode: string | null;
    timezone: string;
    sibilVenueLieu?: string | null;
};

export type VersionVersionRead = {
    readonly id?: number;
    version: string;
    activeSince?: string | null;
    service: ServiceVersionRead;
    readonly name?: string;
};

export type VersionVersionWrite = {
    version: string;
    activeSince?: string | null;
    service: string;
};

export type VersionJsonldVersionRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    version: string;
    activeSince?: string | null;
    service: ServiceJsonldVersionRead;
    readonly name?: string;
};

export type VersionJsonldVersionWrite = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    version: string;
    activeSince?: string | null;
    service: string;
};

export type WalletWalletCreate = {
    currency: string;
    contract: string;
    provider?: string;
    providerMetadata?: Array<string>;
    providerContractNumber?: string | null;
    payoutPeriodicity?: string | null;
    feeCollectionType?: string | null;
};

export type WalletWalletRead = {
    readonly id?: number;
    currency: string;
    payoutList?: Array<string>;
    bankAccountList?: Array<string>;
    ticketingList?: Array<string>;
    contract: string;
    active?: boolean;
    availableAmountForPro?: number;
    balanceAmount?: number;
    balanceAmountForPro?: number;
    turnoverAmount?: number;
    reserveAmountThreshold?: number | null;
    reserveRatioThreshold?: number | null;
    paymentPayoutTimeThreshold?: number | null;
    payoutRegularisationList?: Array<string>;
    ticketPriceList?: Array<string>;
    provider?: string;
    providerMetadata?: Array<string>;
    providerContractNumber?: string | null;
    payoutPeriodicity?: string | null;
    feeCollectionType?: string | null;
    readonly balance?: number;
    readonly opaqueBalance?: number;
    readonly missingBankAccounts?: boolean;
    readonly turnover?: number;
    readonly availableFunds?: number;
    readonly totalInvoiceFeeToCollectAmount?: number;
    readonly feesToCollect?: number;
    readonly feeAmountToCollect?: number;
};

export type WalletWalletUpdate = {
    providerMetadata?: Array<string>;
    providerContractNumber?: string | null;
    payoutPeriodicity?: string | null;
    feeCollectionType?: string | null;
};

export type WalletJsonldWalletCreate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    currency: string;
    contract: string;
    provider?: string;
    providerMetadata?: Array<string>;
    providerContractNumber?: string | null;
    payoutPeriodicity?: string | null;
    feeCollectionType?: string | null;
};

export type WalletJsonldWalletRead = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    readonly id?: number;
    currency: string;
    payoutList?: Array<string>;
    bankAccountList?: Array<string>;
    ticketingList?: Array<string>;
    contract: string;
    active?: boolean;
    availableAmountForPro?: number;
    balanceAmount?: number;
    balanceAmountForPro?: number;
    turnoverAmount?: number;
    reserveAmountThreshold?: number | null;
    reserveRatioThreshold?: number | null;
    paymentPayoutTimeThreshold?: number | null;
    payoutRegularisationList?: Array<string>;
    ticketPriceList?: Array<string>;
    provider?: string;
    providerMetadata?: Array<string>;
    providerContractNumber?: string | null;
    payoutPeriodicity?: string | null;
    feeCollectionType?: string | null;
    readonly balance?: number;
    readonly opaqueBalance?: number;
    readonly missingBankAccounts?: boolean;
    readonly turnover?: number;
    readonly availableFunds?: number;
    readonly totalInvoiceFeeToCollectAmount?: number;
    readonly feesToCollect?: number;
    readonly feeAmountToCollect?: number;
};

export type WalletJsonldWalletUpdate = {
    '@context'?: string | {
        '@vocab': string;
        hydra: 'http://www.w3.org/ns/hydra/core#';
        [key: string]: unknown | string | 'http://www.w3.org/ns/hydra/core#';
    };
    readonly '@id'?: string;
    readonly '@type'?: string;
    providerMetadata?: Array<string>;
    providerContractNumber?: string | null;
    payoutPeriodicity?: string | null;
    feeCollectionType?: string | null;
};

export type CartItemWithOffer = {
    feeValue?: number;
    ticketingTitle?: string;
    ticketingTimezone?: string;
    date?: string;
    endDate?: string;
    name?: string;
    cartItem?: string;
    availableSeatList?: string;
    ticketPrice?: string;
    offer?: string;
    quantity?: number;
    facialValue?: number;
    feeAmount?: number;
    clusterId?: string;
    applicationId?: string;
    groupKey?: string;
    valid?: boolean;
    facialValueWithoutOffer?: number;
    buyable?: boolean;
};

export type GetAvailableSeatCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
        /**
         * event date id. Example : "/v1/event_dates/1"
         */
        eventDate?: string;
        /**
         * order id. Example : "/v1/orders/1"
         */
        order?: string;
        /**
         * cart id. Example : "/v1/carts/1"
         */
        cart?: string;
        status?: string;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
        seatGroup?: string;
        'seatGroup[]'?: Array<string>;
    };
    url: '/v1/available_seats';
};

export type GetAvailableSeatCollectionResponses = {
    /**
     * AvailableSeat collection
     */
    200: {
        'hydra:member': Array<AvailableSeatJsonldAvailableSeatRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetAvailableSeatCollectionResponse = GetAvailableSeatCollectionResponses[keyof GetAvailableSeatCollectionResponses];

export type PutBulkAvailableSeatCollectionData = {
    /**
     * The updated AvailableSeat resource
     */
    body: {
        'hydra:member': Array<AvailableSeatJsonldAvailableSeatUpdate>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
    path?: never;
    query?: never;
    url: '/v1/available_seats/bulk';
};

export type PutBulkAvailableSeatCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutBulkAvailableSeatCollectionResponses = {
    /**
     * AvailableSeat resource updated
     */
    200: {
        'hydra:member': Array<AvailableSeatJsonldAvailableSeatRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type PutBulkAvailableSeatCollectionResponse = PutBulkAvailableSeatCollectionResponses[keyof PutBulkAvailableSeatCollectionResponses];

export type GetAvailableSeatItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/available_seats/{id}';
};

export type GetAvailableSeatItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetAvailableSeatItemResponses = {
    /**
     * AvailableSeat resource
     */
    200: AvailableSeatJsonldAvailableSeatRead;
};

export type GetAvailableSeatItemResponse = GetAvailableSeatItemResponses[keyof GetAvailableSeatItemResponses];

export type PutAvailableSeatItemData = {
    /**
     * The updated AvailableSeat resource
     */
    body: AvailableSeatJsonldAvailableSeatUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/available_seats/{id}';
};

export type PutAvailableSeatItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutAvailableSeatItemResponses = {
    /**
     * AvailableSeat resource updated
     */
    200: AvailableSeatJsonldAvailableSeatRead;
};

export type PutAvailableSeatItemResponse = PutAvailableSeatItemResponses[keyof PutAvailableSeatItemResponses];

export type GetBookingCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
    };
    url: '/v1/bookings';
};

export type GetBookingCollectionResponses = {
    /**
     * Booking collection
     */
    200: {
        'hydra:member': Array<BookingJsonldBookingRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetBookingCollectionResponse = GetBookingCollectionResponses[keyof GetBookingCollectionResponses];

export type GetBookingItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/bookings/{id}';
};

export type GetBookingItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetBookingItemResponses = {
    /**
     * Booking resource
     */
    200: BookingJsonldBookingRead;
};

export type GetBookingItemResponse = GetBookingItemResponses[keyof GetBookingItemResponses];

export type GetCartCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by id, multiple ids can be separated by a comma
         */
        '@id'?: string;
        type?: string;
        'type[]'?: Array<string>;
        status?: string;
        'status[]'?: Array<string>;
        'order[createdAt]'?: 'asc' | 'desc';
        eventDate?: string;
        eventDateAfter?: string;
        originType?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * Filter cart with accounted for orders when passing "0" as value.
         */
        orderAccountedFor?: boolean;
        /**
         * Filter cart containing given contingent.
         */
        contingent?: string;
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
        /**
         * Filter cart containing given option status.
         */
        optionStatus?: string;
        /**
         * Filter cart with given organization name.
         */
        organizationName?: string;
        /**
         * Filter cart with given contact firstname.
         */
        contactFirstname?: string;
        /**
         * Filter cart with given contact lastname.
         */
        contactLastname?: string;
        /**
         * Show hidden entities
         */
        showHidden?: boolean;
    };
    url: '/v1/carts';
};

export type GetCartCollectionResponses = {
    /**
     * Cart collection
     */
    200: {
        'hydra:member': Array<CartJsonldRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetCartCollectionResponse = GetCartCollectionResponses[keyof GetCartCollectionResponses];

export type PostCartCollectionData = {
    /**
     * The new Cart resource
     */
    body: CartJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/carts';
};

export type PostCartCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostCartCollectionResponses = {
    /**
     * Cart resource created
     */
    201: CartJsonldRead;
};

export type PostCartCollectionResponse = PostCartCollectionResponses[keyof PostCartCollectionResponses];

export type NotifyOptionsCartCollectionData = {
    /**
     * The new Cart resource
     */
    body: CartNotifyOptionsInputJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/carts/notify-options';
};

export type NotifyOptionsCartCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type NotifyOptionsCartCollectionResponses = {
    /**
     * Cart resource created
     */
    201: CartJsonldRead;
};

export type NotifyOptionsCartCollectionResponse = NotifyOptionsCartCollectionResponses[keyof NotifyOptionsCartCollectionResponses];

export type DeleteCartItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/carts/{id}';
};

export type DeleteCartItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteCartItemResponses = {
    /**
     * Cart resource deleted
     */
    204: void;
};

export type DeleteCartItemResponse = DeleteCartItemResponses[keyof DeleteCartItemResponses];

export type GetCartItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/carts/{id}';
};

export type GetCartItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetCartItemResponses = {
    /**
     * Cart resource
     */
    200: CartJsonldRead;
};

export type GetCartItemResponse = GetCartItemResponses[keyof GetCartItemResponses];

export type PutCartItemData = {
    /**
     * The updated Cart resource
     */
    body: CartJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/carts/{id}';
};

export type PutCartItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutCartItemResponses = {
    /**
     * Cart resource updated
     */
    200: CartJsonldRead;
};

export type PutCartItemResponse = PutCartItemResponses[keyof PutCartItemResponses];

export type GetProviderExportedCartDefaultDataCartItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/carts/{id}/provider_exported_cart/{providerName}';
};

export type GetProviderExportedCartDefaultDataCartItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetProviderExportedCartDefaultDataCartItemResponses = {
    /**
     * Cart resource
     */
    200: CartJsonldRead;
};

export type GetProviderExportedCartDefaultDataCartItemResponse = GetProviderExportedCartDefaultDataCartItemResponses[keyof GetProviderExportedCartDefaultDataCartItemResponses];

export type ToggleVisibilityCartActionData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
        /**
         * Action to execute
         */
        action: 'hide' | 'show';
    };
    query?: never;
    url: '/v1/carts/{id}/{action}';
};

export type ToggleVisibilityCartActionErrors = {
    /**
     * Resources of type Cart can not be hidden
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type ToggleVisibilityCartActionResponses = {
    /**
     * Cart resource updated
     */
    200: CartJsonldRead;
    /**
     * Visibility changed
     */
    204: void;
};

export type ToggleVisibilityCartActionResponse = ToggleVisibilityCartActionResponses[keyof ToggleVisibilityCartActionResponses];

export type GetCustomerCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        email?: string;
        'email[]'?: Array<string>;
        phone?: string;
        'phone[]'?: Array<string>;
    };
    url: '/v1/customers';
};

export type GetCustomerCollectionResponses = {
    /**
     * Customer collection
     */
    200: {
        'hydra:member': Array<CustomerJsonldCustomerRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetCustomerCollectionResponse = GetCustomerCollectionResponses[keyof GetCustomerCollectionResponses];

export type PostCustomerCollectionData = {
    /**
     * The new Customer resource
     */
    body: CustomerJsonldCustomerWrite;
    path?: never;
    query?: never;
    url: '/v1/customers';
};

export type PostCustomerCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostCustomerCollectionResponses = {
    /**
     * Customer resource created
     */
    201: CustomerJsonldCustomerRead;
};

export type PostCustomerCollectionResponse = PostCustomerCollectionResponses[keyof PostCustomerCollectionResponses];

export type BulkUpdateCustomerCollectionData = {
    /**
     * The new Customer resource
     */
    body: CustomerBulkUpdateCustomersInputJsonldCustomerWrite;
    path?: never;
    query?: never;
    url: '/v1/customers/bulk';
};

export type BulkUpdateCustomerCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type BulkUpdateCustomerCollectionResponses = {
    /**
     * Customer resource created
     */
    201: CustomerJsonldCustomerRead;
};

export type BulkUpdateCustomerCollectionResponse = BulkUpdateCustomerCollectionResponses[keyof BulkUpdateCustomerCollectionResponses];

export type GetCustomerItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/customers/{id}';
};

export type GetCustomerItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetCustomerItemResponses = {
    /**
     * Customer resource
     */
    200: CustomerJsonldCustomerRead;
};

export type GetCustomerItemResponse = GetCustomerItemResponses[keyof GetCustomerItemResponses];

export type PutCustomerItemData = {
    /**
     * The updated Customer resource
     */
    body: CustomerJsonldCustomerWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/customers/{id}';
};

export type PutCustomerItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutCustomerItemResponses = {
    /**
     * Customer resource updated
     */
    200: CustomerJsonldCustomerRead;
};

export type PutCustomerItemResponse = PutCustomerItemResponses[keyof PutCustomerItemResponses];

export type GetEventDateCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by id, multiple ids can be separated by a comma
         */
        '@id'?: string;
        'order[startDate]'?: 'asc' | 'desc';
        /**
         * Filter event dates for the given seatConfig IRI
         */
        seatConfig?: string;
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
        /**
         * Ticketing slugs. Ex: "my-slug1,my-slug2"
         */
        ticketingSlug?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * Filter if event date is on sale only
         */
        isOnSale?: boolean;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
        /**
         * Selling device type (deprecated)
         * @deprecated
         */
        sellingDeviceType?: string;
        /**
         * event date is before this date
         */
        before?: string;
        /**
         * event date is before this date
         */
        after?: string;
        /**
         * next event date is starting this month. Use `onSaleNextEventDateMonth` instead.
         * @deprecated
         */
        nextEventDateMonth?: string;
        /**
         * next event date is on sale this month
         */
        onSaleNextEventDateMonth?: string;
        /**
         * event date is on sale after this date
         */
        onSaleAfter?: string;
        /**
         * event date is on sale after this date but sale start date hasn't been reached
         */
        onSaleAfterWithoutFutureSales?: string;
        /**
         * event date is on sale before this date
         */
        onSaleBefore?: string;
        /**
         * event date is today, future or future but not today
         */
        eventDay?: 'today' | 'future' | 'future-not-today';
        /**
         * event date start date be null
         */
        dateMaybeNull?: boolean;
        /**
         * Order by start date. event date without start date will be first. Use ASC or DESC
         */
        orderByStartDate?: 'asc' | 'ASC' | 'desc' | 'DESC';
        /**
         * event date status
         */
        status?: string;
        /**
         * list of tag long or short ids
         */
        tag?: string;
        /**
         * organizational unit long or short ids
         */
        organizationalUnit?: string;
        /**
         * filter event dates with once having given cart types
         */
        hasCartWithTypes?: 'cart' | 'option' | 'reservation';
    };
    url: '/v1/event_dates';
};

export type GetEventDateCollectionResponses = {
    /**
     * EventDate collection
     */
    200: {
        'hydra:member': Array<EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetEventDateCollectionResponse = GetEventDateCollectionResponses[keyof GetEventDateCollectionResponses];

export type PostEventDateCollectionData = {
    /**
     * The new EventDate resource
     */
    body: EventDateJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate;
    path?: never;
    query?: never;
    url: '/v1/event_dates';
};

export type PostEventDateCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostEventDateCollectionResponses = {
    /**
     * EventDate resource created
     */
    201: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type PostEventDateCollectionResponse = PostEventDateCollectionResponses[keyof PostEventDateCollectionResponses];

export type DeleteEventDateItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/event_dates/{id}';
};

export type DeleteEventDateItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteEventDateItemResponses = {
    /**
     * EventDate resource deleted
     */
    204: void;
};

export type DeleteEventDateItemResponse = DeleteEventDateItemResponses[keyof DeleteEventDateItemResponses];

export type GetEventDateItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/event_dates/{id}';
};

export type GetEventDateItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetEventDateItemResponses = {
    /**
     * EventDate resource
     */
    200: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type GetEventDateItemResponse = GetEventDateItemResponses[keyof GetEventDateItemResponses];

export type PutEventDateItemData = {
    /**
     * The updated EventDate resource
     */
    body: EventDateJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/event_dates/{id}';
};

export type PutEventDateItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutEventDateItemResponses = {
    /**
     * EventDate resource updated
     */
    200: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type PutEventDateItemResponse = PutEventDateItemResponses[keyof PutEventDateItemResponses];

export type PutBulkEventDateItemData = {
    /**
     * The updated EventDate resource
     */
    body: EventDateJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/event_dates/{id}/bulk';
};

export type PutBulkEventDateItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutBulkEventDateItemResponses = {
    /**
     * EventDate resource updated
     */
    200: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type PutBulkEventDateItemResponse = PutBulkEventDateItemResponses[keyof PutBulkEventDateItemResponses];

export type EventDateCancelEventDateItemData = {
    /**
     * The updated EventDate resource
     */
    body: EventDateEventDateCancelInputJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/event_dates/{id}/cancel';
};

export type EventDateCancelEventDateItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type EventDateCancelEventDateItemResponses = {
    /**
     * EventDate resource updated
     */
    200: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type EventDateCancelEventDateItemResponse = EventDateCancelEventDateItemResponses[keyof EventDateCancelEventDateItemResponses];

export type EventDateCloneEventDateCollectionData = {
    /**
     * The new EventDate resource
     */
    body: EventDateEventDateCloneInputJsonldTaxWriteTicketPriceCreateTicketingCreateTicketingUpdateTicketPriceSeatGroupWriteEventDateCreate;
    path?: never;
    query?: never;
    url: '/v1/event_dates/{id}/clone';
};

export type EventDateCloneEventDateCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type EventDateCloneEventDateCollectionResponses = {
    /**
     * EventDate resource created
     */
    201: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type EventDateCloneEventDateCollectionResponse = EventDateCloneEventDateCollectionResponses[keyof EventDateCloneEventDateCollectionResponses];

export type FindOneForSellingDeviceTypeEventDateItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/event_dates/{id}/sellingDeviceType/{sellingDeviceType}';
};

export type FindOneForSellingDeviceTypeEventDateItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type FindOneForSellingDeviceTypeEventDateItemResponses = {
    /**
     * EventDate resource
     */
    200: EventDateJsonldEventDateReadTaxReadTicketPriceReadEventDateRead;
};

export type FindOneForSellingDeviceTypeEventDateItemResponse = FindOneForSellingDeviceTypeEventDateItemResponses[keyof FindOneForSellingDeviceTypeEventDateItemResponses];

export type GetMinisiteCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        slug?: string;
        'slug[]'?: Array<string>;
        domain?: string;
        'domain[]'?: Array<string>;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
    };
    url: '/v1/minisites';
};

export type GetMinisiteCollectionResponses = {
    /**
     * Minisite collection
     */
    200: {
        'hydra:member': Array<MinisiteJsonldMinisiteReadContractReadTicketingReadMinisiteRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetMinisiteCollectionResponse = GetMinisiteCollectionResponses[keyof GetMinisiteCollectionResponses];

export type PostMinisiteCollectionData = {
    /**
     * The new Minisite resource
     */
    body: MinisiteJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/minisites';
};

export type PostMinisiteCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostMinisiteCollectionResponses = {
    /**
     * Minisite resource created
     */
    201: MinisiteJsonldMinisiteReadContractReadTicketingReadMinisiteRead;
};

export type PostMinisiteCollectionResponse = PostMinisiteCollectionResponses[keyof PostMinisiteCollectionResponses];

export type DeleteMinisiteItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/minisites/{id}';
};

export type DeleteMinisiteItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteMinisiteItemResponses = {
    /**
     * Minisite resource deleted
     */
    204: void;
};

export type DeleteMinisiteItemResponse = DeleteMinisiteItemResponses[keyof DeleteMinisiteItemResponses];

export type GetMinisiteItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/minisites/{id}';
};

export type GetMinisiteItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetMinisiteItemResponses = {
    /**
     * Minisite resource
     */
    200: MinisiteJsonldMinisiteReadContractReadTicketingReadMinisiteRead;
};

export type GetMinisiteItemResponse = GetMinisiteItemResponses[keyof GetMinisiteItemResponses];

export type PutMinisiteItemData = {
    /**
     * The updated Minisite resource
     */
    body: MinisiteJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/minisites/{id}';
};

export type PutMinisiteItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutMinisiteItemResponses = {
    /**
     * Minisite resource updated
     */
    200: MinisiteJsonldMinisiteReadContractReadTicketingReadMinisiteRead;
};

export type PutMinisiteItemResponse = PutMinisiteItemResponses[keyof PutMinisiteItemResponses];

export type GetOrderCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        paymentTransactionName?: string;
        paidAmount?: number;
        /**
         * Use `saleSessionId` instead
         */
        originId?: string;
        /**
         * Filter orders by a sale session
         */
        saleSessionId?: string;
        originType?: string;
        originTypeList?: string;
        'order[createdAt]'?: 'asc' | 'desc';
        'order[id]'?: 'asc' | 'desc';
        status?: string;
        /**
         * parameters to order (id, createdAt or customer)
         */
        order?: string;
        /**
         * list (comma-separated) of event date long or short id
         */
        eventDate?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        sellingDevice?: string;
        'sellingDevice[]'?: Array<string>;
    };
    url: '/v1/orders';
};

export type GetOrderCollectionResponses = {
    /**
     * Order collection
     */
    200: {
        'hydra:member': Array<OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetOrderCollectionResponse = GetOrderCollectionResponses[keyof GetOrderCollectionResponses];

export type PostOrderCollectionData = {
    /**
     * The new Order resource
     */
    body: OrderJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/orders';
};

export type PostOrderCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostOrderCollectionResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type PostOrderCollectionResponse = PostOrderCollectionResponses[keyof PostOrderCollectionResponses];

export type GetOrderItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}';
};

export type GetOrderItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetOrderItemResponses = {
    /**
     * Order resource
     */
    200: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type GetOrderItemResponse = GetOrderItemResponses[keyof GetOrderItemResponses];

export type PutOrderItemData = {
    /**
     * The updated Order resource
     */
    body: OrderJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}';
};

export type PutOrderItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutOrderItemResponses = {
    /**
     * Order resource updated
     */
    200: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type PutOrderItemResponse = PutOrderItemResponses[keyof PutOrderItemResponses];

export type CouponsPdfOrderItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}/coupons';
};

export type CouponsPdfOrderItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type CouponsPdfOrderItemResponses = {
    /**
     * Order resource
     */
    200: OrderOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type CouponsPdfOrderItemResponse = CouponsPdfOrderItemResponses[keyof CouponsPdfOrderItemResponses];

export type GeneratePaymentProviderDataOrderItemData = {
    /**
     * The new Order resource
     */
    body: OrderJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}/generate-payment-provider-data';
};

export type GeneratePaymentProviderDataOrderItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type GeneratePaymentProviderDataOrderItemResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type GeneratePaymentProviderDataOrderItemResponse = GeneratePaymentProviderDataOrderItemResponses[keyof GeneratePaymentProviderDataOrderItemResponses];

export type ProviderInformationsOrderItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}/payment-provider-information';
};

export type ProviderInformationsOrderItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type ProviderInformationsOrderItemResponses = {
    /**
     * Order resource
     */
    200: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type ProviderInformationsOrderItemResponse = ProviderInformationsOrderItemResponses[keyof ProviderInformationsOrderItemResponses];

export type PaymentCallbackOrderCollectionData = {
    /**
     * The new Order resource
     */
    body: OrderJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/orders/{id}/payment_callback';
};

export type PaymentCallbackOrderCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PaymentCallbackOrderCollectionResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type PaymentCallbackOrderCollectionResponse = PaymentCallbackOrderCollectionResponses[keyof PaymentCallbackOrderCollectionResponses];

export type RescheduleOrderItemData = {
    /**
     * The new Order resource
     */
    body: OrderJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}/reschedule';
};

export type RescheduleOrderItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type RescheduleOrderItemResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type RescheduleOrderItemResponse = RescheduleOrderItemResponses[keyof RescheduleOrderItemResponses];

export type ScanOrderItemData = {
    /**
     * The new Order resource
     */
    body: OrderJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}/scans';
};

export type ScanOrderItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type ScanOrderItemResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type ScanOrderItemResponse = ScanOrderItemResponses[keyof ScanOrderItemResponses];

export type SendCouponsByMailOrderCollectionData = {
    /**
     * The new Order resource
     */
    body: OrderSendOrderCouponsByEmailInputJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/orders/{id}/send_coupons_by_mail';
};

export type SendCouponsByMailOrderCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type SendCouponsByMailOrderCollectionResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type SendCouponsByMailOrderCollectionResponse = SendCouponsByMailOrderCollectionResponses[keyof SendCouponsByMailOrderCollectionResponses];

export type SendTicketsCouponsByMailOrderCollectionData = {
    /**
     * The new Order resource
     */
    body: OrderSendOrderTicketsAndCouponsByEmailInputJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/orders/{id}/send_tickets_coupons_by_mail';
};

export type SendTicketsCouponsByMailOrderCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type SendTicketsCouponsByMailOrderCollectionResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type SendTicketsCouponsByMailOrderCollectionResponse = SendTicketsCouponsByMailOrderCollectionResponses[keyof SendTicketsCouponsByMailOrderCollectionResponses];

export type UnscanOrderItemData = {
    /**
     * The new Order resource
     */
    body: OrderJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/orders/{id}/unscan';
};

export type UnscanOrderItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type UnscanOrderItemResponses = {
    /**
     * Order resource created
     */
    201: OrderJsonldOrderReadOrderItemReadOrderOfferItemReadOrderRead;
};

export type UnscanOrderItemResponse = UnscanOrderItemResponses[keyof UnscanOrderItemResponses];

export type GetPaymentCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        order?: string;
        'order[]'?: Array<string>;
    };
    url: '/v1/payments';
};

export type GetPaymentCollectionResponses = {
    /**
     * Payment collection
     */
    200: {
        'hydra:member': Array<PaymentJsonldPaymentRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetPaymentCollectionResponse = GetPaymentCollectionResponses[keyof GetPaymentCollectionResponses];

export type PostPaymentCollectionData = {
    /**
     * The new Payment resource
     */
    body: PaymentJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/payments';
};

export type PostPaymentCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostPaymentCollectionResponses = {
    /**
     * Payment resource created
     */
    201: PaymentJsonldPaymentRead;
};

export type PostPaymentCollectionResponse = PostPaymentCollectionResponses[keyof PostPaymentCollectionResponses];

export type GetPaymentItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/payments/{id}';
};

export type GetPaymentItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetPaymentItemResponses = {
    /**
     * Payment resource
     */
    200: PaymentJsonldPaymentRead;
};

export type GetPaymentItemResponse = GetPaymentItemResponses[keyof GetPaymentItemResponses];

export type PutPaymentItemData = {
    /**
     * The updated Payment resource
     */
    body: PaymentJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/payments/{id}';
};

export type PutPaymentItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutPaymentItemResponses = {
    /**
     * Payment resource updated
     */
    200: PaymentJsonldPaymentRead;
};

export type PutPaymentItemResponse = PutPaymentItemResponses[keyof PutPaymentItemResponses];

export type PutMetadataPaymentItemData = {
    /**
     * The updated Payment resource
     */
    body: PaymentJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/payments/{id}/provider-metadata';
};

export type PutMetadataPaymentItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutMetadataPaymentItemResponses = {
    /**
     * Payment resource updated
     */
    200: PaymentJsonldPaymentRead;
};

export type PutMetadataPaymentItemResponse = PutMetadataPaymentItemResponses[keyof PutMetadataPaymentItemResponses];

export type GetRefundCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
    };
    url: '/v1/refunds';
};

export type GetRefundCollectionResponses = {
    /**
     * Refund collection
     */
    200: {
        'hydra:member': Array<RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetRefundCollectionResponse = GetRefundCollectionResponses[keyof GetRefundCollectionResponses];

export type PostRefundCollectionData = {
    /**
     * The new Refund resource
     */
    body: RefundJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/refunds';
};

export type PostRefundCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostRefundCollectionResponses = {
    /**
     * Refund resource created
     */
    201: RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead;
};

export type PostRefundCollectionResponse = PostRefundCollectionResponses[keyof PostRefundCollectionResponses];

export type GetRefundItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/refunds/{id}';
};

export type GetRefundItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetRefundItemResponses = {
    /**
     * Refund resource
     */
    200: RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead;
};

export type GetRefundItemResponse = GetRefundItemResponses[keyof GetRefundItemResponses];

export type PutRefundItemData = {
    /**
     * The updated Refund resource
     */
    body: RefundJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/refunds/{id}';
};

export type PutRefundItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutRefundItemResponses = {
    /**
     * Refund resource updated
     */
    200: RefundJsonldRefundReadRefundOrderItemReadTransactionReadRefundRead;
};

export type PutRefundItemResponse = PutRefundItemResponses[keyof PutRefundItemResponses];

export type GetScanCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter scan before parameter. Ex: "2019-01-01"
         */
        after?: string;
        /**
         * Filter scan before parameter. Ex: "2019-01-01"
         */
        before?: string;
        /**
         * Scan status
         */
        status?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * EventDate id. Ex: "/v1/event_dates/1,/v1/event_dates/2"
         */
        eventDate?: string;
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
    };
    url: '/v1/scans';
};

export type GetScanCollectionResponses = {
    /**
     * Scan collection
     */
    200: {
        'hydra:member': Array<ScanJsonldScanRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetScanCollectionResponse = GetScanCollectionResponses[keyof GetScanCollectionResponses];

export type GetSeasonCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        'order[startDate]'?: 'asc' | 'desc';
    };
    url: '/v1/seasons';
};

export type GetSeasonCollectionResponses = {
    /**
     * Season collection
     */
    200: {
        'hydra:member': Array<SeasonJsonldSeasonRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetSeasonCollectionResponse = GetSeasonCollectionResponses[keyof GetSeasonCollectionResponses];

export type PostSeasonCollectionData = {
    /**
     * The new Season resource
     */
    body: SeasonJsonldSeasonCreate;
    path?: never;
    query?: never;
    url: '/v1/seasons';
};

export type PostSeasonCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostSeasonCollectionResponses = {
    /**
     * Season resource created
     */
    201: SeasonJsonldSeasonRead;
};

export type PostSeasonCollectionResponse = PostSeasonCollectionResponses[keyof PostSeasonCollectionResponses];

export type DeleteSeasonItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/seasons/{id}';
};

export type DeleteSeasonItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteSeasonItemResponses = {
    /**
     * Season resource deleted
     */
    204: void;
};

export type DeleteSeasonItemResponse = DeleteSeasonItemResponses[keyof DeleteSeasonItemResponses];

export type GetSeasonItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/seasons/{id}';
};

export type GetSeasonItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetSeasonItemResponses = {
    /**
     * Season resource
     */
    200: SeasonJsonldSeasonRead;
};

export type GetSeasonItemResponse = GetSeasonItemResponses[keyof GetSeasonItemResponses];

export type PutSeasonItemData = {
    /**
     * The updated Season resource
     */
    body: SeasonJsonldSeasonUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/seasons/{id}';
};

export type PutSeasonItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutSeasonItemResponses = {
    /**
     * Season resource updated
     */
    200: SeasonJsonldSeasonRead;
};

export type PutSeasonItemResponse = PutSeasonItemResponses[keyof PutSeasonItemResponses];

export type GetSeatCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * filter by availableSeatList.eventDate
         */
        availableSeatListEventDate?: string;
        /**
         * filter by availableSeatModelList.logicalSeatConfig
         */
        availableSeatModelListLogicalSeatConfig?: string;
        seatConfig?: string;
        'seatConfig[]'?: Array<string>;
    };
    url: '/v1/seats';
};

export type GetSeatCollectionResponses = {
    /**
     * Seat collection
     */
    200: {
        'hydra:member': Array<SeatJsonldSeatRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetSeatCollectionResponse = GetSeatCollectionResponses[keyof GetSeatCollectionResponses];

export type PostSeatCollectionData = {
    /**
     * The new Seat resource
     */
    body: SeatJsonldSeatCreate;
    path?: never;
    query?: never;
    url: '/v1/seats';
};

export type PostSeatCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostSeatCollectionResponses = {
    /**
     * Seat resource created
     */
    201: SeatJsonldSeatRead;
};

export type PostSeatCollectionResponse = PostSeatCollectionResponses[keyof PostSeatCollectionResponses];

export type GetSeatItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/seats/{id}';
};

export type GetSeatItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetSeatItemResponses = {
    /**
     * Seat resource
     */
    200: SeatJsonldSeatRead;
};

export type GetSeatItemResponse = GetSeatItemResponses[keyof GetSeatItemResponses];

export type PutSeatItemData = {
    /**
     * The updated Seat resource
     */
    body: SeatJsonldSeatUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/seats/{id}';
};

export type PutSeatItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutSeatItemResponses = {
    /**
     * Seat resource updated
     */
    200: SeatJsonldSeatRead;
};

export type PutSeatItemResponse = PutSeatItemResponses[keyof PutSeatItemResponses];

export type GetTicketPriceGroupCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * organizational unit long or short ids
         */
        organizationalUnit?: string;
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
        'organizationalUnit[]'?: Array<string>;
        /**
         * Show hidden entities
         */
        showHidden?: boolean;
    };
    url: '/v1/ticket_price_groups';
};

export type GetTicketPriceGroupCollectionResponses = {
    /**
     * TicketPriceGroup collection
     */
    200: {
        'hydra:member': Array<TicketPriceGroupJsonldTicketPriceGroupRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetTicketPriceGroupCollectionResponse = GetTicketPriceGroupCollectionResponses[keyof GetTicketPriceGroupCollectionResponses];

export type PostTicketPriceGroupCollectionData = {
    /**
     * The new TicketPriceGroup resource
     */
    body: TicketPriceGroupJsonldTicketPriceGroupCreate;
    path?: never;
    query?: never;
    url: '/v1/ticket_price_groups';
};

export type PostTicketPriceGroupCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostTicketPriceGroupCollectionResponses = {
    /**
     * TicketPriceGroup resource created
     */
    201: TicketPriceGroupJsonldTicketPriceGroupRead;
};

export type PostTicketPriceGroupCollectionResponse = PostTicketPriceGroupCollectionResponses[keyof PostTicketPriceGroupCollectionResponses];

export type DeleteTicketPriceGroupItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_price_groups/{id}';
};

export type DeleteTicketPriceGroupItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteTicketPriceGroupItemResponses = {
    /**
     * TicketPriceGroup resource deleted
     */
    204: void;
};

export type DeleteTicketPriceGroupItemResponse = DeleteTicketPriceGroupItemResponses[keyof DeleteTicketPriceGroupItemResponses];

export type GetTicketPriceGroupItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_price_groups/{id}';
};

export type GetTicketPriceGroupItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetTicketPriceGroupItemResponses = {
    /**
     * TicketPriceGroup resource
     */
    200: TicketPriceGroupJsonldTicketPriceGroupRead;
};

export type GetTicketPriceGroupItemResponse = GetTicketPriceGroupItemResponses[keyof GetTicketPriceGroupItemResponses];

export type PutTicketPriceGroupItemData = {
    /**
     * The updated TicketPriceGroup resource
     */
    body: TicketPriceGroupJsonldTicketPriceGroupUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_price_groups/{id}';
};

export type PutTicketPriceGroupItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutTicketPriceGroupItemResponses = {
    /**
     * TicketPriceGroup resource updated
     */
    200: TicketPriceGroupJsonldTicketPriceGroupRead;
};

export type PutTicketPriceGroupItemResponse = PutTicketPriceGroupItemResponses[keyof PutTicketPriceGroupItemResponses];

export type ToggleVisibilityTicketPriceGroupActionData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
        /**
         * Action to execute
         */
        action: 'hide' | 'show';
    };
    query?: never;
    url: '/v1/ticket_price_groups/{id}/{action}';
};

export type ToggleVisibilityTicketPriceGroupActionErrors = {
    /**
     * Resources of type TicketPriceGroup can not be hidden
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type ToggleVisibilityTicketPriceGroupActionResponses = {
    /**
     * TicketPriceGroup resource updated
     */
    200: TicketPriceGroupJsonldTicketPriceGroupRead;
    /**
     * Visibility changed
     */
    204: void;
};

export type ToggleVisibilityTicketPriceGroupActionResponse = ToggleVisibilityTicketPriceGroupActionResponses[keyof ToggleVisibilityTicketPriceGroupActionResponses];

export type GetTicketPriceCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        'order[manualSort]'?: 'asc' | 'desc';
        'order[eventDate.startDate]'?: 'asc' | 'desc';
        'order[name]'?: 'asc' | 'desc';
        'order[facialValue]'?: 'asc' | 'desc';
        type?: string;
        'type[]'?: Array<string>;
        name?: string;
        'name[]'?: Array<string>;
        eventDate?: string;
        'eventDate[]'?: Array<string>;
        behaviour?: string;
        'behaviour[]'?: Array<string>;
        /**
         * Filter by id, multiple ids can be separated by a comma
         */
        '@id'?: string;
        /**
         * Filter ticketprice linked to given offer rule.
         */
        offerRule?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        favorite?: boolean;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
        /**
         * Use `sellingDevice` instead
         * @deprecated
         */
        sellingDeviceType?: 'mapado_www' | 'minisite' | 'desk' | 'none';
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
        /**
         * A list of ticketing slug. Example: "some-event,another-event"
         */
        ticketingSlug?: string;
        /**
         * Deprecated, use `ticketingIdList` or `ticketingSlugList` instead
         * @deprecated
         */
        activityUuid?: 'mapado_www' | 'minisite' | 'desk' | 'none';
        hash?: string;
        /**
         * temporary / beta query parameter. Do not use if you do not work at Mapado. This may be removed in the future without notice.
         */
        groupByHash?: boolean;
        hasBehaviour?: boolean;
        /**
         * An ISO date
         */
        eventDateStartDateBefore?: string;
        /**
         * An ISO date
         */
        eventDateStartDateAfter?: string;
        /**
         * A list of venue id. Example: "/v1/venues/1,/v1/venues/2"
         */
        venue?: string;
        offerRuleForTicketPricePicker?: string;
        couponCode?: string;
        /**
         * organizational unit long or short ids
         */
        organizationalUnit?: string;
        visible?: boolean;
        willGenerateTicket?: boolean;
        'saleStartDate[before]'?: string;
        'saleStartDate[strictly_before]'?: string;
        'saleStartDate[after]'?: string;
        'saleStartDate[strictly_after]'?: string;
        'saleEndDate[before]'?: string;
        'saleEndDate[strictly_before]'?: string;
        'saleEndDate[after]'?: string;
        'saleEndDate[strictly_after]'?: string;
        ticketPriceGroup?: string;
        ticketPricesWithNoGroup?: string;
        ticketPriceGroupIsHidden?: boolean;
        /**
         * Show hidden entities
         */
        showHidden?: boolean;
    };
    url: '/v1/ticket_prices';
};

export type GetTicketPriceCollectionResponses = {
    /**
     * TicketPrice collection
     */
    200: {
        'hydra:member': Array<TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetTicketPriceCollectionResponse = GetTicketPriceCollectionResponses[keyof GetTicketPriceCollectionResponses];

export type PostTicketPriceCollectionData = {
    /**
     * The new TicketPrice resource
     */
    body: TicketPriceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate;
    path?: never;
    query?: never;
    url: '/v1/ticket_prices';
};

export type PostTicketPriceCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostTicketPriceCollectionResponses = {
    /**
     * TicketPrice resource created
     */
    201: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
};

export type PostTicketPriceCollectionResponse = PostTicketPriceCollectionResponses[keyof PostTicketPriceCollectionResponses];

export type CheckVatRateTicketPriceCollectionData = {
    /**
     * The new TicketPrice resource
     */
    body: TicketPriceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate;
    path?: never;
    query?: never;
    url: '/v1/ticket_prices/check-vat-rate';
};

export type CheckVatRateTicketPriceCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type CheckVatRateTicketPriceCollectionResponses = {
    /**
     * TicketPrice resource created
     */
    201: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
};

export type CheckVatRateTicketPriceCollectionResponse = CheckVatRateTicketPriceCollectionResponses[keyof CheckVatRateTicketPriceCollectionResponses];

export type FrequentlyUsedTicketPriceCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        'order[manualSort]'?: 'asc' | 'desc';
        'order[eventDate.startDate]'?: 'asc' | 'desc';
        'order[name]'?: 'asc' | 'desc';
        'order[facialValue]'?: 'asc' | 'desc';
        type?: string;
        'type[]'?: Array<string>;
        name?: string;
        'name[]'?: Array<string>;
        eventDate?: string;
        'eventDate[]'?: Array<string>;
        behaviour?: string;
        'behaviour[]'?: Array<string>;
        /**
         * Filter by id, multiple ids can be separated by a comma
         */
        '@id'?: string;
        /**
         * Filter ticketprice linked to given offer rule.
         */
        offerRule?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        favorite?: boolean;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
        /**
         * Use `sellingDevice` instead
         * @deprecated
         */
        sellingDeviceType?: 'mapado_www' | 'minisite' | 'desk' | 'none';
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
        /**
         * A list of ticketing slug. Example: "some-event,another-event"
         */
        ticketingSlug?: string;
        /**
         * Deprecated, use `ticketingIdList` or `ticketingSlugList` instead
         * @deprecated
         */
        activityUuid?: 'mapado_www' | 'minisite' | 'desk' | 'none';
        hash?: string;
        /**
         * temporary / beta query parameter. Do not use if you do not work at Mapado. This may be removed in the future without notice.
         */
        groupByHash?: boolean;
        hasBehaviour?: boolean;
        /**
         * An ISO date
         */
        eventDateStartDateBefore?: string;
        /**
         * An ISO date
         */
        eventDateStartDateAfter?: string;
        /**
         * A list of venue id. Example: "/v1/venues/1,/v1/venues/2"
         */
        venue?: string;
        offerRuleForTicketPricePicker?: string;
        couponCode?: string;
        /**
         * organizational unit long or short ids
         */
        organizationalUnit?: string;
        visible?: boolean;
        willGenerateTicket?: boolean;
        'saleStartDate[before]'?: string;
        'saleStartDate[strictly_before]'?: string;
        'saleStartDate[after]'?: string;
        'saleStartDate[strictly_after]'?: string;
        'saleEndDate[before]'?: string;
        'saleEndDate[strictly_before]'?: string;
        'saleEndDate[after]'?: string;
        'saleEndDate[strictly_after]'?: string;
        ticketPriceGroup?: string;
        ticketPricesWithNoGroup?: string;
        ticketPriceGroupIsHidden?: boolean;
    };
    url: '/v1/ticket_prices/frequently-used';
};

export type FrequentlyUsedTicketPriceCollectionResponses = {
    /**
     * TicketPrice collection
     */
    200: {
        'hydra:member': Array<TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type FrequentlyUsedTicketPriceCollectionResponse = FrequentlyUsedTicketPriceCollectionResponses[keyof FrequentlyUsedTicketPriceCollectionResponses];

export type DeleteTicketPriceItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_prices/{id}';
};

export type DeleteTicketPriceItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteTicketPriceItemResponses = {
    /**
     * TicketPrice resource deleted
     */
    204: void;
};

export type DeleteTicketPriceItemResponse = DeleteTicketPriceItemResponses[keyof DeleteTicketPriceItemResponses];

export type GetTicketPriceItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_prices/{id}';
};

export type GetTicketPriceItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetTicketPriceItemResponses = {
    /**
     * TicketPrice resource
     */
    200: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
};

export type GetTicketPriceItemResponse = GetTicketPriceItemResponses[keyof GetTicketPriceItemResponses];

export type PutTicketPriceItemData = {
    /**
     * The updated TicketPrice resource
     */
    body: TicketPriceJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_prices/{id}';
};

export type PutTicketPriceItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutTicketPriceItemResponses = {
    /**
     * TicketPrice resource updated
     */
    200: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
};

export type PutTicketPriceItemResponse = PutTicketPriceItemResponses[keyof PutTicketPriceItemResponses];

export type CheckVatRateForTicketPriceTicketPriceItemData = {
    /**
     * The updated TicketPrice resource
     */
    body: TicketPriceJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticket_prices/{id}/check-vat-rate';
};

export type CheckVatRateForTicketPriceTicketPriceItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type CheckVatRateForTicketPriceTicketPriceItemResponses = {
    /**
     * TicketPrice resource updated
     */
    200: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
};

export type CheckVatRateForTicketPriceTicketPriceItemResponse = CheckVatRateForTicketPriceTicketPriceItemResponses[keyof CheckVatRateForTicketPriceTicketPriceItemResponses];

export type CloneTicketPriceCollectionData = {
    /**
     * The new TicketPrice resource
     */
    body: TicketPriceJsonldHasVatWriteTaxWriteSellingDeviceWriteTicketPriceSeatGroupWriteTicketPriceGroupCreateTicketPriceGroupUpdateTicketPriceCreate;
    path?: never;
    query?: never;
    url: '/v1/ticket_prices/{id}/clone';
};

export type CloneTicketPriceCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type CloneTicketPriceCollectionResponses = {
    /**
     * TicketPrice resource created
     */
    201: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
};

export type CloneTicketPriceCollectionResponse = CloneTicketPriceCollectionResponses[keyof CloneTicketPriceCollectionResponses];

export type ToggleVisibilityTicketPriceActionData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
        /**
         * Action to execute
         */
        action: 'hide' | 'show';
    };
    query?: never;
    url: '/v1/ticket_prices/{id}/{action}';
};

export type ToggleVisibilityTicketPriceActionErrors = {
    /**
     * Resources of type TicketPrice can not be hidden
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type ToggleVisibilityTicketPriceActionResponses = {
    /**
     * TicketPrice resource updated
     */
    200: TicketPriceJsonldTicketPriceReadEventDateReadHasVatReadTaxReadTicketPriceGroupReadTicketPriceRead;
    /**
     * Visibility changed
     */
    204: void;
};

export type ToggleVisibilityTicketPriceActionResponse = ToggleVisibilityTicketPriceActionResponses[keyof ToggleVisibilityTicketPriceActionResponses];

export type GetTicketingCategoryCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        'order[position]'?: 'asc' | 'desc';
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
    };
    url: '/v1/ticketing_categories';
};

export type GetTicketingCategoryCollectionResponses = {
    /**
     * TicketingCategory collection
     */
    200: {
        'hydra:member': Array<TicketingCategoryJsonldTicketingCategoryRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetTicketingCategoryCollectionResponse = GetTicketingCategoryCollectionResponses[keyof GetTicketingCategoryCollectionResponses];

export type PostTicketingCategoryCollectionData = {
    /**
     * The new TicketingCategory resource
     */
    body: TicketingCategoryJsonldTicketingCategoryCreate;
    path?: never;
    query?: never;
    url: '/v1/ticketing_categories';
};

export type PostTicketingCategoryCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostTicketingCategoryCollectionResponses = {
    /**
     * TicketingCategory resource created
     */
    201: TicketingCategoryJsonldTicketingCategoryRead;
};

export type PostTicketingCategoryCollectionResponse = PostTicketingCategoryCollectionResponses[keyof PostTicketingCategoryCollectionResponses];

export type DeleteTicketingCategoryItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketing_categories/{id}';
};

export type DeleteTicketingCategoryItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteTicketingCategoryItemResponses = {
    /**
     * TicketingCategory resource deleted
     */
    204: void;
};

export type DeleteTicketingCategoryItemResponse = DeleteTicketingCategoryItemResponses[keyof DeleteTicketingCategoryItemResponses];

export type GetTicketingCategoryItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketing_categories/{id}';
};

export type GetTicketingCategoryItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetTicketingCategoryItemResponses = {
    /**
     * TicketingCategory resource
     */
    200: TicketingCategoryJsonldTicketingCategoryRead;
};

export type GetTicketingCategoryItemResponse = GetTicketingCategoryItemResponses[keyof GetTicketingCategoryItemResponses];

export type PutTicketingCategoryItemData = {
    /**
     * The updated TicketingCategory resource
     */
    body: TicketingCategoryJsonldTicketingCategoryUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketing_categories/{id}';
};

export type PutTicketingCategoryItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutTicketingCategoryItemResponses = {
    /**
     * TicketingCategory resource updated
     */
    200: TicketingCategoryJsonldTicketingCategoryRead;
};

export type PutTicketingCategoryItemResponse = PutTicketingCategoryItemResponses[keyof PutTicketingCategoryItemResponses];

export type GetTicketingCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Deprecated, use `slug` or `@id` filter instead
         * @deprecated
         */
        activityUuid?: string;
        /**
         * Deprecated, use `sellingDevice` instead
         * @deprecated
         */
        minisite?: string;
        /**
         * Filter by activity slug
         */
        slug?: string;
        /**
         * Filter ticketing that have at least one ticket price enabled on a non-closed event date.
         */
        hasTicketPriceEnabled?: boolean;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * filter by order id
         */
        order?: string;
        /**
         * Filter ticketing that have an event date after the given date
         */
        after?: string;
        /**
         * Filter ticketing that have an event date before the given date
         */
        before?: string;
        /**
         * Filter ticketing that are on sale after the given date (sale date might differ from start and end date)
         */
        onSaleAfter?: string;
        /**
         * If there is a filter on date, include ticketing that do not have an event date, but without start date. Default is false.
         */
        dateMaybeNull?: boolean;
        /**
         * Deprecated, use `dateMaybeNull` instead.
         * @deprecated
         */
        eventDateMaybeNull?: boolean;
        /**
         * Filter ticketing by event date status. Multiple values can be provided separated by a comma.
         */
        eventDateStatus?: string;
        /**
         * Sort ticketing by first event date. Ticketing that do not have any date are at the start of the list.
         */
        orderByEventDateStartDate?: string;
        /**
         * Secondary sort, if there is a manual position on the ticketing.
         */
        orderByPosition?: string;
        /**
         * Filter only ticketing that have an event date with status "opened". Use `hasOpenedEventDate=opened` instead.
         * @deprecated
         */
        hasOpenedEventDate?: boolean;
        /**
         * Deprecated, use `before` instead
         * @deprecated
         */
        hasEventDateFuture?: boolean;
        /**
         * Deprecated, use `after` instead
         * @deprecated
         */
        hasEventDatePast?: boolean;
        /**
         * Sort ticketing by availability status alphabetically
         */
        orderByAvailabilityStatus?: string;
        'order[title]'?: 'asc' | 'desc';
        isOnSale?: boolean;
        'isOnSale[]'?: Array<boolean>;
        type?: string;
        'type[]'?: Array<string>;
        ticketingCategory?: string;
        'ticketingCategory[]'?: Array<string>;
        seatConfig?: string;
        /**
         * Search ticketing by query string
         */
        q?: string;
        /**
         * Filter by id, multiple ids can be separated by a comma
         */
        '@id'?: string;
        /**
         * list of tag long or short ids
         */
        tag?: string;
        /**
         * organizational unit long or short ids
         */
        organizationalUnit?: string;
        /**
         * Availability status to exclude
         */
        excludeAvailabilityStatus?: string;
        /**
         * Filter by availability status
         */
        availabilityStatus?: string;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
    };
    url: '/v1/ticketings';
};

export type GetTicketingCollectionResponses = {
    /**
     * Ticketing collection
     */
    200: {
        'hydra:member': Array<TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetTicketingCollectionResponse = GetTicketingCollectionResponses[keyof GetTicketingCollectionResponses];

export type PostTicketingCollectionData = {
    /**
     * The new Ticketing resource
     */
    body: TicketingJsonldEventDateCreateTagCreateTicketingCreate;
    path?: never;
    query?: never;
    url: '/v1/ticketings';
};

export type PostTicketingCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostTicketingCollectionResponses = {
    /**
     * Ticketing resource created
     */
    201: TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead;
};

export type PostTicketingCollectionResponse = PostTicketingCollectionResponses[keyof PostTicketingCollectionResponses];

export type DeleteTicketingItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketings/{id}';
};

export type DeleteTicketingItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteTicketingItemResponses = {
    /**
     * Ticketing resource deleted
     */
    204: void;
};

export type DeleteTicketingItemResponse = DeleteTicketingItemResponses[keyof DeleteTicketingItemResponses];

export type GetTicketingItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketings/{id}';
};

export type GetTicketingItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetTicketingItemResponses = {
    /**
     * Ticketing resource
     */
    200: TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead;
};

export type GetTicketingItemResponse = GetTicketingItemResponses[keyof GetTicketingItemResponses];

export type PutTicketingItemData = {
    /**
     * The updated Ticketing resource
     */
    body: TicketingJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketings/{id}';
};

export type PutTicketingItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutTicketingItemResponses = {
    /**
     * Ticketing resource updated
     */
    200: TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead;
};

export type PutTicketingItemResponse = PutTicketingItemResponses[keyof PutTicketingItemResponses];

export type CloseSalesTicketingItemData = {
    /**
     * The new Ticketing resource
     */
    body: TicketingJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketings/{id}/close-sales';
};

export type CloseSalesTicketingItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type CloseSalesTicketingItemResponses = {
    /**
     * Ticketing resource created
     */
    201: TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead;
};

export type CloseSalesTicketingItemResponse = CloseSalesTicketingItemResponses[keyof CloseSalesTicketingItemResponses];

export type OpenSalesTicketingItemData = {
    /**
     * The new Ticketing resource
     */
    body: TicketingJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketings/{id}/open-sales';
};

export type OpenSalesTicketingItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type OpenSalesTicketingItemResponses = {
    /**
     * Ticketing resource created
     */
    201: TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead;
};

export type OpenSalesTicketingItemResponse = OpenSalesTicketingItemResponses[keyof OpenSalesTicketingItemResponses];

export type SuspendSalesTicketingItemData = {
    /**
     * The new Ticketing resource
     */
    body: TicketingJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/ticketings/{id}/suspend-sales';
};

export type SuspendSalesTicketingItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type SuspendSalesTicketingItemResponses = {
    /**
     * Ticketing resource created
     */
    201: TicketingJsonldTicketingReadEventDateReadMinisiteReadTicketingRead;
};

export type SuspendSalesTicketingItemResponse = SuspendSalesTicketingItemResponses[keyof SuspendSalesTicketingItemResponses];

export type GetTicketCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        ticketPrice?: string;
        'ticketPrice[]'?: Array<string>;
        eventDate?: string;
        ticketing?: string;
        /**
         * Filter tickets that have been updated since this date
         */
        updatedSince?: string;
        status?: string;
        ticketPriceType?: string;
        eventEndDate?: string;
        eventStartDate?: string;
        eventDateStatus?: string;
        barcode?: string;
        mayBeMasterTicketBarcode?: boolean;
        order?: string;
        'order[boughtAt]'?: 'asc' | 'desc';
        /**
         * Filter by authenticated user: use 'customer'
         */
        user?: string;
        /**
         * Filter tickets by validity
         */
        isValid?: boolean;
        /**
         * single or list of checkpoint long or short ids
         */
        checkpoint?: string;
        /**
         * fetch valid or invalid tickets for given checkpoint. Example : isValidForCheckpoint[/v1/checkpoints/1]=true
         */
        isValidForCheckpoint?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * single or list of ticket long or short ids
         */
        id?: string;
        /**
         * Filter by selling devices
         */
        sellingDevice?: string;
    };
    url: '/v1/tickets';
};

export type GetTicketCollectionResponses = {
    /**
     * Ticket collection
     */
    200: {
        'hydra:member': Array<TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetTicketCollectionResponse = GetTicketCollectionResponses[keyof GetTicketCollectionResponses];

export type PostTicketCollectionData = {
    /**
     * The new Ticket resource
     */
    body: TicketJsonldWrite;
    path?: never;
    query?: never;
    url: '/v1/tickets';
};

export type PostTicketCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostTicketCollectionResponses = {
    /**
     * Ticket resource created
     */
    201: TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead;
};

export type PostTicketCollectionResponse = PostTicketCollectionResponses[keyof PostTicketCollectionResponses];

export type PostBarcodeScanCollectionData = {
    /**
     * The new Scan resource
     */
    body: ScanJsonldScanWrite;
    path?: never;
    query?: never;
    url: '/v1/tickets/barcode/{barcode}/scans';
};

export type PostBarcodeScanCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostBarcodeScanCollectionResponses = {
    /**
     * Scan resource created
     */
    201: ScanJsonldScanRead;
};

export type PostBarcodeScanCollectionResponse = PostBarcodeScanCollectionResponses[keyof PostBarcodeScanCollectionResponses];

export type PutBulkTicketCollectionData = {
    /**
     * The updated Ticket resource
     */
    body: {
        'hydra:member': Array<TicketJsonldWrite>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
    path?: never;
    query?: never;
    url: '/v1/tickets/bulk';
};

export type PutBulkTicketCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutBulkTicketCollectionResponses = {
    /**
     * Ticket resource updated
     */
    200: {
        'hydra:member': Array<TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type PutBulkTicketCollectionResponse = PutBulkTicketCollectionResponses[keyof PutBulkTicketCollectionResponses];

export type GetTicketItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/tickets/{id}';
};

export type GetTicketItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetTicketItemResponses = {
    /**
     * Ticket resource
     */
    200: TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead;
};

export type GetTicketItemResponse = GetTicketItemResponses[keyof GetTicketItemResponses];

export type PutTicketItemData = {
    /**
     * The updated Ticket resource
     */
    body: TicketJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/tickets/{id}';
};

export type PutTicketItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutTicketItemResponses = {
    /**
     * Ticket resource updated
     */
    200: TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead;
};

export type PutTicketItemResponse = PutTicketItemResponses[keyof PutTicketItemResponses];

export type UnscanTicketItemData = {
    /**
     * The updated Ticket resource
     */
    body: TicketJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/tickets/{id}/unscan';
};

export type UnscanTicketItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type UnscanTicketItemResponses = {
    /**
     * Ticket resource updated
     */
    200: TicketJsonldTicketReadHasVatReadTicketPriceReadEventDateReadTicketRead;
};

export type UnscanTicketItemResponse = UnscanTicketItemResponses[keyof UnscanTicketItemResponses];

export type GetByTicketScanCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter scan before parameter. Ex: "2019-01-01"
         */
        after?: string;
        /**
         * Filter scan before parameter. Ex: "2019-01-01"
         */
        before?: string;
        /**
         * Scan status
         */
        status?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * EventDate id. Ex: "/v1/event_dates/1,/v1/event_dates/2"
         */
        eventDate?: string;
        /**
         * Ticketing id. Ex: "/v1/ticketings/1,/v1/ticketings/2"
         */
        ticketing?: string;
    };
    url: '/v1/tickets/{ticketId}/scans';
};

export type GetByTicketScanCollectionResponses = {
    /**
     * Scan collection
     */
    200: {
        'hydra:member': Array<ScanJsonldScanRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetByTicketScanCollectionResponse = GetByTicketScanCollectionResponses[keyof GetByTicketScanCollectionResponses];

export type PostScanCollectionData = {
    /**
     * The new Scan resource
     */
    body: ScanJsonldScanWrite;
    path?: never;
    query?: never;
    url: '/v1/tickets/{ticketId}/scans';
};

export type PostScanCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostScanCollectionResponses = {
    /**
     * Scan resource created
     */
    201: ScanJsonldScanRead;
};

export type PostScanCollectionResponse = PostScanCollectionResponses[keyof PostScanCollectionResponses];

export type GetScanItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/tickets/{ticketId}/scans/{id}';
};

export type GetScanItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetScanItemResponses = {
    /**
     * Scan resource
     */
    200: ScanJsonldScanRead;
};

export type GetScanItemResponse = GetScanItemResponses[keyof GetScanItemResponses];

export type GetVenueCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by id, multiple ids can be separated by a comma
         */
        '@id'?: string;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * Show hidden entities
         */
        showHidden?: boolean;
    };
    url: '/v1/venues';
};

export type GetVenueCollectionResponses = {
    /**
     * Venue collection
     */
    200: {
        'hydra:member': Array<VenueJsonldVenueRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetVenueCollectionResponse = GetVenueCollectionResponses[keyof GetVenueCollectionResponses];

export type PostVenueCollectionData = {
    /**
     * The new Venue resource
     */
    body: VenueJsonldVenueCreate;
    path?: never;
    query?: never;
    url: '/v1/venues';
};

export type PostVenueCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostVenueCollectionResponses = {
    /**
     * Venue resource created
     */
    201: VenueJsonldVenueRead;
};

export type PostVenueCollectionResponse = PostVenueCollectionResponses[keyof PostVenueCollectionResponses];

export type DeleteVenueItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/venues/{id}';
};

export type DeleteVenueItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type DeleteVenueItemResponses = {
    /**
     * Venue resource deleted
     */
    204: void;
};

export type DeleteVenueItemResponse = DeleteVenueItemResponses[keyof DeleteVenueItemResponses];

export type GetVenueItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/venues/{id}';
};

export type GetVenueItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetVenueItemResponses = {
    /**
     * Venue resource
     */
    200: VenueJsonldVenueRead;
};

export type GetVenueItemResponse = GetVenueItemResponses[keyof GetVenueItemResponses];

export type PutVenueItemData = {
    /**
     * The updated Venue resource
     */
    body: VenueJsonldWrite;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/venues/{id}';
};

export type PutVenueItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutVenueItemResponses = {
    /**
     * Venue resource updated
     */
    200: VenueJsonldVenueRead;
};

export type PutVenueItemResponse = PutVenueItemResponses[keyof PutVenueItemResponses];

export type ToggleVisibilityVenueActionData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
        /**
         * Action to execute
         */
        action: 'hide' | 'show';
    };
    query?: never;
    url: '/v1/venues/{id}/{action}';
};

export type ToggleVisibilityVenueActionErrors = {
    /**
     * Resources of type Venue can not be hidden
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type ToggleVisibilityVenueActionResponses = {
    /**
     * Venue resource updated
     */
    200: VenueJsonldVenueRead;
    /**
     * Visibility changed
     */
    204: void;
};

export type ToggleVisibilityVenueActionResponse = ToggleVisibilityVenueActionResponses[keyof ToggleVisibilityVenueActionResponses];

export type GetWalletCollectionData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * The collection page number
         */
        page?: number;
        /**
         * The number of items per page
         */
        itemsPerPage?: number;
        /**
         * Filter by user, just use 'me' or a user id
         */
        user?: string;
        /**
         * Filter by contract, you can pass a coma-separated list of contract
         */
        contract?: string;
        /**
         * Wether all orderItem fees were collected or not
         */
        feeCollected?: boolean;
    };
    url: '/v1/wallets';
};

export type GetWalletCollectionResponses = {
    /**
     * Wallet collection
     */
    200: {
        'hydra:member': Array<WalletJsonldWalletRead>;
        'hydra:totalItems'?: number;
        'hydra:view'?: {
            '@id'?: string;
            '@type'?: string;
            'hydra:first'?: string;
            'hydra:last'?: string;
            'hydra:previous'?: string;
            'hydra:next'?: string;
        };
        'hydra:search'?: {
            '@type'?: string;
            'hydra:template'?: string;
            'hydra:variableRepresentation'?: string;
            'hydra:mapping'?: Array<{
                '@type'?: string;
                variable?: string;
                property?: string | null;
                required?: boolean;
            }>;
        };
    };
};

export type GetWalletCollectionResponse = GetWalletCollectionResponses[keyof GetWalletCollectionResponses];

export type PostWalletCollectionData = {
    /**
     * The new Wallet resource
     */
    body: WalletJsonldWalletCreate;
    path?: never;
    query?: never;
    url: '/v1/wallets';
};

export type PostWalletCollectionErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PostWalletCollectionResponses = {
    /**
     * Wallet resource created
     */
    201: WalletJsonldWalletRead;
};

export type PostWalletCollectionResponse = PostWalletCollectionResponses[keyof PostWalletCollectionResponses];

export type GetWalletItemData = {
    body?: never;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/wallets/{id}';
};

export type GetWalletItemErrors = {
    /**
     * Resource not found
     */
    404: unknown;
};

export type GetWalletItemResponses = {
    /**
     * Wallet resource
     */
    200: WalletJsonldWalletRead;
};

export type GetWalletItemResponse = GetWalletItemResponses[keyof GetWalletItemResponses];

export type PutWalletItemData = {
    /**
     * The updated Wallet resource
     */
    body: WalletJsonldWalletUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/wallets/{id}';
};

export type PutWalletItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutWalletItemResponses = {
    /**
     * Wallet resource updated
     */
    200: WalletJsonldWalletRead;
};

export type PutWalletItemResponse = PutWalletItemResponses[keyof PutWalletItemResponses];

export type PutStripeAuthCodeWalletItemData = {
    /**
     * The updated Wallet resource
     */
    body: WalletJsonldWalletUpdate;
    path: {
        /**
         * Resource identifier
         */
        id: string;
    };
    query?: never;
    url: '/v1/wallets/{id}/stripe-auth-code/{auth_code}';
};

export type PutStripeAuthCodeWalletItemErrors = {
    /**
     * Invalid input
     */
    400: unknown;
    /**
     * Resource not found
     */
    404: unknown;
    /**
     * Unprocessable entity
     */
    422: unknown;
};

export type PutStripeAuthCodeWalletItemResponses = {
    /**
     * Wallet resource updated
     */
    200: WalletJsonldWalletRead;
};

export type PutStripeAuthCodeWalletItemResponse = PutStripeAuthCodeWalletItemResponses[keyof PutStripeAuthCodeWalletItemResponses];