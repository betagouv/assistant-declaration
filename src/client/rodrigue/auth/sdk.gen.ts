// This file is auto-generated by @hey-api/openapi-ts

import type { Options } from '@hey-api/client-fetch';
import type { GetApiTokenTestAuthData, GetApiTokenTestAuthResponse, GetApiTokenByUsernameData, GetApiTokenByUsernameResponse, GetApiTokenByUsernameError, GetApiByStructureIdTokenByUsernameData, GetApiByStructureIdTokenByUsernameResponse, GetApiByStructureIdTokenByUsernameError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

/**
 * test the token
 * just a test
 *
 * curl -X 'GET' \
 * '/api/token/TestAuth' \
 * -H 'accept: **' \
 * -H 'Authorization: aaaaaaa'
 */
export const getApiTokenTestAuth = <ThrowOnError extends boolean = false>(options?: Options<GetApiTokenTestAuthData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiTokenTestAuthResponse, unknown, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        url: '/api/token/TestAuth',
        ...options
    });
};

/**
 * get partner token (1 hour)
 * get partner token
 *
 * curl -X 'GET' \
 * '/api/994/token/PartnerName' \
 * -H 'accept: application/json' \
 * -H 'Signature: Iw6xxxxxxxxxxxxxxxxxxVS1s='
 */
export const getApiTokenByUsername = <ThrowOnError extends boolean = false>(options: Options<GetApiTokenByUsernameData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiTokenByUsernameResponse, GetApiTokenByUsernameError, ThrowOnError>({
        url: '/api/token/{username}',
        ...options
    });
};

/**
 * get partner token (1 hour)
 * get partner token
 *
 * curl -X 'GET' \
 * '/api/994/token/PartnerName' \
 * -H 'accept: application/json' \
 * -H 'Signature: Iw6xxxxxxxxxxxxxxxxxxVS1s='
 */
export const getApiByStructureIdTokenByUsername = <ThrowOnError extends boolean = false>(options: Options<GetApiByStructureIdTokenByUsernameData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiByStructureIdTokenByUsernameResponse, GetApiByStructureIdTokenByUsernameError, ThrowOnError>({
        url: '/api/{structureId}/token/{username}',
        ...options
    });
};