generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
  previewFeatures = ["fullTextSearch", "views"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @unique @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  // user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @db.Uuid
  expires      DateTime

  // user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum VerificationTokenAction {
  RESET_PASSWORD
}

model VerificationToken {
  token      String                  @id
  action     VerificationTokenAction
  identifier String // Email or other user identifier
  expires    DateTime

  @@unique([token])
}
