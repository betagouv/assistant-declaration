import { eventsSeries } from '@ad/src/fixtures/event';
import { organizations } from '@ad/src/fixtures/organization';
import {
  SacemDeclarationSchema,
  SacemDeclarationSchemaType,
  SacemDeclarationWrapperSchema,
  SacemDeclarationWrapperSchemaType,
} from '@ad/src/models/entities/declaration';

export const sacemDeclarations: SacemDeclarationSchemaType[] = [
  SacemDeclarationSchema.parse({
    id: 'd79cb3ba-745e-5d9a-8903-4a02327a7e01',
    eventSerieId: eventsSeries[0].id,
    clientId: '23434',
    placeName: 'Salle Hermione',
    placeCapacity: 230,
    managerName: 'Jean Derrien',
    managerTitle: 'Directeur',
    organizationName: organizations[0].name,
    eventSerieName: eventsSeries[0].name,
    eventSerieStartAt: eventsSeries[0].startAt,
    eventSerieEndAt: eventsSeries[0].endAt,
    eventsCount: 4,
    paidTickets: 421,
    freeTickets: 53,
    includingTaxesAmount: 8883.1,
    excludingTaxesAmount: 8420,
  }),
  SacemDeclarationSchema.parse({
    id: 'd79cb3ba-745e-5d9a-8903-4a02327a7e02',
    eventSerieId: eventsSeries[1].id,
    clientId: '91384',
    placeName: 'Agora',
    placeCapacity: 40,
    managerName: 'John Doe',
    managerTitle: 'GÃ©rant',
    organizationName: organizations[1].name,
    eventSerieName: eventsSeries[1].name,
    eventSerieStartAt: eventsSeries[1].startAt,
    eventSerieEndAt: eventsSeries[1].endAt,
    eventsCount: 1,
    paidTickets: 35,
    freeTickets: 5,
    includingTaxesAmount: 422,
    excludingTaxesAmount: 400,
  }),
  SacemDeclarationSchema.parse({
    id: 'd79cb3ba-745e-5d9a-8903-4a02327a7e03',
    eventSerieId: eventsSeries[2].id,
    clientId: '12947',
    placeName: 'Grande salle',
    placeCapacity: 140,
    managerName: 'Alex Terrieur',
    managerTitle: 'Comptable',
    organizationName: organizations[2].name,
    eventSerieName: eventsSeries[2].name,
    eventSerieStartAt: eventsSeries[2].startAt,
    eventSerieEndAt: eventsSeries[2].endAt,
    eventsCount: 2,
    paidTickets: 204,
    freeTickets: 35,
    includingTaxesAmount: 7385,
    excludingTaxesAmount: 7000,
  }),
];

export const sacemDeclarationsWrappers: SacemDeclarationWrapperSchemaType[] = [
  SacemDeclarationWrapperSchema.parse({
    declaration: sacemDeclarations[0],
    placeholder: {
      clientId: [sacemDeclarations[0].clientId, sacemDeclarations[1].clientId],
      placeName: [sacemDeclarations[1].placeName],
      placeCapacity: [sacemDeclarations[0].placeCapacity, sacemDeclarations[2].placeCapacity],
      managerName: [sacemDeclarations[2].managerName],
      managerTitle: [sacemDeclarations[1].managerTitle, sacemDeclarations[2].managerTitle],
      organizationName: sacemDeclarations[0].organizationName,
      eventSerieName: sacemDeclarations[0].eventSerieName,
      eventSerieStartAt: sacemDeclarations[0].eventSerieStartAt,
      eventSerieEndAt: sacemDeclarations[0].eventSerieEndAt,
      eventsCount: sacemDeclarations[0].eventsCount,
      paidTickets: sacemDeclarations[0].paidTickets,
      freeTickets: sacemDeclarations[0].freeTickets,
      includingTaxesAmount: sacemDeclarations[0].includingTaxesAmount,
      excludingTaxesAmount: sacemDeclarations[0].excludingTaxesAmount,
    },
  }),
  SacemDeclarationWrapperSchema.parse({
    declaration: sacemDeclarations[1],
    placeholder: {
      clientId: [sacemDeclarations[0].clientId, sacemDeclarations[1].clientId],
      placeName: [sacemDeclarations[1].placeName],
      placeCapacity: [sacemDeclarations[0].placeCapacity, sacemDeclarations[2].placeCapacity],
      managerName: [sacemDeclarations[2].managerName],
      managerTitle: [sacemDeclarations[1].managerTitle, sacemDeclarations[2].managerTitle],
      organizationName: sacemDeclarations[1].organizationName,
      eventSerieName: sacemDeclarations[1].eventSerieName,
      eventSerieStartAt: sacemDeclarations[1].eventSerieStartAt,
      eventSerieEndAt: sacemDeclarations[1].eventSerieEndAt,
      eventsCount: sacemDeclarations[1].eventsCount,
      paidTickets: sacemDeclarations[1].paidTickets,
      freeTickets: sacemDeclarations[1].freeTickets,
      includingTaxesAmount: sacemDeclarations[1].includingTaxesAmount,
      excludingTaxesAmount: sacemDeclarations[1].excludingTaxesAmount,
    },
  }),
  SacemDeclarationWrapperSchema.parse({
    declaration: sacemDeclarations[2],
    placeholder: {
      clientId: [sacemDeclarations[0].clientId, sacemDeclarations[1].clientId],
      placeName: [sacemDeclarations[1].placeName],
      placeCapacity: [sacemDeclarations[0].placeCapacity, sacemDeclarations[2].placeCapacity],
      managerName: [sacemDeclarations[2].managerName],
      managerTitle: [sacemDeclarations[1].managerTitle, sacemDeclarations[2].managerTitle],
      organizationName: sacemDeclarations[2].organizationName,
      eventSerieName: sacemDeclarations[2].eventSerieName,
      eventSerieStartAt: sacemDeclarations[2].eventSerieStartAt,
      eventSerieEndAt: sacemDeclarations[2].eventSerieEndAt,
      eventsCount: sacemDeclarations[2].eventsCount,
      paidTickets: sacemDeclarations[2].paidTickets,
      freeTickets: sacemDeclarations[2].freeTickets,
      includingTaxesAmount: sacemDeclarations[2].includingTaxesAmount,
      excludingTaxesAmount: sacemDeclarations[2].excludingTaxesAmount,
    },
  }),
];
