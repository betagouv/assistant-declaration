import { places } from '@ad/src/fixtures/place';
import { DeclarationStatusSchema, DeclarationTypeSchema } from '@ad/src/models/entities/common';
import {
  AudienceSchema,
  EventSchema,
  EventSchemaType,
  EventSerieSchema,
  EventSerieSchemaType,
  EventSerieWrapperSchema,
  EventSerieWrapperSchemaType,
  EventWrapperSchema,
  EventWrapperSchemaType,
  PerformanceTypeSchema,
} from '@ad/src/models/entities/event';

export const eventsSeries: EventSerieSchemaType[] = [
  EventSerieSchema.parse({
    id: 'd79cb3ba-745e-5d9a-8903-4a02327a7e01',
    internalTicketingSystemId: '29389492',
    ticketingSystemId: 'e79cb3ba-745e-5d9a-8903-4a02327a7e01',
    name: 'Le cracheur de feu',
    producerOfficialId: '123456789',
    producerName: 'Les studios Culture',
    performanceType: PerformanceTypeSchema.enum.OUTDOOR_PERFORMANCE,
    expectedDeclarationTypes: [DeclarationTypeSchema.enum.SACEM],
    placeId: places[0].id,
    placeCapacity: 240,
    audience: AudienceSchema.enum.ALL,
    ticketingRevenueTaxRate: 0.055,
    expensesIncludingTaxes: 3000,
    expensesExcludingTaxes: 2500,
    expensesTaxRate: 0.2,
    introductionFeesExpensesIncludingTaxes: 480,
    introductionFeesExpensesExcludingTaxes: 400,
    introductionFeesExpensesTaxRate: 0.2,
    circusSpecificExpensesIncludingTaxes: 0,
    circusSpecificExpensesExcludingTaxes: 0,
    circusSpecificExpensesTaxRate: 0.2,
    createdAt: new Date('December 17, 2024 03:24:00 UTC'),
    updatedAt: new Date('December 18, 2024 04:33:00 UTC'),
  }),
  EventSerieSchema.parse({
    id: 'd79cb3ba-745e-5d9a-8903-4a02327a7e02',
    internalTicketingSystemId: '49294029',
    ticketingSystemId: 'e79cb3ba-745e-5d9a-8903-4a02327a7e01',
    name: 'Il Ã©tait une fois...',
    producerOfficialId: '123456780',
    producerName: 'Les studios de Bretagne',
    performanceType: PerformanceTypeSchema.enum.POPULAR_AND_JAZZ_MUSIC,
    expectedDeclarationTypes: [DeclarationTypeSchema.enum.SACEM, DeclarationTypeSchema.enum.SACD],
    placeId: places[1].id,
    placeCapacity: 124,
    audience: AudienceSchema.enum.YOUNG,
    ticketingRevenueTaxRate: 0.055,
    expensesIncludingTaxes: 1560,
    expensesExcludingTaxes: 1300,
    expensesTaxRate: null,
    introductionFeesExpensesIncludingTaxes: 240,
    introductionFeesExpensesExcludingTaxes: 200,
    introductionFeesExpensesTaxRate: 0.2,
    circusSpecificExpensesIncludingTaxes: 384,
    circusSpecificExpensesExcludingTaxes: 320,
    circusSpecificExpensesTaxRate: 0.2,
    createdAt: new Date('December 17, 2024 03:24:00 UTC'),
    updatedAt: new Date('December 18, 2024 04:33:00 UTC'),
  }),
  EventSerieSchema.parse({
    id: 'd79cb3ba-745e-5d9a-8903-4a02327a7e03',
    internalTicketingSystemId: '93819240',
    ticketingSystemId: 'e79cb3ba-745e-5d9a-8903-4a02327a7e01',
    name: 'Le climat',
    producerOfficialId: null,
    producerName: null,
    performanceType: null,
    expectedDeclarationTypes: [DeclarationTypeSchema.enum.SACEM],
    placeId: null,
    placeCapacity: null,
    audience: AudienceSchema.enum.ALL,
    ticketingRevenueTaxRate: 0.055,
    expensesIncludingTaxes: 0,
    expensesExcludingTaxes: 0,
    expensesTaxRate: null,
    introductionFeesExpensesIncludingTaxes: 0,
    introductionFeesExpensesExcludingTaxes: 0,
    introductionFeesExpensesTaxRate: null,
    circusSpecificExpensesIncludingTaxes: 0,
    circusSpecificExpensesExcludingTaxes: 0,
    circusSpecificExpensesTaxRate: null,
    createdAt: new Date('December 17, 2024 03:24:00 UTC'),
    updatedAt: new Date('December 18, 2024 04:33:00 UTC'),
  }),
];

export const events: EventSchemaType[] = [
  EventSchema.parse({
    id: 'e79cb3ba-745e-5d9a-8903-4a02327a7e01',
    internalTicketingSystemId: '82402934',
    eventSerieId: 'd79cb3ba-745e-5d9a-8903-4a02327a7e01',
    startAt: new Date('December 1, 2024 10:00:00 UTC'),
    endAt: new Date('December 20, 2024 21:00:00 UTC'),
    ticketingRevenueIncludingTaxes: 105.5,
    ticketingRevenueExcludingTaxes: 100,
    consumptionsRevenueIncludingTaxes: 60,
    consumptionsRevenueExcludingTaxes: 50,
    consumptionsRevenueTaxRate: 0.2,
    cateringRevenueIncludingTaxes: 110.4,
    cateringRevenueExcludingTaxes: 92,
    cateringRevenueTaxRate: 0.1,
    programSalesRevenueIncludingTaxes: 63.6,
    programSalesRevenueExcludingTaxes: 53,
    programSalesRevenueTaxRate: 0.2,
    otherRevenueIncludingTaxes: 162,
    otherRevenueExcludingTaxes: 135,
    otherRevenueTaxRate: 0.2,
    freeTickets: 9,
    paidTickets: 10,
    placeOverrideId: places[1].id,
    placeCapacityOverride: null,
    audienceOverride: null,
    ticketingRevenueTaxRateOverride: null,
    createdAt: new Date('December 17, 2024 03:24:00 UTC'),
    updatedAt: new Date('December 18, 2024 04:33:00 UTC'),
  }),
  EventSchema.parse({
    id: 'e79cb3ba-745e-5d9a-8903-4a02327a7e02',
    internalTicketingSystemId: '19382193',
    eventSerieId: 'd79cb3ba-745e-5d9a-8903-4a02327a7e01',
    startAt: new Date('December 2, 2024 14:00:00 UTC'),
    endAt: new Date('December 2, 2024 15:00:00 UTC'),
    ticketingRevenueIncludingTaxes: 263.75,
    ticketingRevenueExcludingTaxes: 250,
    consumptionsRevenueIncludingTaxes: 60,
    consumptionsRevenueExcludingTaxes: 50,
    consumptionsRevenueTaxRate: 0.2,
    cateringRevenueIncludingTaxes: 110.4,
    cateringRevenueExcludingTaxes: 92,
    cateringRevenueTaxRate: 0.1,
    programSalesRevenueIncludingTaxes: 63.6,
    programSalesRevenueExcludingTaxes: 53,
    programSalesRevenueTaxRate: 0.2,
    otherRevenueIncludingTaxes: 162,
    otherRevenueExcludingTaxes: 135,
    otherRevenueTaxRate: 0.2,
    freeTickets: 35,
    paidTickets: 43,
    placeOverrideId: null,
    placeCapacityOverride: 92,
    audienceOverride: AudienceSchema.enum.YOUNG,
    ticketingRevenueTaxRateOverride: null,
    createdAt: new Date('December 17, 2024 03:24:00 UTC'),
    updatedAt: new Date('December 18, 2024 04:33:00 UTC'),
  }),
  EventSchema.parse({
    id: 'e79cb3ba-745e-5d9a-8903-4a02327a7e03',
    internalTicketingSystemId: '93829128',
    eventSerieId: 'd79cb3ba-745e-5d9a-8903-4a02327a7e01',
    startAt: new Date('December 10, 2024 20:30:00 UTC'),
    endAt: new Date('December 15, 2024 22:00:00 UTC'),
    ticketingRevenueIncludingTaxes: 1021,
    ticketingRevenueExcludingTaxes: 1000,
    consumptionsRevenueIncludingTaxes: 0,
    consumptionsRevenueExcludingTaxes: 0,
    consumptionsRevenueTaxRate: 0.2,
    cateringRevenueIncludingTaxes: 0,
    cateringRevenueExcludingTaxes: 0,
    cateringRevenueTaxRate: 0.1,
    programSalesRevenueIncludingTaxes: 0,
    programSalesRevenueExcludingTaxes: 0,
    programSalesRevenueTaxRate: 0.2,
    otherRevenueIncludingTaxes: 0,
    otherRevenueExcludingTaxes: 0,
    otherRevenueTaxRate: 0.2,
    freeTickets: 86,
    paidTickets: 99,
    placeOverrideId: places[2].id,
    placeCapacityOverride: null,
    audienceOverride: null,
    ticketingRevenueTaxRateOverride: 0.021,
    createdAt: new Date('December 17, 2024 03:24:00 UTC'),
    updatedAt: new Date('December 18, 2024 04:33:00 UTC'),
  }),
];

export const eventsWrappers: EventWrapperSchemaType[] = [
  EventWrapperSchema.parse({
    event: events[0],
    placeOverride: places[1],
  }),
  EventWrapperSchema.parse({
    event: events[1],
    placeOverride: null,
  }),
  EventWrapperSchema.parse({
    event: events[2],
    placeOverride: places[2],
  }),
];

export const eventsSeriesWrappers: EventSerieWrapperSchemaType[] = [
  EventSerieWrapperSchema.parse({
    serie: eventsSeries[0],
    computedStartAt: new Date('December 1, 2024 10:00:00 UTC'),
    computedEndAt: new Date('December 3, 2024 16:00:00 UTC'),
    place: places[0],
    partialDeclarations: [
      {
        type: DeclarationTypeSchema.enum.SACEM,
        status: DeclarationStatusSchema.enum.PROCESSED,
        transmittedAt: null,
      },
    ],
  }),
  EventSerieWrapperSchema.parse({
    serie: eventsSeries[1],
    computedStartAt: new Date('December 1, 2024 10:00:00 UTC'),
    computedEndAt: new Date('December 1, 2024 12:00:00 UTC'),
    place: places[1],
    partialDeclarations: [],
  }),
  EventSerieWrapperSchema.parse({
    serie: eventsSeries[2],
    computedStartAt: new Date('December 1, 2024 20:00:00 UTC'),
    computedEndAt: new Date('December 10, 2024 22:00:00 UTC'),
    place: null,
    partialDeclarations: [
      {
        type: DeclarationTypeSchema.enum.SACEM,
        status: DeclarationStatusSchema.enum.PENDING,
        transmittedAt: new Date('December 31, 2024 10:00:00 UTC'),
      },
    ],
  }),
];
